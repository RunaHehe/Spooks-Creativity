// Generated by Haxe 4.3.2
#include <hxcpp.h>

#ifndef INCLUDED_CoolUtil
#include <CoolUtil.h>
#endif
#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_lime_system_System
#include <lime/system/System.h>
#endif
#ifndef INCLUDED_mobile_StorageUtil
#include <mobile/StorageUtil.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <sys/FileSystem.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_4ac275157e7a7737_27_getStorageDirectory,"mobile.StorageUtil","getStorageDirectory",0x1a87ae2b,"mobile.StorageUtil.getStorageDirectory","mobile/StorageUtil.hx",27,0x0c02486e)
HX_LOCAL_STACK_FRAME(_hx_pos_4ac275157e7a7737_43_createDirectories,"mobile.StorageUtil","createDirectories",0xb86ec172,"mobile.StorageUtil.createDirectories","mobile/StorageUtil.hx",43,0x0c02486e)
HX_LOCAL_STACK_FRAME(_hx_pos_4ac275157e7a7737_81_saveContent,"mobile.StorageUtil","saveContent",0x3f0b523f,"mobile.StorageUtil.saveContent","mobile/StorageUtil.hx",81,0x0c02486e)
HX_LOCAL_STACK_FRAME(_hx_pos_4ac275157e7a7737_24_boot,"mobile.StorageUtil","boot",0x4086330f,"mobile.StorageUtil.boot","mobile/StorageUtil.hx",24,0x0c02486e)
namespace mobile{

void StorageUtil_obj::__construct() { }

Dynamic StorageUtil_obj::__CreateEmpty() { return new StorageUtil_obj; }

void *StorageUtil_obj::_hx_vtable = 0;

Dynamic StorageUtil_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< StorageUtil_obj > _hx_result = new StorageUtil_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool StorageUtil_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x49b157d3;
}

::String StorageUtil_obj::rootDir;

::String StorageUtil_obj::getStorageDirectory( ::Dynamic __o_force){
            		 ::Dynamic force = __o_force;
            		if (::hx::IsNull(__o_force)) force = false;
            	HX_STACKFRAME(&_hx_pos_4ac275157e7a7737_27_getStorageDirectory)
HXLINE(  28)		::String daPath = HX_("",00,00,00,00);
HXLINE(  39)		return daPath;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StorageUtil_obj,getStorageDirectory,return )

void StorageUtil_obj::createDirectories(::String directory){
            	HX_STACKFRAME(&_hx_pos_4ac275157e7a7737_43_createDirectories)
HXLINE(  44)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE(  45)			bool _hx_tmp;
HXDLIN(  45)			if (::sys::FileSystem_obj::exists(directory)) {
HXLINE(  45)				_hx_tmp = ::sys::FileSystem_obj::isDirectory(directory);
            			}
            			else {
HXLINE(  45)				_hx_tmp = false;
            			}
HXDLIN(  45)			if (_hx_tmp) {
HXLINE(  46)				return;
            			}
            		} catch( ::Dynamic _hx_e) {
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic _g = _hx_e;
HXLINE(  47)				 ::haxe::Exception e = ::haxe::Exception_obj::caught(_g);
HXLINE(  48)				{
HXLINE(  48)					 ::Dynamic _hx_tmp1 = ::haxe::Log_obj::trace;
HXDLIN(  48)					::String _hx_tmp2 = ((HX_("Something went wrong while looking at directory. (",11,dd,8b,cf) + e->get_message()) + HX_(")",29,00,00,00));
HXDLIN(  48)					_hx_tmp1(_hx_tmp2,::hx::SourceInfo(HX_("source/mobile/StorageUtil.hx",fa,5c,c9,4a),48,HX_("mobile.StorageUtil",b1,1e,c2,97),HX_("createDirectories",6f,36,cd,b3)));
            				}
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXLINE(  51)		::String total = HX_("",00,00,00,00);
HXLINE(  52)		if ((directory.substr(0,1) == HX_("/",2f,00,00,00))) {
HXLINE(  53)			total = HX_("/",2f,00,00,00);
            		}
HXLINE(  55)		::Array< ::String > parts = directory.split(HX_("/",2f,00,00,00));
HXLINE(  56)		bool _hx_tmp3;
HXDLIN(  56)		if ((parts->length > 0)) {
HXLINE(  56)			_hx_tmp3 = (parts->__get(0).indexOf(HX_(":",3a,00,00,00),null()) > -1);
            		}
            		else {
HXLINE(  56)			_hx_tmp3 = false;
            		}
HXDLIN(  56)		if (_hx_tmp3) {
HXLINE(  57)			parts->shift();
            		}
HXLINE(  59)		{
HXLINE(  59)			int _g1 = 0;
HXDLIN(  59)			while((_g1 < parts->length)){
HXLINE(  59)				::String part = parts->__get(_g1);
HXDLIN(  59)				_g1 = (_g1 + 1);
HXLINE(  61)				bool _hx_tmp4;
HXDLIN(  61)				if ((part != HX_(".",2e,00,00,00))) {
HXLINE(  61)					_hx_tmp4 = (part != HX_("",00,00,00,00));
            				}
            				else {
HXLINE(  61)					_hx_tmp4 = false;
            				}
HXDLIN(  61)				if (_hx_tmp4) {
HXLINE(  63)					bool _hx_tmp5;
HXDLIN(  63)					if ((total != HX_("",00,00,00,00))) {
HXLINE(  63)						_hx_tmp5 = (total != HX_("/",2f,00,00,00));
            					}
            					else {
HXLINE(  63)						_hx_tmp5 = false;
            					}
HXDLIN(  63)					if (_hx_tmp5) {
HXLINE(  64)						total = (total + HX_("/",2f,00,00,00));
            					}
HXLINE(  66)					total = (total + part);
HXLINE(  68)					try {
            						HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE(  70)						if (!(::sys::FileSystem_obj::exists(total))) {
HXLINE(  71)							::sys::FileSystem_obj::createDirectory(total);
            						}
            					} catch( ::Dynamic _hx_e) {
            						if (_hx_e.IsClass<  ::Dynamic >() ){
            							HX_STACK_BEGIN_CATCH
            							 ::Dynamic _g2 = _hx_e;
HXLINE(  73)							 ::haxe::Exception e1 = ::haxe::Exception_obj::caught(_g2);
HXLINE(  74)							{
HXLINE(  74)								 ::Dynamic _hx_tmp6 = ::haxe::Log_obj::trace;
HXDLIN(  74)								::String _hx_tmp7 = (HX_("Error while creating directory. (",89,e4,53,2b) + e1->get_message());
HXDLIN(  74)								_hx_tmp6(_hx_tmp7,::hx::SourceInfo(HX_("source/mobile/StorageUtil.hx",fa,5c,c9,4a),74,HX_("mobile.StorageUtil",b1,1e,c2,97),HX_("createDirectories",6f,36,cd,b3)));
            							}
            						}
            						else {
            							HX_STACK_DO_THROW(_hx_e);
            						}
            					}
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StorageUtil_obj,createDirectories,(void))

void StorageUtil_obj::saveContent(::String __o_fileName,::String __o_fileData){
            		::String fileName = __o_fileName;
            		if (::hx::IsNull(__o_fileName)) fileName = HX_("file",7c,ce,bb,43);
            		::String fileData = __o_fileData;
            		if (::hx::IsNull(__o_fileData)) fileData = HX_("You forgor to add somethin' in yo code :3",91,a6,49,5f);
            	HX_STACKFRAME(&_hx_pos_4ac275157e7a7737_81_saveContent)
HXDLIN(  81)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE(  83)			if (!(::sys::FileSystem_obj::exists(HX_("saves",96,4a,8c,77)))) {
HXLINE(  84)				::sys::FileSystem_obj::createDirectory(HX_("saves",96,4a,8c,77));
            			}
HXLINE(  86)			::sys::io::File_obj::saveContent((HX_("saves/",d9,f8,34,23) + fileName),fileData);
HXLINE(  87)			::CoolUtil_obj::showPopUp((fileName + HX_(" file has been saved.",31,a1,e4,92)),HX_("Success!",1e,a1,c4,65));
            		} catch( ::Dynamic _hx_e) {
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic _g = _hx_e;
HXLINE(  89)				 ::haxe::Exception e = ::haxe::Exception_obj::caught(_g);
HXLINE(  90)				{
HXLINE(  90)					 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN(  90)					::String _hx_tmp1 = ((HX_("File couldn't be saved. (",6a,5a,1c,b5) + e->get_message()) + HX_(")",29,00,00,00));
HXDLIN(  90)					_hx_tmp(_hx_tmp1,::hx::SourceInfo(HX_("source/mobile/StorageUtil.hx",fa,5c,c9,4a),90,HX_("mobile.StorageUtil",b1,1e,c2,97),HX_("saveContent",7c,bb,17,73)));
            				}
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StorageUtil_obj,saveContent,(void))


StorageUtil_obj::StorageUtil_obj()
{
}

bool StorageUtil_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"rootDir") ) { outValue = ( rootDir ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"saveContent") ) { outValue = saveContent_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"createDirectories") ) { outValue = createDirectories_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"getStorageDirectory") ) { outValue = getStorageDirectory_dyn(); return true; }
	}
	return false;
}

bool StorageUtil_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"rootDir") ) { rootDir=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *StorageUtil_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo StorageUtil_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &StorageUtil_obj::rootDir,HX_("rootDir",4b,08,87,1c)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void StorageUtil_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(StorageUtil_obj::rootDir,"rootDir");
};

#ifdef HXCPP_VISIT_ALLOCS
static void StorageUtil_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(StorageUtil_obj::rootDir,"rootDir");
};

#endif

::hx::Class StorageUtil_obj::__mClass;

static ::String StorageUtil_obj_sStaticFields[] = {
	HX_("rootDir",4b,08,87,1c),
	HX_("getStorageDirectory",68,1c,2b,82),
	HX_("createDirectories",6f,36,cd,b3),
	HX_("saveContent",7c,bb,17,73),
	::String(null())
};

void StorageUtil_obj::__register()
{
	StorageUtil_obj _hx_dummy;
	StorageUtil_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("mobile.StorageUtil",b1,1e,c2,97);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &StorageUtil_obj::__GetStatic;
	__mClass->mSetStaticField = &StorageUtil_obj::__SetStatic;
	__mClass->mMarkFunc = StorageUtil_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(StorageUtil_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< StorageUtil_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = StorageUtil_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StorageUtil_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StorageUtil_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void StorageUtil_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_4ac275157e7a7737_24_boot)
HXDLIN(  24)		rootDir = ::lime::_hx_system::System_obj::get_applicationStorageDirectory();
            	}
}

} // end namespace mobile

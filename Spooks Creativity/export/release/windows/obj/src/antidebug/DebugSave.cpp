// Generated by Haxe 4.3.2
#include <hxcpp.h>

#ifndef INCLUDED_ClientPrefs
#include <ClientPrefs.h>
#endif
#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_antidebug_DebugSave
#include <antidebug/DebugSave.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_openfl_utils_Assets
#include <openfl/utils/Assets.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <sys/FileSystem.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_49a6019212a76934_20_loadAntiDebug,"antidebug.DebugSave","loadAntiDebug",0xdad88670,"antidebug.DebugSave.loadAntiDebug","antidebug/DebugSave.hx",20,0xd3049e4c)
HX_LOCAL_STACK_FRAME(_hx_pos_49a6019212a76934_26_reloadFilesOnSource,"antidebug.DebugSave","reloadFilesOnSource",0x3d9841bd,"antidebug.DebugSave.reloadFilesOnSource","antidebug/DebugSave.hx",26,0xd3049e4c)
HX_LOCAL_STACK_FRAME(_hx_pos_49a6019212a76934_64_updateFolder,"antidebug.DebugSave","updateFolder",0x23587b12,"antidebug.DebugSave.updateFolder","antidebug/DebugSave.hx",64,0xd3049e4c)
HX_LOCAL_STACK_FRAME(_hx_pos_49a6019212a76934_103_updateScriptsMod,"antidebug.DebugSave","updateScriptsMod",0x36720dfe,"antidebug.DebugSave.updateScriptsMod","antidebug/DebugSave.hx",103,0xd3049e4c)
HX_LOCAL_STACK_FRAME(_hx_pos_49a6019212a76934_134_updateStages,"antidebug.DebugSave","updateStages",0x2fba0059,"antidebug.DebugSave.updateStages","antidebug/DebugSave.hx",134,0xd3049e4c)
HX_LOCAL_STACK_FRAME(_hx_pos_49a6019212a76934_16_boot,"antidebug.DebugSave","boot",0x7b286ead,"antidebug.DebugSave.boot","antidebug/DebugSave.hx",16,0xd3049e4c)
HX_LOCAL_STACK_FRAME(_hx_pos_49a6019212a76934_17_boot,"antidebug.DebugSave","boot",0x7b286ead,"antidebug.DebugSave.boot","antidebug/DebugSave.hx",17,0xd3049e4c)
HX_LOCAL_STACK_FRAME(_hx_pos_49a6019212a76934_18_boot,"antidebug.DebugSave","boot",0x7b286ead,"antidebug.DebugSave.boot","antidebug/DebugSave.hx",18,0xd3049e4c)
HX_LOCAL_STACK_FRAME(_hx_pos_49a6019212a76934_100_boot,"antidebug.DebugSave","boot",0x7b286ead,"antidebug.DebugSave.boot","antidebug/DebugSave.hx",100,0xd3049e4c)
HX_LOCAL_STACK_FRAME(_hx_pos_49a6019212a76934_101_boot,"antidebug.DebugSave","boot",0x7b286ead,"antidebug.DebugSave.boot","antidebug/DebugSave.hx",101,0xd3049e4c)
static const ::String _hx_array_data_d34587d3_20[] = {
	HX_("0_LibraryPath.lua",1b,c7,0c,b4),HX_("death.lua",7e,63,a2,1a),
};
HX_LOCAL_STACK_FRAME(_hx_pos_49a6019212a76934_102_boot,"antidebug.DebugSave","boot",0x7b286ead,"antidebug.DebugSave.boot","antidebug/DebugSave.hx",102,0xd3049e4c)
static const ::String _hx_array_data_d34587d3_22[] = {
	HX_("Beat.lua",e0,ba,cc,d8),HX_("SpriteUtil.lua",91,e4,d1,3e),HX_("Timer.lua",6f,90,fe,85),HX_("TweenModule.lua",21,2f,00,51),
};
HX_LOCAL_STACK_FRAME(_hx_pos_49a6019212a76934_132_boot,"antidebug.DebugSave","boot",0x7b286ead,"antidebug.DebugSave.boot","antidebug/DebugSave.hx",132,0xd3049e4c)
HX_LOCAL_STACK_FRAME(_hx_pos_49a6019212a76934_133_boot,"antidebug.DebugSave","boot",0x7b286ead,"antidebug.DebugSave.boot","antidebug/DebugSave.hx",133,0xd3049e4c)
static const ::String _hx_array_data_d34587d3_25[] = {
	HX_("ammarvoid",86,d5,36,b7),HX_("demonbg",70,8c,cd,ac),HX_("discordStage",72,91,27,e3),HX_("hackerstage",70,b3,b6,32),HX_("HQ",09,3f,00,00),HX_("kaijuparadise",d5,56,0c,6c),HX_("malfunction",b0,0d,16,cd),HX_("scratch",3a,41,9d,27),HX_("twitterStage",4b,d3,cb,24),HX_("youtubeStage",db,98,e1,f3),
};
namespace antidebug{

void DebugSave_obj::__construct() { }

Dynamic DebugSave_obj::__CreateEmpty() { return new DebugSave_obj; }

void *DebugSave_obj::_hx_vtable = 0;

Dynamic DebugSave_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DebugSave_obj > _hx_result = new DebugSave_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DebugSave_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x131430cf;
}

::Array< ::String > DebugSave_obj::folderInSongData;

::Array< ::String > DebugSave_obj::filesInStages;

bool DebugSave_obj::anticheat;

void DebugSave_obj::loadAntiDebug(){
            	HX_STACKFRAME(&_hx_pos_49a6019212a76934_20_loadAntiDebug)
HXDLIN(  20)		::antidebug::DebugSave_obj::reloadFilesOnSource();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(DebugSave_obj,loadAntiDebug,(void))

void DebugSave_obj::reloadFilesOnSource(){
            	HX_STACKFRAME(&_hx_pos_49a6019212a76934_26_reloadFilesOnSource)
HXLINE(  28)		if (!(::antidebug::DebugSave_obj::anticheat)) {
HXLINE(  28)			return;
            		}
HXLINE(  29)		::antidebug::DebugSave_obj::folderInSongData = ::Array_obj< ::String >::__new(0);
HXDLIN(  29)		::antidebug::DebugSave_obj::filesInStages = ::Array_obj< ::String >::__new(0);
HXLINE(  30)		::Array< ::String > allembed = ::openfl::utils::Assets_obj::list(HX_("TEXT",ad,94,ba,37));
HXLINE(  31)		::Array< ::String > newArrayEmbed = ::Array_obj< ::String >::__new(0);
HXLINE(  32)		{
HXLINE(  32)			int _g = 0;
HXDLIN(  32)			while((_g < allembed->length)){
HXLINE(  32)				::String file = allembed->__get(_g);
HXDLIN(  32)				_g = (_g + 1);
HXLINE(  33)				if (::StringTools_obj::startsWith(file,HX_("songdata/",d0,e6,d4,70))) {
HXLINE(  34)					newArrayEmbed->push(file);
            				}
            				else {
HXLINE(  35)					if (::StringTools_obj::startsWith(file,HX_("stages_embed/",80,3e,9e,11))) {
HXLINE(  36)						::antidebug::DebugSave_obj::filesInStages->push(file);
            					}
            				}
            			}
            		}
HXLINE(  39)		::antidebug::DebugSave_obj::folderInSongData = newArrayEmbed;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(DebugSave_obj,reloadFilesOnSource,(void))

void DebugSave_obj::updateFolder(::String __o__songName){
            		::String _songName = __o__songName;
            		if (::hx::IsNull(__o__songName)) _songName = HX_("discord-annoyer",97,ac,58,20);
            	HX_GC_STACKFRAME(&_hx_pos_49a6019212a76934_64_updateFolder)
HXLINE(  65)		bool _hx_tmp;
HXDLIN(  65)		if (!(::ClientPrefs_obj::developer)) {
HXLINE(  65)			_hx_tmp = !(::antidebug::DebugSave_obj::anticheat);
            		}
            		else {
HXLINE(  65)			_hx_tmp = true;
            		}
HXDLIN(  65)		if (_hx_tmp) {
HXLINE(  65)			return;
            		}
HXLINE(  67)		 ::EReg invalidChars =  ::EReg_obj::__alloc( HX_CTX ,HX_("[~&\\\\;:<>#]",7e,4d,88,67),HX_("",00,00,00,00));
HXDLIN(  67)		 ::EReg hideChars =  ::EReg_obj::__alloc( HX_CTX ,HX_("[.,'\"%?!]",ca,d9,c0,ac),HX_("",00,00,00,00));
HXDLIN(  67)		::String path = invalidChars->split(::StringTools_obj::replace(_songName,HX_(" ",20,00,00,00),HX_("-",2d,00,00,00)))->join(HX_("-",2d,00,00,00));
HXDLIN(  67)		::String songName = hideChars->split(path)->join(HX_("",00,00,00,00)).toLowerCase();
HXLINE(  68)		::String pathOG = (HX_("songdata/",d0,e6,d4,70) + songName);
HXLINE(  69)		::String path1 = (HX_("assets/data/",f9,10,73,a0) + songName);
HXLINE(  71)		::haxe::Log_obj::trace((((HX_("replacing... ",63,93,52,03) + songName) + HX_(" at ",ad,d3,70,15)) + path1),::hx::SourceInfo(HX_("source/antidebug/DebugSave.hx",40,84,6f,82),71,HX_("antidebug.DebugSave",d3,87,45,d3),HX_("updateFolder",97,1d,54,f9)));
HXLINE(  74)		::Array< ::String > filesInFolder = ::sys::FileSystem_obj::readDirectory(path1);
HXLINE(  75)		::Array< ::String > filesInFolderOG = ::Array_obj< ::String >::__new(0);
HXLINE(  76)		{
HXLINE(  76)			int _g = 0;
HXDLIN(  76)			::Array< ::String > _g1 = ::antidebug::DebugSave_obj::folderInSongData;
HXDLIN(  76)			while((_g < _g1->length)){
HXLINE(  76)				::String file = _g1->__get(_g);
HXDLIN(  76)				_g = (_g + 1);
HXLINE(  77)				if (::StringTools_obj::startsWith(file,(HX_("songdata/",d0,e6,d4,70) + songName))) {
HXLINE(  77)					filesInFolderOG->push(file);
            				}
            			}
            		}
HXLINE(  80)		{
HXLINE(  80)			int _g2 = 0;
HXDLIN(  80)			while((_g2 < filesInFolder->length)){
HXLINE(  80)				::String file1 = filesInFolder->__get(_g2);
HXDLIN(  80)				_g2 = (_g2 + 1);
HXLINE(  81)				::String daPath = (((HX_("",00,00,00,00) + path1) + HX_("/",2f,00,00,00)) + file1);
HXLINE(  82)				::sys::FileSystem_obj::deleteFile(daPath);
            			}
            		}
HXLINE(  84)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE(  85)			int _g3 = 0;
HXDLIN(  85)			while((_g3 < filesInFolderOG->length)){
HXLINE(  85)				::String file2 = filesInFolderOG->__get(_g3);
HXDLIN(  85)				_g3 = (_g3 + 1);
HXLINE(  86)				::String text = ::openfl::utils::Assets_obj::getText(file2);
HXLINE(  87)				::sys::io::File_obj::saveContent(::StringTools_obj::replace(file2,HX_("songdata",7f,88,62,45),HX_("assets/data",76,96,10,ae)),text);
            			}
            		} catch( ::Dynamic _hx_e) {
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic _g4 = _hx_e;
HXLINE(  90)				{
HXLINE(  90)					null();
            				}
HXDLIN(  90)				 ::Dynamic e = _g4;
HXLINE(  91)				::haxe::Log_obj::trace(e,::hx::SourceInfo(HX_("source/antidebug/DebugSave.hx",40,84,6f,82),91,HX_("antidebug.DebugSave",d3,87,45,d3),HX_("updateFolder",97,1d,54,f9)));
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXLINE(  94)		::haxe::Log_obj::trace(((HX_("replaced ",70,14,f2,fb) + songName) + HX_("'s successfully",9b,05,ac,7f)),::hx::SourceInfo(HX_("source/antidebug/DebugSave.hx",40,84,6f,82),94,HX_("antidebug.DebugSave",d3,87,45,d3),HX_("updateFolder",97,1d,54,f9)));
HXLINE(  95)		::antidebug::DebugSave_obj::updateScriptsMod();
HXLINE(  96)		::antidebug::DebugSave_obj::updateStages();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DebugSave_obj,updateFolder,(void))

::String DebugSave_obj::scriptPath;

::Array< ::String > DebugSave_obj::scripts;

::Array< ::String > DebugSave_obj::scriptsModule;

void DebugSave_obj::updateScriptsMod(){
            	HX_STACKFRAME(&_hx_pos_49a6019212a76934_103_updateScriptsMod)
HXLINE( 105)		::Array< ::String > filesInFolder = ::sys::FileSystem_obj::readDirectory(::antidebug::DebugSave_obj::scriptPath);
HXLINE( 107)		{
HXLINE( 107)			int _g = 0;
HXDLIN( 107)			while((_g < filesInFolder->length)){
HXLINE( 107)				::String file = filesInFolder->__get(_g);
HXDLIN( 107)				_g = (_g + 1);
HXLINE( 108)				::String daPath = (((HX_("",00,00,00,00) + ::antidebug::DebugSave_obj::scriptPath) + HX_("/",2f,00,00,00)) + file);
HXLINE( 109)				if (::sys::FileSystem_obj::isDirectory(daPath)) {
HXLINE( 110)					::Array< ::String > filesInFolder2 = ::sys::FileSystem_obj::readDirectory(daPath);
HXLINE( 111)					{
HXLINE( 111)						int _g1 = 0;
HXDLIN( 111)						while((_g1 < filesInFolder2->length)){
HXLINE( 111)							::String file2 = filesInFolder2->__get(_g1);
HXDLIN( 111)							_g1 = (_g1 + 1);
HXLINE( 112)							::sys::FileSystem_obj::deleteFile((((HX_("",00,00,00,00) + daPath) + HX_("/",2f,00,00,00)) + file2));
            						}
            					}
            				}
            				else {
HXLINE( 115)					::sys::FileSystem_obj::deleteFile(daPath);
            				}
            			}
            		}
HXLINE( 119)		{
HXLINE( 119)			int _g2 = 0;
HXDLIN( 119)			::Array< ::String > _g3 = ::antidebug::DebugSave_obj::scripts;
HXDLIN( 119)			while((_g2 < _g3->length)){
HXLINE( 119)				::String file1 = _g3->__get(_g2);
HXDLIN( 119)				_g2 = (_g2 + 1);
HXLINE( 120)				::String text = ::openfl::utils::Assets_obj::getText((HX_("scripts_embed/",cd,b6,aa,cb) + file1));
HXLINE( 121)				::sys::io::File_obj::saveContent((((HX_("",00,00,00,00) + ::antidebug::DebugSave_obj::scriptPath) + HX_("/",2f,00,00,00)) + file1),text);
            			}
            		}
HXLINE( 123)		{
HXLINE( 123)			int _g4 = 0;
HXDLIN( 123)			::Array< ::String > _g5 = ::antidebug::DebugSave_obj::scriptsModule;
HXDLIN( 123)			while((_g4 < _g5->length)){
HXLINE( 123)				::String file3 = _g5->__get(_g4);
HXDLIN( 123)				_g4 = (_g4 + 1);
HXLINE( 124)				::String text1 = ::openfl::utils::Assets_obj::getText((HX_("scripts_embed/modules/",d5,e7,2c,15) + file3));
HXLINE( 125)				::sys::io::File_obj::saveContent((((HX_("",00,00,00,00) + ::antidebug::DebugSave_obj::scriptPath) + HX_("/modules/",37,63,dd,bd)) + file3),text1);
            			}
            		}
HXLINE( 128)		::haxe::Log_obj::trace(HX_("- Replace Scripts",e9,19,aa,3d),::hx::SourceInfo(HX_("source/antidebug/DebugSave.hx",40,84,6f,82),128,HX_("antidebug.DebugSave",d3,87,45,d3),HX_("updateScriptsMod",03,d7,31,a4)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(DebugSave_obj,updateScriptsMod,(void))

::String DebugSave_obj::stagesPath;

::Array< ::String > DebugSave_obj::stages;

void DebugSave_obj::updateStages(){
            	HX_STACKFRAME(&_hx_pos_49a6019212a76934_134_updateStages)
HXLINE( 136)		::Array< ::String > filesInFolder = ::sys::FileSystem_obj::readDirectory(::antidebug::DebugSave_obj::stagesPath);
HXLINE( 137)		{
HXLINE( 137)			int _g = 0;
HXDLIN( 137)			while((_g < filesInFolder->length)){
HXLINE( 137)				::String file = filesInFolder->__get(_g);
HXDLIN( 137)				_g = (_g + 1);
HXLINE( 138)				::String daPath = (((HX_("",00,00,00,00) + ::antidebug::DebugSave_obj::stagesPath) + HX_("/",2f,00,00,00)) + file);
HXLINE( 139)				::sys::FileSystem_obj::deleteFile(daPath);
            			}
            		}
HXLINE( 142)		{
HXLINE( 142)			int _g1 = 0;
HXDLIN( 142)			::Array< ::String > _g2 = ::antidebug::DebugSave_obj::filesInStages;
HXDLIN( 142)			while((_g1 < _g2->length)){
HXLINE( 142)				::String file1 = _g2->__get(_g1);
HXDLIN( 142)				_g1 = (_g1 + 1);
HXLINE( 143)				::String text = ::openfl::utils::Assets_obj::getText(file1);
HXLINE( 144)				::sys::io::File_obj::saveContent(::StringTools_obj::replace(file1,HX_("stages_embed",cf,b6,e1,53),HX_("mods/An Ammar's Creativity/stages",f5,f2,bb,1b)),text);
            			}
            		}
HXLINE( 147)		::haxe::Log_obj::trace(HX_("- Replace Stages",34,f5,a5,12),::hx::SourceInfo(HX_("source/antidebug/DebugSave.hx",40,84,6f,82),147,HX_("antidebug.DebugSave",d3,87,45,d3),HX_("updateStages",de,a2,b5,05)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(DebugSave_obj,updateStages,(void))


DebugSave_obj::DebugSave_obj()
{
}

bool DebugSave_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"stages") ) { outValue = ( stages ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"scripts") ) { outValue = ( scripts ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"anticheat") ) { outValue = ( anticheat ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"scriptPath") ) { outValue = ( scriptPath ); return true; }
		if (HX_FIELD_EQ(inName,"stagesPath") ) { outValue = ( stagesPath ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"updateFolder") ) { outValue = updateFolder_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"updateStages") ) { outValue = updateStages_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"filesInStages") ) { outValue = ( filesInStages ); return true; }
		if (HX_FIELD_EQ(inName,"loadAntiDebug") ) { outValue = loadAntiDebug_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"scriptsModule") ) { outValue = ( scriptsModule ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"folderInSongData") ) { outValue = ( folderInSongData ); return true; }
		if (HX_FIELD_EQ(inName,"updateScriptsMod") ) { outValue = updateScriptsMod_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"reloadFilesOnSource") ) { outValue = reloadFilesOnSource_dyn(); return true; }
	}
	return false;
}

bool DebugSave_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"stages") ) { stages=ioValue.Cast< ::Array< ::String > >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"scripts") ) { scripts=ioValue.Cast< ::Array< ::String > >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"anticheat") ) { anticheat=ioValue.Cast< bool >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"scriptPath") ) { scriptPath=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"stagesPath") ) { stagesPath=ioValue.Cast< ::String >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"filesInStages") ) { filesInStages=ioValue.Cast< ::Array< ::String > >(); return true; }
		if (HX_FIELD_EQ(inName,"scriptsModule") ) { scriptsModule=ioValue.Cast< ::Array< ::String > >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"folderInSongData") ) { folderInSongData=ioValue.Cast< ::Array< ::String > >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *DebugSave_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo DebugSave_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /* ::Array< ::String > */ ,(void *) &DebugSave_obj::folderInSongData,HX_("folderInSongData",f2,99,11,2d)},
	{::hx::fsObject /* ::Array< ::String > */ ,(void *) &DebugSave_obj::filesInStages,HX_("filesInStages",51,af,00,28)},
	{::hx::fsBool,(void *) &DebugSave_obj::anticheat,HX_("anticheat",31,1c,0f,9a)},
	{::hx::fsString,(void *) &DebugSave_obj::scriptPath,HX_("scriptPath",50,c1,32,43)},
	{::hx::fsObject /* ::Array< ::String > */ ,(void *) &DebugSave_obj::scripts,HX_("scripts",08,fc,e3,2c)},
	{::hx::fsObject /* ::Array< ::String > */ ,(void *) &DebugSave_obj::scriptsModule,HX_("scriptsModule",d4,5a,1c,dc)},
	{::hx::fsString,(void *) &DebugSave_obj::stagesPath,HX_("stagesPath",3a,ac,62,2c)},
	{::hx::fsObject /* ::Array< ::String > */ ,(void *) &DebugSave_obj::stages,HX_("stages",f5,fb,f1,05)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void DebugSave_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DebugSave_obj::folderInSongData,"folderInSongData");
	HX_MARK_MEMBER_NAME(DebugSave_obj::filesInStages,"filesInStages");
	HX_MARK_MEMBER_NAME(DebugSave_obj::anticheat,"anticheat");
	HX_MARK_MEMBER_NAME(DebugSave_obj::scriptPath,"scriptPath");
	HX_MARK_MEMBER_NAME(DebugSave_obj::scripts,"scripts");
	HX_MARK_MEMBER_NAME(DebugSave_obj::scriptsModule,"scriptsModule");
	HX_MARK_MEMBER_NAME(DebugSave_obj::stagesPath,"stagesPath");
	HX_MARK_MEMBER_NAME(DebugSave_obj::stages,"stages");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DebugSave_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DebugSave_obj::folderInSongData,"folderInSongData");
	HX_VISIT_MEMBER_NAME(DebugSave_obj::filesInStages,"filesInStages");
	HX_VISIT_MEMBER_NAME(DebugSave_obj::anticheat,"anticheat");
	HX_VISIT_MEMBER_NAME(DebugSave_obj::scriptPath,"scriptPath");
	HX_VISIT_MEMBER_NAME(DebugSave_obj::scripts,"scripts");
	HX_VISIT_MEMBER_NAME(DebugSave_obj::scriptsModule,"scriptsModule");
	HX_VISIT_MEMBER_NAME(DebugSave_obj::stagesPath,"stagesPath");
	HX_VISIT_MEMBER_NAME(DebugSave_obj::stages,"stages");
};

#endif

::hx::Class DebugSave_obj::__mClass;

static ::String DebugSave_obj_sStaticFields[] = {
	HX_("folderInSongData",f2,99,11,2d),
	HX_("filesInStages",51,af,00,28),
	HX_("anticheat",31,1c,0f,9a),
	HX_("loadAntiDebug",4b,18,0b,41),
	HX_("reloadFilesOnSource",d8,29,6a,90),
	HX_("updateFolder",97,1d,54,f9),
	HX_("scriptPath",50,c1,32,43),
	HX_("scripts",08,fc,e3,2c),
	HX_("scriptsModule",d4,5a,1c,dc),
	HX_("updateScriptsMod",03,d7,31,a4),
	HX_("stagesPath",3a,ac,62,2c),
	HX_("stages",f5,fb,f1,05),
	HX_("updateStages",de,a2,b5,05),
	::String(null())
};

void DebugSave_obj::__register()
{
	DebugSave_obj _hx_dummy;
	DebugSave_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("antidebug.DebugSave",d3,87,45,d3);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DebugSave_obj::__GetStatic;
	__mClass->mSetStaticField = &DebugSave_obj::__SetStatic;
	__mClass->mMarkFunc = DebugSave_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(DebugSave_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< DebugSave_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DebugSave_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DebugSave_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DebugSave_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void DebugSave_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_49a6019212a76934_16_boot)
HXDLIN(  16)		folderInSongData = ::Array_obj< ::String >::__new(0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_49a6019212a76934_17_boot)
HXDLIN(  17)		filesInStages = ::Array_obj< ::String >::__new(0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_49a6019212a76934_18_boot)
HXDLIN(  18)		anticheat = false;
            	}
{
            	HX_STACKFRAME(&_hx_pos_49a6019212a76934_100_boot)
HXDLIN( 100)		scriptPath = HX_("mods/An Ammar's Creativity/scripts",08,25,d2,27);
            	}
{
            	HX_STACKFRAME(&_hx_pos_49a6019212a76934_101_boot)
HXDLIN( 101)		scripts = ::Array_obj< ::String >::fromData( _hx_array_data_d34587d3_20,2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_49a6019212a76934_102_boot)
HXDLIN( 102)		scriptsModule = ::Array_obj< ::String >::fromData( _hx_array_data_d34587d3_22,4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_49a6019212a76934_132_boot)
HXDLIN( 132)		stagesPath = HX_("mods/An Ammar's Creativity/stages",f5,f2,bb,1b);
            	}
{
            	HX_STACKFRAME(&_hx_pos_49a6019212a76934_133_boot)
HXDLIN( 133)		stages = ::Array_obj< ::String >::fromData( _hx_array_data_d34587d3_25,10);
            	}
}

} // end namespace antidebug

// Generated by Haxe 4.3.2
#include <hxcpp.h>

#ifndef INCLUDED_ClientPrefs
#include <ClientPrefs.h>
#endif
#ifndef INCLUDED_Control
#include <Control.h>
#endif
#ifndef INCLUDED_Controls
#include <Controls.h>
#endif
#ifndef INCLUDED_Device
#include <Device.h>
#endif
#ifndef INCLUDED_KeyboardScheme
#include <KeyboardScheme.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInputManager
#include <flixel/input/IFlxInputManager.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxAction
#include <flixel/input/actions/FlxAction.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionAnalog
#include <flixel/input/actions/FlxActionAnalog.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionDigital
#include <flixel/input/actions/FlxActionDigital.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionInput
#include <flixel/input/actions/FlxActionInput.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionInputDigital
#include <flixel/input/actions/FlxActionInputDigital.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionManager
#include <flixel/input/actions/FlxActionManager.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionSet
#include <flixel/input/actions/FlxActionSet.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxInputDevice
#include <flixel/input/actions/FlxInputDevice.h>
#endif
#ifndef INCLUDED_flixel_input_gamepad__FlxGamepadInputID_FlxGamepadInputID_Impl_
#include <flixel/input/gamepad/_FlxGamepadInputID/FlxGamepadInputID_Impl_.h>
#endif
#ifndef INCLUDED_flixel_input_keyboard__FlxKey_FlxKey_Impl_
#include <flixel/input/keyboard/_FlxKey/FlxKey_Impl_.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_InputFrontEnd
#include <flixel/system/frontEnds/InputFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_BalancedTree
#include <haxe/ds/BalancedTree.h>
#endif
#ifndef INCLUDED_haxe_ds_EnumValueMap
#include <haxe/ds/EnumValueMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_948b5caa279cd923_120_new,"Controls","new",0x4f8de688,"Controls.new","Controls.hx",120,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_163_get_UI_UP,"Controls","get_UI_UP",0x338ac325,"Controls.get_UI_UP","Controls.hx",163,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_168_get_UI_LEFT,"Controls","get_UI_LEFT",0x38228f51,"Controls.get_UI_LEFT","Controls.hx",168,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_173_get_UI_RIGHT,"Controls","get_UI_RIGHT",0x5d27e532,"Controls.get_UI_RIGHT","Controls.hx",173,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_178_get_UI_DOWN,"Controls","get_UI_DOWN",0x32e07fac,"Controls.get_UI_DOWN","Controls.hx",178,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_183_get_UI_UP_P,"Controls","get_UI_UP_P",0x3e1de976,"Controls.get_UI_UP_P","Controls.hx",183,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_188_get_UI_LEFT_P,"Controls","get_UI_LEFT_P",0x716218a2,"Controls.get_UI_LEFT_P","Controls.hx",188,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_193_get_UI_RIGHT_P,"Controls","get_UI_RIGHT_P",0xe2d168c3,"Controls.get_UI_RIGHT_P","Controls.hx",193,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_198_get_UI_DOWN_P,"Controls","get_UI_DOWN_P",0x0bc115bd,"Controls.get_UI_DOWN_P","Controls.hx",198,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_203_get_UI_UP_R,"Controls","get_UI_UP_R",0x3e1de978,"Controls.get_UI_UP_R","Controls.hx",203,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_208_get_UI_LEFT_R,"Controls","get_UI_LEFT_R",0x716218a4,"Controls.get_UI_LEFT_R","Controls.hx",208,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_213_get_UI_RIGHT_R,"Controls","get_UI_RIGHT_R",0xe2d168c5,"Controls.get_UI_RIGHT_R","Controls.hx",213,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_218_get_UI_DOWN_R,"Controls","get_UI_DOWN_R",0x0bc115bf,"Controls.get_UI_DOWN_R","Controls.hx",218,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_223_get_NOTE_UP,"Controls","get_NOTE_UP",0x213b6207,"Controls.get_NOTE_UP","Controls.hx",223,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_228_get_NOTE_LEFT,"Controls","get_NOTE_LEFT",0x6a622ab3,"Controls.get_NOTE_LEFT","Controls.hx",228,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_233_get_NOTE_RIGHT,"Controls","get_NOTE_RIGHT",0x22903f90,"Controls.get_NOTE_RIGHT","Controls.hx",233,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_238_get_NOTE_DOWN,"Controls","get_NOTE_DOWN",0x65201b0e,"Controls.get_NOTE_DOWN","Controls.hx",238,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_243_get_NOTE_UP_P,"Controls","get_NOTE_UP_P",0x705d84d8,"Controls.get_NOTE_UP_P","Controls.hx",243,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_248_get_NOTE_LEFT_P,"Controls","get_NOTE_LEFT_P",0x6748d084,"Controls.get_NOTE_LEFT_P","Controls.hx",248,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_253_get_NOTE_RIGHT_P,"Controls","get_NOTE_RIGHT_P",0x16cb96a1,"Controls.get_NOTE_RIGHT_P","Controls.hx",253,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_258_get_NOTE_DOWN_P,"Controls","get_NOTE_DOWN_P",0x01a7cd9f,"Controls.get_NOTE_DOWN_P","Controls.hx",258,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_263_get_NOTE_UP_R,"Controls","get_NOTE_UP_R",0x705d84da,"Controls.get_NOTE_UP_R","Controls.hx",263,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_268_get_NOTE_LEFT_R,"Controls","get_NOTE_LEFT_R",0x6748d086,"Controls.get_NOTE_LEFT_R","Controls.hx",268,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_273_get_NOTE_RIGHT_R,"Controls","get_NOTE_RIGHT_R",0x16cb96a3,"Controls.get_NOTE_RIGHT_R","Controls.hx",273,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_278_get_NOTE_DOWN_R,"Controls","get_NOTE_DOWN_R",0x01a7cda1,"Controls.get_NOTE_DOWN_R","Controls.hx",278,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_283_get_ACCEPT,"Controls","get_ACCEPT",0x5fc72da9,"Controls.get_ACCEPT","Controls.hx",283,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_288_get_BACK,"Controls","get_BACK",0xc248f688,"Controls.get_BACK","Controls.hx",288,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_293_get_PAUSE,"Controls","get_PAUSE",0x4d388f55,"Controls.get_PAUSE","Controls.hx",293,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_298_get_RESET,"Controls","get_RESET",0x76a9022e,"Controls.get_RESET","Controls.hx",298,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_384_update,"Controls","update",0x9d2db8e1,"Controls.update","Controls.hx",384,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_394_checkByName,"Controls","checkByName",0xbe587cd2,"Controls.checkByName","Controls.hx",394,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_398_getDialogueName,"Controls","getDialogueName",0xe1263f61,"Controls.getDialogueName","Controls.hx",398,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_410_getDialogueNameFromToken,"Controls","getDialogueNameFromToken",0x6458998e,"Controls.getDialogueNameFromToken","Controls.hx",410,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_415_getActionFromControl,"Controls","getActionFromControl",0xa2e9ae5f,"Controls.getActionFromControl","Controls.hx",415,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_446_forEachBound,"Controls","forEachBound",0x9a98930c,"Controls.forEachBound","Controls.hx",446,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_492_replaceBinding,"Controls","replaceBinding",0x45096449,"Controls.replaceBinding","Controls.hx",492,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_513_copyFrom,"Controls","copyFrom",0xdf1da497,"Controls.copyFrom","Controls.hx",513,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_560_copyTo,"Controls","copyTo",0xdf5b4f68,"Controls.copyTo","Controls.hx",560,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_565_mergeKeyboardScheme,"Controls","mergeKeyboardScheme",0x61e2372c,"Controls.mergeKeyboardScheme","Controls.hx",565,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_582_bindKeys,"Controls","bindKeys",0xcb8dbf29,"Controls.bindKeys","Controls.hx",582,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_600_unbindKeys,"Controls","unbindKeys",0xec4b8c82,"Controls.unbindKeys","Controls.hx",600,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_632_setKeyboardScheme,"Controls","setKeyboardScheme",0x039bdb96,"Controls.setKeyboardScheme","Controls.hx",632,0x0ab041e8)
static const int _hx_array_data_116e4296_1120[] = {
	(int)87,
};
static const int _hx_array_data_116e4296_1121[] = {
	(int)83,
};
static const int _hx_array_data_116e4296_1122[] = {
	(int)65,
};
static const int _hx_array_data_116e4296_1123[] = {
	(int)68,
};
static const int _hx_array_data_116e4296_1124[] = {
	(int)87,
};
static const int _hx_array_data_116e4296_1125[] = {
	(int)83,
};
static const int _hx_array_data_116e4296_1126[] = {
	(int)65,
};
static const int _hx_array_data_116e4296_1127[] = {
	(int)68,
};
static const int _hx_array_data_116e4296_1128[] = {
	(int)71,(int)90,
};
static const int _hx_array_data_116e4296_1129[] = {
	(int)72,(int)88,
};
static const int _hx_array_data_116e4296_1130[] = {
	(int)49,
};
static const int _hx_array_data_116e4296_1131[] = {
	(int)82,
};
static const int _hx_array_data_116e4296_1132[] = {
	(int)38,
};
static const int _hx_array_data_116e4296_1133[] = {
	(int)40,
};
static const int _hx_array_data_116e4296_1134[] = {
	(int)37,
};
static const int _hx_array_data_116e4296_1135[] = {
	(int)39,
};
static const int _hx_array_data_116e4296_1136[] = {
	(int)38,
};
static const int _hx_array_data_116e4296_1137[] = {
	(int)40,
};
static const int _hx_array_data_116e4296_1138[] = {
	(int)37,
};
static const int _hx_array_data_116e4296_1139[] = {
	(int)39,
};
static const int _hx_array_data_116e4296_1140[] = {
	(int)79,
};
static const int _hx_array_data_116e4296_1141[] = {
	(int)80,
};
static const int _hx_array_data_116e4296_1142[] = {
	(int)13,
};
static const int _hx_array_data_116e4296_1143[] = {
	(int)8,
};
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_735_removeKeyboard,"Controls","removeKeyboard",0xd2dac3e3,"Controls.removeKeyboard","Controls.hx",735,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_748_addGamepad,"Controls","addGamepad",0xa2c68b58,"Controls.addGamepad","Controls.hx",748,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_761_addGamepadLiteral,"Controls","addGamepadLiteral",0x50b4e0f7,"Controls.addGamepadLiteral","Controls.hx",761,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_774_removeGamepad,"Controls","removeGamepad",0xfdf294e5,"Controls.removeGamepad","Controls.hx",774,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_792_addDefaultGamepad,"Controls","addDefaultGamepad",0xaa5e6409,"Controls.addDefaultGamepad","Controls.hx",792,0x0ab041e8)
static const int _hx_array_data_116e4296_1240[] = {
	(int)0,(int)7,
};
static const int _hx_array_data_116e4296_1241[] = {
	(int)1,
};
static const int _hx_array_data_116e4296_1242[] = {
	(int)11,(int)34,
};
static const int _hx_array_data_116e4296_1243[] = {
	(int)12,(int)36,
};
static const int _hx_array_data_116e4296_1244[] = {
	(int)13,(int)37,
};
static const int _hx_array_data_116e4296_1245[] = {
	(int)14,(int)35,
};
static const int _hx_array_data_116e4296_1246[] = {
	(int)11,(int)34,(int)38,(int)3,
};
static const int _hx_array_data_116e4296_1247[] = {
	(int)12,(int)36,(int)40,(int)0,
};
static const int _hx_array_data_116e4296_1248[] = {
	(int)13,(int)37,(int)41,(int)2,
};
static const int _hx_array_data_116e4296_1249[] = {
	(int)14,(int)35,(int)39,(int)1,
};
static const int _hx_array_data_116e4296_1250[] = {
	(int)7,
};
static const int _hx_array_data_116e4296_1251[] = {
	(int)8,
};
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_832_bindButtons,"Controls","bindButtons",0x94dee42c,"Controls.bindButtons","Controls.hx",832,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_845_unbindButtons,"Controls","unbindButtons",0x83d33473,"Controls.unbindButtons","Controls.hx",845,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_869_getInputsFor,"Controls","getInputsFor",0xa3571ac2,"Controls.getInputsFor","Controls.hx",869,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_893_removeDevice,"Controls","removeDevice",0x4c1b5cd2,"Controls.removeDevice","Controls.hx",893,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_433_init,"Controls","init",0x495487e8,"Controls.init","Controls.hx",433,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_615_addKeys,"Controls","addKeys",0xd0486edd,"Controls.addKeys","Controls.hx",615,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_621_removeKeys,"Controls","removeKeys",0x75dc9b30,"Controls.removeKeys","Controls.hx",621,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_853_addButtons,"Controls","addButtons",0xe3b5fcf8,"Controls.addButtons","Controls.hx",853,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_858_removeButtons,"Controls","removeButtons",0x3ee20685,"Controls.removeButtons","Controls.hx",858,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_904_isDevice,"Controls","isDevice",0xe09e10f8,"Controls.isDevice","Controls.hx",904,0x0ab041e8)
HX_LOCAL_STACK_FRAME(_hx_pos_948b5caa279cd923_913_isGamepad,"Controls","isGamepad",0x5bcd81ff,"Controls.isGamepad","Controls.hx",913,0x0ab041e8)

void Controls_obj::__construct(::String name, ::KeyboardScheme __o_scheme){
            		 ::KeyboardScheme scheme = __o_scheme;
            		if (::hx::IsNull(__o_scheme)) scheme = ::KeyboardScheme_obj::None_dyn();
            	HX_GC_STACKFRAME(&_hx_pos_948b5caa279cd923_120_new)
HXLINE( 158)		this->keyboardScheme = ::KeyboardScheme_obj::None_dyn();
HXLINE( 157)		this->gamepadsAdded = ::Array_obj< int >::__new(0);
HXLINE( 152)		this->byName =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 149)		this->_reset =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("reset",cf,49,c8,e6),null());
HXLINE( 148)		this->_pause =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("pause",f6,d6,57,bd),null());
HXLINE( 147)		this->_back =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("back",27,da,10,41),null());
HXLINE( 146)		this->_accept =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("accept",08,93,06,0b),null());
HXLINE( 145)		this->_note_downR =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("note_down-release",49,ab,d6,d1),null());
HXLINE( 144)		this->_note_rightR =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("note_right-release",c9,28,3c,f1),null());
HXLINE( 143)		this->_note_leftR =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("note_left-release",ee,67,d8,03),null());
HXLINE( 142)		this->_note_upR =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("note_up-release",02,05,01,5e),null());
HXLINE( 141)		this->_note_downP =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("note_down-press",85,b4,95,9a),null());
HXLINE( 140)		this->_note_rightP =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("note_right-press",05,d2,d8,4c),null());
HXLINE( 139)		this->_note_leftP =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("note_left-press",ea,8d,a2,8c),null());
HXLINE( 138)		this->_note_upP =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("note_up-press",fe,fd,7f,20),null());
HXLINE( 137)		this->_note_down =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("note_down",0f,ef,de,9f),null());
HXLINE( 136)		this->_note_right =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("note_right",8f,ec,ca,4e),null());
HXLINE( 135)		this->_note_left =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("note_left",b4,fe,20,a5),null());
HXLINE( 134)		this->_note_up =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("note_up",c8,67,5c,4d),null());
HXLINE( 133)		this->_ui_downR =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("ui_down-release",a7,87,e1,ce),null());
HXLINE( 132)		this->_ui_rightR =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("ui_right-release",ab,1e,b2,5d),null());
HXLINE( 131)		this->_ui_leftR =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("ui_left-release",4c,44,e3,00),null());
HXLINE( 130)		this->_ui_upR =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("ui_up-release",e0,6d,79,3d),null());
HXLINE( 129)		this->_ui_downP =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("ui_down-press",63,1d,0e,7a),null());
HXLINE( 128)		this->_ui_rightP =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("ui_right-press",67,2b,bc,f6),null());
HXLINE( 127)		this->_ui_leftP =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("ui_left-press",c8,f6,1a,6c),null());
HXLINE( 126)		this->_ui_upP =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("ui_up-press",5c,d3,d1,27),null());
HXLINE( 125)		this->_ui_down =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("ui_down",6d,3d,47,f2),null());
HXLINE( 124)		this->_ui_right =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("ui_right",71,30,a7,17),null());
HXLINE( 123)		this->_ui_left =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("ui_left",12,4d,89,f7),null());
HXLINE( 122)		this->_ui_up =  ::flixel::input::actions::FlxActionDigital_obj::__alloc( HX_CTX ,HX_("ui_up",a6,c2,91,a3),null());
HXLINE( 303)		super::__construct(name,null(),null());
HXLINE( 305)		this->add(this->_ui_up);
HXLINE( 306)		this->add(this->_ui_left);
HXLINE( 307)		this->add(this->_ui_right);
HXLINE( 308)		this->add(this->_ui_down);
HXLINE( 309)		this->add(this->_ui_upP);
HXLINE( 310)		this->add(this->_ui_leftP);
HXLINE( 311)		this->add(this->_ui_rightP);
HXLINE( 312)		this->add(this->_ui_downP);
HXLINE( 313)		this->add(this->_ui_upR);
HXLINE( 314)		this->add(this->_ui_leftR);
HXLINE( 315)		this->add(this->_ui_rightR);
HXLINE( 316)		this->add(this->_ui_downR);
HXLINE( 317)		this->add(this->_note_up);
HXLINE( 318)		this->add(this->_note_left);
HXLINE( 319)		this->add(this->_note_right);
HXLINE( 320)		this->add(this->_note_down);
HXLINE( 321)		this->add(this->_note_upP);
HXLINE( 322)		this->add(this->_note_leftP);
HXLINE( 323)		this->add(this->_note_rightP);
HXLINE( 324)		this->add(this->_note_downP);
HXLINE( 325)		this->add(this->_note_upR);
HXLINE( 326)		this->add(this->_note_leftR);
HXLINE( 327)		this->add(this->_note_rightR);
HXLINE( 328)		this->add(this->_note_downR);
HXLINE( 329)		this->add(this->_accept);
HXLINE( 330)		this->add(this->_back);
HXLINE( 331)		this->add(this->_pause);
HXLINE( 332)		this->add(this->_reset);
HXLINE( 334)		{
HXLINE( 334)			int _g = 0;
HXDLIN( 334)			::Array< ::Dynamic> _g1 = this->digitalActions;
HXDLIN( 334)			while((_g < _g1->length)){
HXLINE( 334)				 ::flixel::input::actions::FlxActionDigital action = _g1->__get(_g).StaticCast<  ::flixel::input::actions::FlxActionDigital >();
HXDLIN( 334)				_g = (_g + 1);
HXLINE( 335)				this->byName->set(action->name,action);
            			}
            		}
HXLINE( 337)		this->setKeyboardScheme(scheme,false);
            	}

Dynamic Controls_obj::__CreateEmpty() { return new Controls_obj; }

void *Controls_obj::_hx_vtable = 0;

Dynamic Controls_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Controls_obj > _hx_result = new Controls_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool Controls_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x315ddd0d) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x315ddd0d;
	} else {
		return inClassId==(int)0x6cff3556;
	}
}

bool Controls_obj::get_UI_UP(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_163_get_UI_UP)
HXDLIN( 163)		return this->_ui_up->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_UI_UP,return )

bool Controls_obj::get_UI_LEFT(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_168_get_UI_LEFT)
HXDLIN( 168)		return this->_ui_left->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_UI_LEFT,return )

bool Controls_obj::get_UI_RIGHT(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_173_get_UI_RIGHT)
HXDLIN( 173)		return this->_ui_right->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_UI_RIGHT,return )

bool Controls_obj::get_UI_DOWN(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_178_get_UI_DOWN)
HXDLIN( 178)		return this->_ui_down->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_UI_DOWN,return )

bool Controls_obj::get_UI_UP_P(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_183_get_UI_UP_P)
HXDLIN( 183)		return this->_ui_upP->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_UI_UP_P,return )

bool Controls_obj::get_UI_LEFT_P(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_188_get_UI_LEFT_P)
HXDLIN( 188)		return this->_ui_leftP->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_UI_LEFT_P,return )

bool Controls_obj::get_UI_RIGHT_P(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_193_get_UI_RIGHT_P)
HXDLIN( 193)		return this->_ui_rightP->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_UI_RIGHT_P,return )

bool Controls_obj::get_UI_DOWN_P(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_198_get_UI_DOWN_P)
HXDLIN( 198)		return this->_ui_downP->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_UI_DOWN_P,return )

bool Controls_obj::get_UI_UP_R(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_203_get_UI_UP_R)
HXDLIN( 203)		return this->_ui_upR->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_UI_UP_R,return )

bool Controls_obj::get_UI_LEFT_R(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_208_get_UI_LEFT_R)
HXDLIN( 208)		return this->_ui_leftR->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_UI_LEFT_R,return )

bool Controls_obj::get_UI_RIGHT_R(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_213_get_UI_RIGHT_R)
HXDLIN( 213)		return this->_ui_rightR->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_UI_RIGHT_R,return )

bool Controls_obj::get_UI_DOWN_R(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_218_get_UI_DOWN_R)
HXDLIN( 218)		return this->_ui_downR->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_UI_DOWN_R,return )

bool Controls_obj::get_NOTE_UP(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_223_get_NOTE_UP)
HXDLIN( 223)		return this->_note_up->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_NOTE_UP,return )

bool Controls_obj::get_NOTE_LEFT(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_228_get_NOTE_LEFT)
HXDLIN( 228)		return this->_note_left->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_NOTE_LEFT,return )

bool Controls_obj::get_NOTE_RIGHT(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_233_get_NOTE_RIGHT)
HXDLIN( 233)		return this->_note_right->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_NOTE_RIGHT,return )

bool Controls_obj::get_NOTE_DOWN(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_238_get_NOTE_DOWN)
HXDLIN( 238)		return this->_note_down->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_NOTE_DOWN,return )

bool Controls_obj::get_NOTE_UP_P(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_243_get_NOTE_UP_P)
HXDLIN( 243)		return this->_note_upP->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_NOTE_UP_P,return )

bool Controls_obj::get_NOTE_LEFT_P(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_248_get_NOTE_LEFT_P)
HXDLIN( 248)		return this->_note_leftP->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_NOTE_LEFT_P,return )

bool Controls_obj::get_NOTE_RIGHT_P(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_253_get_NOTE_RIGHT_P)
HXDLIN( 253)		return this->_note_rightP->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_NOTE_RIGHT_P,return )

bool Controls_obj::get_NOTE_DOWN_P(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_258_get_NOTE_DOWN_P)
HXDLIN( 258)		return this->_note_downP->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_NOTE_DOWN_P,return )

bool Controls_obj::get_NOTE_UP_R(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_263_get_NOTE_UP_R)
HXDLIN( 263)		return this->_note_upR->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_NOTE_UP_R,return )

bool Controls_obj::get_NOTE_LEFT_R(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_268_get_NOTE_LEFT_R)
HXDLIN( 268)		return this->_note_leftR->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_NOTE_LEFT_R,return )

bool Controls_obj::get_NOTE_RIGHT_R(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_273_get_NOTE_RIGHT_R)
HXDLIN( 273)		return this->_note_rightR->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_NOTE_RIGHT_R,return )

bool Controls_obj::get_NOTE_DOWN_R(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_278_get_NOTE_DOWN_R)
HXDLIN( 278)		return this->_note_downR->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_NOTE_DOWN_R,return )

bool Controls_obj::get_ACCEPT(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_283_get_ACCEPT)
HXDLIN( 283)		return this->_accept->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_ACCEPT,return )

bool Controls_obj::get_BACK(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_288_get_BACK)
HXDLIN( 288)		return this->_back->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_BACK,return )

bool Controls_obj::get_PAUSE(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_293_get_PAUSE)
HXDLIN( 293)		return this->_pause->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_PAUSE,return )

bool Controls_obj::get_RESET(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_298_get_RESET)
HXDLIN( 298)		return this->_reset->check();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,get_RESET,return )

void Controls_obj::update(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_384_update)
HXDLIN( 384)		this->super::update();
            	}


bool Controls_obj::checkByName(::String name){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_394_checkByName)
HXDLIN( 394)		return ( ( ::flixel::input::actions::FlxActionDigital)(this->byName->get(name)) )->check();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Controls_obj,checkByName,return )

::String Controls_obj::getDialogueName( ::flixel::input::actions::FlxActionDigital action){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_398_getDialogueName)
HXLINE( 399)		 ::flixel::input::actions::FlxActionInput input = action->inputs->__get(0).StaticCast<  ::flixel::input::actions::FlxActionInput >();
HXLINE( 400)		 ::flixel::input::actions::FlxInputDevice _g = input->device;
HXDLIN( 400)		switch((int)(_g->_hx_getIndex())){
            			case (int)3: {
HXLINE( 402)				return ((HX_("[",5b,00,00,00) + ::flixel::input::keyboard::_FlxKey::FlxKey_Impl__obj::toStringMap->get(input->inputID)) + HX_("]",5d,00,00,00));
            			}
            			break;
            			case (int)4: {
HXLINE( 403)				return ((HX_("(",28,00,00,00) + ::flixel::input::gamepad::_FlxGamepadInputID::FlxGamepadInputID_Impl__obj::toStringMap->get(input->inputID)) + HX_(")",29,00,00,00));
            			}
            			break;
            			default:{
HXLINE( 404)				 ::flixel::input::actions::FlxInputDevice device = _g;
HXDLIN( 404)				HX_STACK_DO_THROW((HX_("unhandled device: ",f9,e1,62,a5) + ::Std_obj::string(device)));
            			}
            		}
HXLINE( 400)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Controls_obj,getDialogueName,return )

::String Controls_obj::getDialogueNameFromToken(::String token){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_410_getDialogueNameFromToken)
HXDLIN( 410)		::cpp::VirtualArray params = null();
HXDLIN( 410)		return this->getDialogueName(this->getActionFromControl(::Type_obj::createEnum(::hx::ClassOf< ::Control >(),token.toUpperCase(),params)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Controls_obj,getDialogueNameFromToken,return )

 ::flixel::input::actions::FlxActionDigital Controls_obj::getActionFromControl( ::Control control){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_415_getActionFromControl)
HXDLIN( 415)		switch((int)(control->_hx_getIndex())){
            			case (int)0: {
HXLINE( 417)				return this->_ui_up;
            			}
            			break;
            			case (int)1: {
HXLINE( 419)				return this->_ui_left;
            			}
            			break;
            			case (int)2: {
HXLINE( 420)				return this->_ui_right;
            			}
            			break;
            			case (int)3: {
HXLINE( 418)				return this->_ui_down;
            			}
            			break;
            			case (int)4: {
HXLINE( 421)				return this->_note_up;
            			}
            			break;
            			case (int)5: {
HXLINE( 423)				return this->_note_left;
            			}
            			break;
            			case (int)6: {
HXLINE( 424)				return this->_note_right;
            			}
            			break;
            			case (int)7: {
HXLINE( 422)				return this->_note_down;
            			}
            			break;
            			case (int)8: {
HXLINE( 428)				return this->_reset;
            			}
            			break;
            			case (int)9: {
HXLINE( 425)				return this->_accept;
            			}
            			break;
            			case (int)10: {
HXLINE( 426)				return this->_back;
            			}
            			break;
            			case (int)11: {
HXLINE( 427)				return this->_pause;
            			}
            			break;
            		}
HXLINE( 415)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Controls_obj,getActionFromControl,return )

void Controls_obj::forEachBound( ::Control control, ::Dynamic func){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_446_forEachBound)
HXDLIN( 446)		switch((int)(control->_hx_getIndex())){
            			case (int)0: {
HXLINE( 449)				func(this->_ui_up,1);
HXLINE( 450)				func(this->_ui_upP,2);
HXLINE( 451)				func(this->_ui_upR,-1);
            			}
            			break;
            			case (int)1: {
HXLINE( 453)				func(this->_ui_left,1);
HXLINE( 454)				func(this->_ui_leftP,2);
HXLINE( 455)				func(this->_ui_leftR,-1);
            			}
            			break;
            			case (int)2: {
HXLINE( 457)				func(this->_ui_right,1);
HXLINE( 458)				func(this->_ui_rightP,2);
HXLINE( 459)				func(this->_ui_rightR,-1);
            			}
            			break;
            			case (int)3: {
HXLINE( 461)				func(this->_ui_down,1);
HXLINE( 462)				func(this->_ui_downP,2);
HXLINE( 463)				func(this->_ui_downR,-1);
            			}
            			break;
            			case (int)4: {
HXLINE( 465)				func(this->_note_up,1);
HXLINE( 466)				func(this->_note_upP,2);
HXLINE( 467)				func(this->_note_upR,-1);
            			}
            			break;
            			case (int)5: {
HXLINE( 469)				func(this->_note_left,1);
HXLINE( 470)				func(this->_note_leftP,2);
HXLINE( 471)				func(this->_note_leftR,-1);
            			}
            			break;
            			case (int)6: {
HXLINE( 473)				func(this->_note_right,1);
HXLINE( 474)				func(this->_note_rightP,2);
HXLINE( 475)				func(this->_note_rightR,-1);
            			}
            			break;
            			case (int)7: {
HXLINE( 477)				func(this->_note_down,1);
HXLINE( 478)				func(this->_note_downP,2);
HXLINE( 479)				func(this->_note_downR,-1);
            			}
            			break;
            			case (int)8: {
HXLINE( 487)				func(this->_reset,2);
            			}
            			break;
            			case (int)9: {
HXLINE( 481)				func(this->_accept,2);
            			}
            			break;
            			case (int)10: {
HXLINE( 483)				func(this->_back,2);
            			}
            			break;
            			case (int)11: {
HXLINE( 485)				func(this->_pause,2);
            			}
            			break;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Controls_obj,forEachBound,(void))

void Controls_obj::replaceBinding( ::Control control, ::Device device, ::Dynamic toAdd, ::Dynamic toRemove){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_492_replaceBinding)
HXLINE( 493)		if (::hx::IsEq( toAdd,toRemove )) {
HXLINE( 494)			return;
            		}
HXLINE( 496)		switch((int)(device->_hx_getIndex())){
            			case (int)0: {
HXLINE( 499)				if (::hx::IsNotNull( toRemove )) {
HXLINE( 500)					this->unbindKeys(control,::Array_obj< int >::__new(1)->init(0,toRemove));
            				}
HXLINE( 501)				if (::hx::IsNotNull( toAdd )) {
HXLINE( 502)					this->bindKeys(control,::Array_obj< int >::__new(1)->init(0,toAdd));
            				}
            			}
            			break;
            			case (int)1: {
HXLINE( 504)				int id = device->_hx_getInt(0);
HXDLIN( 504)				{
HXLINE( 505)					if (::hx::IsNotNull( toRemove )) {
HXLINE( 506)						this->unbindButtons(control,id,::Array_obj< int >::__new(1)->init(0,toRemove));
            					}
HXLINE( 507)					if (::hx::IsNotNull( toAdd )) {
HXLINE( 508)						this->bindButtons(control,id,::Array_obj< int >::__new(1)->init(0,toAdd));
            					}
            				}
            			}
            			break;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(Controls_obj,replaceBinding,(void))

void Controls_obj::copyFrom( ::Controls controls, ::Device device){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_513_copyFrom)
HXLINE( 515)		{
HXLINE( 515)			::Dynamic map = controls->byName;
HXDLIN( 515)			::Dynamic _g_map = map;
HXDLIN( 515)			 ::Dynamic _g_keys = ::haxe::IMap_obj::keys(map);
HXDLIN( 515)			while(( (bool)(_g_keys->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE( 515)				::String key = ( (::String)(_g_keys->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXDLIN( 515)				 ::flixel::input::actions::FlxActionDigital _g_value = ( ( ::flixel::input::actions::FlxActionDigital)(::haxe::IMap_obj::get(_g_map,key)) );
HXDLIN( 515)				::String _g_key = key;
HXDLIN( 515)				::String name = _g_key;
HXDLIN( 515)				 ::flixel::input::actions::FlxActionDigital action = _g_value;
HXLINE( 517)				{
HXLINE( 517)					int _g = 0;
HXDLIN( 517)					::Array< ::Dynamic> _g1 = action->inputs;
HXDLIN( 517)					while((_g < _g1->length)){
HXLINE( 517)						 ::flixel::input::actions::FlxActionInput input = _g1->__get(_g).StaticCast<  ::flixel::input::actions::FlxActionInput >();
HXDLIN( 517)						_g = (_g + 1);
HXLINE( 519)						bool _hx_tmp;
HXDLIN( 519)						if (::hx::IsNotNull( device )) {
HXLINE( 519)							_hx_tmp = ::Controls_obj::isDevice(input,device);
            						}
            						else {
HXLINE( 519)							_hx_tmp = true;
            						}
HXDLIN( 519)						if (_hx_tmp) {
HXLINE( 520)							( ( ::flixel::input::actions::FlxActionDigital)(this->byName->get(name)) )->add(( ( ::flixel::input::actions::FlxActionInputDigital)(input) ));
            						}
            					}
            				}
            			}
            		}
HXLINE( 535)		if (::hx::IsNull( device )) {
HXLINE( 540)			{
HXLINE( 540)				int _g2 = 0;
HXDLIN( 540)				::Array< int > _g3 = controls->gamepadsAdded;
HXDLIN( 540)				while((_g2 < _g3->length)){
HXLINE( 540)					int gamepad = _g3->__get(_g2);
HXDLIN( 540)					_g2 = (_g2 + 1);
HXLINE( 541)					if (!(this->gamepadsAdded->contains(gamepad))) {
HXLINE( 542)						this->gamepadsAdded->push(gamepad);
            					}
            				}
            			}
HXLINE( 549)			this->mergeKeyboardScheme(controls->keyboardScheme);
            		}
            		else {
HXLINE( 535)			switch((int)(device->_hx_getIndex())){
            				case (int)0: {
HXLINE( 554)					this->mergeKeyboardScheme(controls->keyboardScheme);
            				}
            				break;
            				case (int)1: {
HXLINE( 551)					int id = device->_hx_getInt(0);
HXLINE( 552)					this->gamepadsAdded->push(id);
            				}
            				break;
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Controls_obj,copyFrom,(void))

void Controls_obj::copyTo( ::Controls controls, ::Device device){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_560_copyTo)
HXDLIN( 560)		controls->copyFrom(::hx::ObjectPtr<OBJ_>(this),device);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Controls_obj,copyTo,(void))

void Controls_obj::mergeKeyboardScheme( ::KeyboardScheme scheme){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_565_mergeKeyboardScheme)
HXDLIN( 565)		if (::hx::IsPointerNotEq( scheme,::KeyboardScheme_obj::None_dyn() )) {
HXLINE( 567)			if ((this->keyboardScheme->_hx_getIndex() == 2)) {
HXLINE( 570)				this->keyboardScheme = scheme;
            			}
            			else {
HXLINE( 572)				this->keyboardScheme = ::KeyboardScheme_obj::Custom_dyn();
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Controls_obj,mergeKeyboardScheme,(void))

void Controls_obj::bindKeys( ::Control control,::Array< int > keys){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_582_bindKeys)
HXLINE( 583)		::Array< int > copyKeys = keys->copy();
HXLINE( 584)		{
HXLINE( 584)			int _g = 0;
HXDLIN( 584)			int _g1 = copyKeys->length;
HXDLIN( 584)			while((_g < _g1)){
HXLINE( 584)				_g = (_g + 1);
HXDLIN( 584)				int i = (_g - 1);
HXLINE( 585)				if ((i == -1)) {
HXLINE( 585)					copyKeys->remove(i);
            				}
            			}
            		}
HXLINE( 589)		switch((int)(control->_hx_getIndex())){
            			case (int)0: {
HXLINE( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action = this->_ui_up;
HXDLIN( 589)					int state = 1;
HXDLIN( 589)					int _g2 = 0;
HXDLIN( 589)					while((_g2 < copyKeys->length)){
HXLINE( 589)						int key = copyKeys->__get(_g2);
HXDLIN( 589)						_g2 = (_g2 + 1);
HXDLIN( 589)						if ((key != -1)) {
HXLINE( 589)							action->addKey(key,state);
            						}
            					}
            				}
HXDLIN( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action1 = this->_ui_upP;
HXDLIN( 589)					int state1 = 2;
HXDLIN( 589)					int _g3 = 0;
HXDLIN( 589)					while((_g3 < copyKeys->length)){
HXLINE( 589)						int key1 = copyKeys->__get(_g3);
HXDLIN( 589)						_g3 = (_g3 + 1);
HXDLIN( 589)						if ((key1 != -1)) {
HXLINE( 589)							action1->addKey(key1,state1);
            						}
            					}
            				}
HXDLIN( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action2 = this->_ui_upR;
HXDLIN( 589)					int state2 = -1;
HXDLIN( 589)					int _g4 = 0;
HXDLIN( 589)					while((_g4 < copyKeys->length)){
HXLINE( 589)						int key2 = copyKeys->__get(_g4);
HXDLIN( 589)						_g4 = (_g4 + 1);
HXDLIN( 589)						if ((key2 != -1)) {
HXLINE( 589)							action2->addKey(key2,state2);
            						}
            					}
            				}
            			}
            			break;
            			case (int)1: {
HXLINE( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action3 = this->_ui_left;
HXDLIN( 589)					int state3 = 1;
HXDLIN( 589)					int _g5 = 0;
HXDLIN( 589)					while((_g5 < copyKeys->length)){
HXLINE( 589)						int key3 = copyKeys->__get(_g5);
HXDLIN( 589)						_g5 = (_g5 + 1);
HXDLIN( 589)						if ((key3 != -1)) {
HXLINE( 589)							action3->addKey(key3,state3);
            						}
            					}
            				}
HXDLIN( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action4 = this->_ui_leftP;
HXDLIN( 589)					int state4 = 2;
HXDLIN( 589)					int _g6 = 0;
HXDLIN( 589)					while((_g6 < copyKeys->length)){
HXLINE( 589)						int key4 = copyKeys->__get(_g6);
HXDLIN( 589)						_g6 = (_g6 + 1);
HXDLIN( 589)						if ((key4 != -1)) {
HXLINE( 589)							action4->addKey(key4,state4);
            						}
            					}
            				}
HXDLIN( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action5 = this->_ui_leftR;
HXDLIN( 589)					int state5 = -1;
HXDLIN( 589)					int _g7 = 0;
HXDLIN( 589)					while((_g7 < copyKeys->length)){
HXLINE( 589)						int key5 = copyKeys->__get(_g7);
HXDLIN( 589)						_g7 = (_g7 + 1);
HXDLIN( 589)						if ((key5 != -1)) {
HXLINE( 589)							action5->addKey(key5,state5);
            						}
            					}
            				}
            			}
            			break;
            			case (int)2: {
HXLINE( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action6 = this->_ui_right;
HXDLIN( 589)					int state6 = 1;
HXDLIN( 589)					int _g8 = 0;
HXDLIN( 589)					while((_g8 < copyKeys->length)){
HXLINE( 589)						int key6 = copyKeys->__get(_g8);
HXDLIN( 589)						_g8 = (_g8 + 1);
HXDLIN( 589)						if ((key6 != -1)) {
HXLINE( 589)							action6->addKey(key6,state6);
            						}
            					}
            				}
HXDLIN( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action7 = this->_ui_rightP;
HXDLIN( 589)					int state7 = 2;
HXDLIN( 589)					int _g9 = 0;
HXDLIN( 589)					while((_g9 < copyKeys->length)){
HXLINE( 589)						int key7 = copyKeys->__get(_g9);
HXDLIN( 589)						_g9 = (_g9 + 1);
HXDLIN( 589)						if ((key7 != -1)) {
HXLINE( 589)							action7->addKey(key7,state7);
            						}
            					}
            				}
HXDLIN( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action8 = this->_ui_rightR;
HXDLIN( 589)					int state8 = -1;
HXDLIN( 589)					int _g10 = 0;
HXDLIN( 589)					while((_g10 < copyKeys->length)){
HXLINE( 589)						int key8 = copyKeys->__get(_g10);
HXDLIN( 589)						_g10 = (_g10 + 1);
HXDLIN( 589)						if ((key8 != -1)) {
HXLINE( 589)							action8->addKey(key8,state8);
            						}
            					}
            				}
            			}
            			break;
            			case (int)3: {
HXLINE( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action9 = this->_ui_down;
HXDLIN( 589)					int state9 = 1;
HXDLIN( 589)					int _g11 = 0;
HXDLIN( 589)					while((_g11 < copyKeys->length)){
HXLINE( 589)						int key9 = copyKeys->__get(_g11);
HXDLIN( 589)						_g11 = (_g11 + 1);
HXDLIN( 589)						if ((key9 != -1)) {
HXLINE( 589)							action9->addKey(key9,state9);
            						}
            					}
            				}
HXDLIN( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action10 = this->_ui_downP;
HXDLIN( 589)					int state10 = 2;
HXDLIN( 589)					int _g12 = 0;
HXDLIN( 589)					while((_g12 < copyKeys->length)){
HXLINE( 589)						int key10 = copyKeys->__get(_g12);
HXDLIN( 589)						_g12 = (_g12 + 1);
HXDLIN( 589)						if ((key10 != -1)) {
HXLINE( 589)							action10->addKey(key10,state10);
            						}
            					}
            				}
HXDLIN( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action11 = this->_ui_downR;
HXDLIN( 589)					int state11 = -1;
HXDLIN( 589)					int _g13 = 0;
HXDLIN( 589)					while((_g13 < copyKeys->length)){
HXLINE( 589)						int key11 = copyKeys->__get(_g13);
HXDLIN( 589)						_g13 = (_g13 + 1);
HXDLIN( 589)						if ((key11 != -1)) {
HXLINE( 589)							action11->addKey(key11,state11);
            						}
            					}
            				}
            			}
            			break;
            			case (int)4: {
HXLINE( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action12 = this->_note_up;
HXDLIN( 589)					int state12 = 1;
HXDLIN( 589)					int _g14 = 0;
HXDLIN( 589)					while((_g14 < copyKeys->length)){
HXLINE( 589)						int key12 = copyKeys->__get(_g14);
HXDLIN( 589)						_g14 = (_g14 + 1);
HXDLIN( 589)						if ((key12 != -1)) {
HXLINE( 589)							action12->addKey(key12,state12);
            						}
            					}
            				}
HXDLIN( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action13 = this->_note_upP;
HXDLIN( 589)					int state13 = 2;
HXDLIN( 589)					int _g15 = 0;
HXDLIN( 589)					while((_g15 < copyKeys->length)){
HXLINE( 589)						int key13 = copyKeys->__get(_g15);
HXDLIN( 589)						_g15 = (_g15 + 1);
HXDLIN( 589)						if ((key13 != -1)) {
HXLINE( 589)							action13->addKey(key13,state13);
            						}
            					}
            				}
HXDLIN( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action14 = this->_note_upR;
HXDLIN( 589)					int state14 = -1;
HXDLIN( 589)					int _g16 = 0;
HXDLIN( 589)					while((_g16 < copyKeys->length)){
HXLINE( 589)						int key14 = copyKeys->__get(_g16);
HXDLIN( 589)						_g16 = (_g16 + 1);
HXDLIN( 589)						if ((key14 != -1)) {
HXLINE( 589)							action14->addKey(key14,state14);
            						}
            					}
            				}
            			}
            			break;
            			case (int)5: {
HXLINE( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action15 = this->_note_left;
HXDLIN( 589)					int state15 = 1;
HXDLIN( 589)					int _g17 = 0;
HXDLIN( 589)					while((_g17 < copyKeys->length)){
HXLINE( 589)						int key15 = copyKeys->__get(_g17);
HXDLIN( 589)						_g17 = (_g17 + 1);
HXDLIN( 589)						if ((key15 != -1)) {
HXLINE( 589)							action15->addKey(key15,state15);
            						}
            					}
            				}
HXDLIN( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action16 = this->_note_leftP;
HXDLIN( 589)					int state16 = 2;
HXDLIN( 589)					int _g18 = 0;
HXDLIN( 589)					while((_g18 < copyKeys->length)){
HXLINE( 589)						int key16 = copyKeys->__get(_g18);
HXDLIN( 589)						_g18 = (_g18 + 1);
HXDLIN( 589)						if ((key16 != -1)) {
HXLINE( 589)							action16->addKey(key16,state16);
            						}
            					}
            				}
HXDLIN( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action17 = this->_note_leftR;
HXDLIN( 589)					int state17 = -1;
HXDLIN( 589)					int _g19 = 0;
HXDLIN( 589)					while((_g19 < copyKeys->length)){
HXLINE( 589)						int key17 = copyKeys->__get(_g19);
HXDLIN( 589)						_g19 = (_g19 + 1);
HXDLIN( 589)						if ((key17 != -1)) {
HXLINE( 589)							action17->addKey(key17,state17);
            						}
            					}
            				}
            			}
            			break;
            			case (int)6: {
HXLINE( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action18 = this->_note_right;
HXDLIN( 589)					int state18 = 1;
HXDLIN( 589)					int _g20 = 0;
HXDLIN( 589)					while((_g20 < copyKeys->length)){
HXLINE( 589)						int key18 = copyKeys->__get(_g20);
HXDLIN( 589)						_g20 = (_g20 + 1);
HXDLIN( 589)						if ((key18 != -1)) {
HXLINE( 589)							action18->addKey(key18,state18);
            						}
            					}
            				}
HXDLIN( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action19 = this->_note_rightP;
HXDLIN( 589)					int state19 = 2;
HXDLIN( 589)					int _g21 = 0;
HXDLIN( 589)					while((_g21 < copyKeys->length)){
HXLINE( 589)						int key19 = copyKeys->__get(_g21);
HXDLIN( 589)						_g21 = (_g21 + 1);
HXDLIN( 589)						if ((key19 != -1)) {
HXLINE( 589)							action19->addKey(key19,state19);
            						}
            					}
            				}
HXDLIN( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action20 = this->_note_rightR;
HXDLIN( 589)					int state20 = -1;
HXDLIN( 589)					int _g22 = 0;
HXDLIN( 589)					while((_g22 < copyKeys->length)){
HXLINE( 589)						int key20 = copyKeys->__get(_g22);
HXDLIN( 589)						_g22 = (_g22 + 1);
HXDLIN( 589)						if ((key20 != -1)) {
HXLINE( 589)							action20->addKey(key20,state20);
            						}
            					}
            				}
            			}
            			break;
            			case (int)7: {
HXLINE( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action21 = this->_note_down;
HXDLIN( 589)					int state21 = 1;
HXDLIN( 589)					int _g23 = 0;
HXDLIN( 589)					while((_g23 < copyKeys->length)){
HXLINE( 589)						int key21 = copyKeys->__get(_g23);
HXDLIN( 589)						_g23 = (_g23 + 1);
HXDLIN( 589)						if ((key21 != -1)) {
HXLINE( 589)							action21->addKey(key21,state21);
            						}
            					}
            				}
HXDLIN( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action22 = this->_note_downP;
HXDLIN( 589)					int state22 = 2;
HXDLIN( 589)					int _g24 = 0;
HXDLIN( 589)					while((_g24 < copyKeys->length)){
HXLINE( 589)						int key22 = copyKeys->__get(_g24);
HXDLIN( 589)						_g24 = (_g24 + 1);
HXDLIN( 589)						if ((key22 != -1)) {
HXLINE( 589)							action22->addKey(key22,state22);
            						}
            					}
            				}
HXDLIN( 589)				{
HXLINE( 589)					 ::flixel::input::actions::FlxActionDigital action23 = this->_note_downR;
HXDLIN( 589)					int state23 = -1;
HXDLIN( 589)					int _g25 = 0;
HXDLIN( 589)					while((_g25 < copyKeys->length)){
HXLINE( 589)						int key23 = copyKeys->__get(_g25);
HXDLIN( 589)						_g25 = (_g25 + 1);
HXDLIN( 589)						if ((key23 != -1)) {
HXLINE( 589)							action23->addKey(key23,state23);
            						}
            					}
            				}
            			}
            			break;
            			case (int)8: {
HXLINE( 589)				 ::flixel::input::actions::FlxActionDigital action24 = this->_reset;
HXDLIN( 589)				int state24 = 2;
HXDLIN( 589)				int _g26 = 0;
HXDLIN( 589)				while((_g26 < copyKeys->length)){
HXLINE( 589)					int key24 = copyKeys->__get(_g26);
HXDLIN( 589)					_g26 = (_g26 + 1);
HXDLIN( 589)					if ((key24 != -1)) {
HXLINE( 589)						action24->addKey(key24,state24);
            					}
            				}
            			}
            			break;
            			case (int)9: {
HXLINE( 589)				 ::flixel::input::actions::FlxActionDigital action25 = this->_accept;
HXDLIN( 589)				int state25 = 2;
HXDLIN( 589)				int _g27 = 0;
HXDLIN( 589)				while((_g27 < copyKeys->length)){
HXLINE( 589)					int key25 = copyKeys->__get(_g27);
HXDLIN( 589)					_g27 = (_g27 + 1);
HXDLIN( 589)					if ((key25 != -1)) {
HXLINE( 589)						action25->addKey(key25,state25);
            					}
            				}
            			}
            			break;
            			case (int)10: {
HXLINE( 589)				 ::flixel::input::actions::FlxActionDigital action26 = this->_back;
HXDLIN( 589)				int state26 = 2;
HXDLIN( 589)				int _g28 = 0;
HXDLIN( 589)				while((_g28 < copyKeys->length)){
HXLINE( 589)					int key26 = copyKeys->__get(_g28);
HXDLIN( 589)					_g28 = (_g28 + 1);
HXDLIN( 589)					if ((key26 != -1)) {
HXLINE( 589)						action26->addKey(key26,state26);
            					}
            				}
            			}
            			break;
            			case (int)11: {
HXLINE( 589)				 ::flixel::input::actions::FlxActionDigital action27 = this->_pause;
HXDLIN( 589)				int state27 = 2;
HXDLIN( 589)				int _g29 = 0;
HXDLIN( 589)				while((_g29 < copyKeys->length)){
HXLINE( 589)					int key27 = copyKeys->__get(_g29);
HXDLIN( 589)					_g29 = (_g29 + 1);
HXDLIN( 589)					if ((key27 != -1)) {
HXLINE( 589)						action27->addKey(key27,state27);
            					}
            				}
            			}
            			break;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Controls_obj,bindKeys,(void))

void Controls_obj::unbindKeys( ::Control control,::Array< int > keys){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_600_unbindKeys)
HXLINE( 601)		::Array< int > copyKeys = keys->copy();
HXLINE( 602)		{
HXLINE( 602)			int _g = 0;
HXDLIN( 602)			int _g1 = copyKeys->length;
HXDLIN( 602)			while((_g < _g1)){
HXLINE( 602)				_g = (_g + 1);
HXDLIN( 602)				int i = (_g - 1);
HXLINE( 603)				if ((i == -1)) {
HXLINE( 603)					copyKeys->remove(i);
            				}
            			}
            		}
HXLINE( 607)		switch((int)(control->_hx_getIndex())){
            			case (int)0: {
HXLINE( 607)				::Controls_obj::removeKeys(this->_ui_up,copyKeys);
HXDLIN( 607)				::Controls_obj::removeKeys(this->_ui_upP,copyKeys);
HXDLIN( 607)				::Controls_obj::removeKeys(this->_ui_upR,copyKeys);
            			}
            			break;
            			case (int)1: {
HXLINE( 607)				::Controls_obj::removeKeys(this->_ui_left,copyKeys);
HXDLIN( 607)				::Controls_obj::removeKeys(this->_ui_leftP,copyKeys);
HXDLIN( 607)				::Controls_obj::removeKeys(this->_ui_leftR,copyKeys);
            			}
            			break;
            			case (int)2: {
HXLINE( 607)				::Controls_obj::removeKeys(this->_ui_right,copyKeys);
HXDLIN( 607)				::Controls_obj::removeKeys(this->_ui_rightP,copyKeys);
HXDLIN( 607)				::Controls_obj::removeKeys(this->_ui_rightR,copyKeys);
            			}
            			break;
            			case (int)3: {
HXLINE( 607)				::Controls_obj::removeKeys(this->_ui_down,copyKeys);
HXDLIN( 607)				::Controls_obj::removeKeys(this->_ui_downP,copyKeys);
HXDLIN( 607)				::Controls_obj::removeKeys(this->_ui_downR,copyKeys);
            			}
            			break;
            			case (int)4: {
HXLINE( 607)				::Controls_obj::removeKeys(this->_note_up,copyKeys);
HXDLIN( 607)				::Controls_obj::removeKeys(this->_note_upP,copyKeys);
HXDLIN( 607)				::Controls_obj::removeKeys(this->_note_upR,copyKeys);
            			}
            			break;
            			case (int)5: {
HXLINE( 607)				::Controls_obj::removeKeys(this->_note_left,copyKeys);
HXDLIN( 607)				::Controls_obj::removeKeys(this->_note_leftP,copyKeys);
HXDLIN( 607)				::Controls_obj::removeKeys(this->_note_leftR,copyKeys);
            			}
            			break;
            			case (int)6: {
HXLINE( 607)				::Controls_obj::removeKeys(this->_note_right,copyKeys);
HXDLIN( 607)				::Controls_obj::removeKeys(this->_note_rightP,copyKeys);
HXDLIN( 607)				::Controls_obj::removeKeys(this->_note_rightR,copyKeys);
            			}
            			break;
            			case (int)7: {
HXLINE( 607)				::Controls_obj::removeKeys(this->_note_down,copyKeys);
HXDLIN( 607)				::Controls_obj::removeKeys(this->_note_downP,copyKeys);
HXDLIN( 607)				::Controls_obj::removeKeys(this->_note_downR,copyKeys);
            			}
            			break;
            			case (int)8: {
HXLINE( 607)				::Controls_obj::removeKeys(this->_reset,copyKeys);
            			}
            			break;
            			case (int)9: {
HXLINE( 607)				::Controls_obj::removeKeys(this->_accept,copyKeys);
            			}
            			break;
            			case (int)10: {
HXLINE( 607)				::Controls_obj::removeKeys(this->_back,copyKeys);
            			}
            			break;
            			case (int)11: {
HXLINE( 607)				::Controls_obj::removeKeys(this->_pause,copyKeys);
            			}
            			break;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Controls_obj,unbindKeys,(void))

void Controls_obj::setKeyboardScheme( ::KeyboardScheme scheme,::hx::Null< bool >  __o_reset){
            		bool reset = __o_reset.Default(true);
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_632_setKeyboardScheme)
HXLINE( 633)		if (reset) {
HXLINE( 634)			this->removeKeyboard();
            		}
HXLINE( 636)		this->keyboardScheme = scheme;
HXLINE( 637)		 ::haxe::ds::StringMap keysMap = ::ClientPrefs_obj::keyBinds;
HXLINE( 640)		switch((int)(scheme->_hx_getIndex())){
            			case (int)0: {
HXLINE( 643)				{
HXLINE( 643)					::Array< int > copyKeys = ( (::Array< int >)(keysMap->get(HX_("ui_up",a6,c2,91,a3))) )->copy();
HXDLIN( 643)					{
HXLINE( 643)						int _g = 0;
HXDLIN( 643)						int _g1 = copyKeys->length;
HXDLIN( 643)						while((_g < _g1)){
HXLINE( 643)							_g = (_g + 1);
HXDLIN( 643)							int i = (_g - 1);
HXDLIN( 643)							if ((i == -1)) {
HXLINE( 643)								copyKeys->remove(i);
            							}
            						}
            					}
HXDLIN( 643)					switch((int)(::Control_obj::UI_UP_dyn()->_hx_getIndex())){
            						case (int)0: {
HXLINE( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action = this->_ui_up;
HXDLIN( 643)								int state = 1;
HXDLIN( 643)								int _g2 = 0;
HXDLIN( 643)								while((_g2 < copyKeys->length)){
HXLINE( 643)									int key = copyKeys->__get(_g2);
HXDLIN( 643)									_g2 = (_g2 + 1);
HXDLIN( 643)									if ((key != -1)) {
HXLINE( 643)										action->addKey(key,state);
            									}
            								}
            							}
HXDLIN( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action1 = this->_ui_upP;
HXDLIN( 643)								int state1 = 2;
HXDLIN( 643)								int _g3 = 0;
HXDLIN( 643)								while((_g3 < copyKeys->length)){
HXLINE( 643)									int key1 = copyKeys->__get(_g3);
HXDLIN( 643)									_g3 = (_g3 + 1);
HXDLIN( 643)									if ((key1 != -1)) {
HXLINE( 643)										action1->addKey(key1,state1);
            									}
            								}
            							}
HXDLIN( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action2 = this->_ui_upR;
HXDLIN( 643)								int state2 = -1;
HXDLIN( 643)								int _g4 = 0;
HXDLIN( 643)								while((_g4 < copyKeys->length)){
HXLINE( 643)									int key2 = copyKeys->__get(_g4);
HXDLIN( 643)									_g4 = (_g4 + 1);
HXDLIN( 643)									if ((key2 != -1)) {
HXLINE( 643)										action2->addKey(key2,state2);
            									}
            								}
            							}
            						}
            						break;
            						case (int)1: {
HXLINE( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action3 = this->_ui_left;
HXDLIN( 643)								int state3 = 1;
HXDLIN( 643)								int _g5 = 0;
HXDLIN( 643)								while((_g5 < copyKeys->length)){
HXLINE( 643)									int key3 = copyKeys->__get(_g5);
HXDLIN( 643)									_g5 = (_g5 + 1);
HXDLIN( 643)									if ((key3 != -1)) {
HXLINE( 643)										action3->addKey(key3,state3);
            									}
            								}
            							}
HXDLIN( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action4 = this->_ui_leftP;
HXDLIN( 643)								int state4 = 2;
HXDLIN( 643)								int _g6 = 0;
HXDLIN( 643)								while((_g6 < copyKeys->length)){
HXLINE( 643)									int key4 = copyKeys->__get(_g6);
HXDLIN( 643)									_g6 = (_g6 + 1);
HXDLIN( 643)									if ((key4 != -1)) {
HXLINE( 643)										action4->addKey(key4,state4);
            									}
            								}
            							}
HXDLIN( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action5 = this->_ui_leftR;
HXDLIN( 643)								int state5 = -1;
HXDLIN( 643)								int _g7 = 0;
HXDLIN( 643)								while((_g7 < copyKeys->length)){
HXLINE( 643)									int key5 = copyKeys->__get(_g7);
HXDLIN( 643)									_g7 = (_g7 + 1);
HXDLIN( 643)									if ((key5 != -1)) {
HXLINE( 643)										action5->addKey(key5,state5);
            									}
            								}
            							}
            						}
            						break;
            						case (int)2: {
HXLINE( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action6 = this->_ui_right;
HXDLIN( 643)								int state6 = 1;
HXDLIN( 643)								int _g8 = 0;
HXDLIN( 643)								while((_g8 < copyKeys->length)){
HXLINE( 643)									int key6 = copyKeys->__get(_g8);
HXDLIN( 643)									_g8 = (_g8 + 1);
HXDLIN( 643)									if ((key6 != -1)) {
HXLINE( 643)										action6->addKey(key6,state6);
            									}
            								}
            							}
HXDLIN( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action7 = this->_ui_rightP;
HXDLIN( 643)								int state7 = 2;
HXDLIN( 643)								int _g9 = 0;
HXDLIN( 643)								while((_g9 < copyKeys->length)){
HXLINE( 643)									int key7 = copyKeys->__get(_g9);
HXDLIN( 643)									_g9 = (_g9 + 1);
HXDLIN( 643)									if ((key7 != -1)) {
HXLINE( 643)										action7->addKey(key7,state7);
            									}
            								}
            							}
HXDLIN( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action8 = this->_ui_rightR;
HXDLIN( 643)								int state8 = -1;
HXDLIN( 643)								int _g10 = 0;
HXDLIN( 643)								while((_g10 < copyKeys->length)){
HXLINE( 643)									int key8 = copyKeys->__get(_g10);
HXDLIN( 643)									_g10 = (_g10 + 1);
HXDLIN( 643)									if ((key8 != -1)) {
HXLINE( 643)										action8->addKey(key8,state8);
            									}
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action9 = this->_ui_down;
HXDLIN( 643)								int state9 = 1;
HXDLIN( 643)								int _g11 = 0;
HXDLIN( 643)								while((_g11 < copyKeys->length)){
HXLINE( 643)									int key9 = copyKeys->__get(_g11);
HXDLIN( 643)									_g11 = (_g11 + 1);
HXDLIN( 643)									if ((key9 != -1)) {
HXLINE( 643)										action9->addKey(key9,state9);
            									}
            								}
            							}
HXDLIN( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action10 = this->_ui_downP;
HXDLIN( 643)								int state10 = 2;
HXDLIN( 643)								int _g12 = 0;
HXDLIN( 643)								while((_g12 < copyKeys->length)){
HXLINE( 643)									int key10 = copyKeys->__get(_g12);
HXDLIN( 643)									_g12 = (_g12 + 1);
HXDLIN( 643)									if ((key10 != -1)) {
HXLINE( 643)										action10->addKey(key10,state10);
            									}
            								}
            							}
HXDLIN( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action11 = this->_ui_downR;
HXDLIN( 643)								int state11 = -1;
HXDLIN( 643)								int _g13 = 0;
HXDLIN( 643)								while((_g13 < copyKeys->length)){
HXLINE( 643)									int key11 = copyKeys->__get(_g13);
HXDLIN( 643)									_g13 = (_g13 + 1);
HXDLIN( 643)									if ((key11 != -1)) {
HXLINE( 643)										action11->addKey(key11,state11);
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action12 = this->_note_up;
HXDLIN( 643)								int state12 = 1;
HXDLIN( 643)								int _g14 = 0;
HXDLIN( 643)								while((_g14 < copyKeys->length)){
HXLINE( 643)									int key12 = copyKeys->__get(_g14);
HXDLIN( 643)									_g14 = (_g14 + 1);
HXDLIN( 643)									if ((key12 != -1)) {
HXLINE( 643)										action12->addKey(key12,state12);
            									}
            								}
            							}
HXDLIN( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action13 = this->_note_upP;
HXDLIN( 643)								int state13 = 2;
HXDLIN( 643)								int _g15 = 0;
HXDLIN( 643)								while((_g15 < copyKeys->length)){
HXLINE( 643)									int key13 = copyKeys->__get(_g15);
HXDLIN( 643)									_g15 = (_g15 + 1);
HXDLIN( 643)									if ((key13 != -1)) {
HXLINE( 643)										action13->addKey(key13,state13);
            									}
            								}
            							}
HXDLIN( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action14 = this->_note_upR;
HXDLIN( 643)								int state14 = -1;
HXDLIN( 643)								int _g16 = 0;
HXDLIN( 643)								while((_g16 < copyKeys->length)){
HXLINE( 643)									int key14 = copyKeys->__get(_g16);
HXDLIN( 643)									_g16 = (_g16 + 1);
HXDLIN( 643)									if ((key14 != -1)) {
HXLINE( 643)										action14->addKey(key14,state14);
            									}
            								}
            							}
            						}
            						break;
            						case (int)5: {
HXLINE( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action15 = this->_note_left;
HXDLIN( 643)								int state15 = 1;
HXDLIN( 643)								int _g17 = 0;
HXDLIN( 643)								while((_g17 < copyKeys->length)){
HXLINE( 643)									int key15 = copyKeys->__get(_g17);
HXDLIN( 643)									_g17 = (_g17 + 1);
HXDLIN( 643)									if ((key15 != -1)) {
HXLINE( 643)										action15->addKey(key15,state15);
            									}
            								}
            							}
HXDLIN( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action16 = this->_note_leftP;
HXDLIN( 643)								int state16 = 2;
HXDLIN( 643)								int _g18 = 0;
HXDLIN( 643)								while((_g18 < copyKeys->length)){
HXLINE( 643)									int key16 = copyKeys->__get(_g18);
HXDLIN( 643)									_g18 = (_g18 + 1);
HXDLIN( 643)									if ((key16 != -1)) {
HXLINE( 643)										action16->addKey(key16,state16);
            									}
            								}
            							}
HXDLIN( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action17 = this->_note_leftR;
HXDLIN( 643)								int state17 = -1;
HXDLIN( 643)								int _g19 = 0;
HXDLIN( 643)								while((_g19 < copyKeys->length)){
HXLINE( 643)									int key17 = copyKeys->__get(_g19);
HXDLIN( 643)									_g19 = (_g19 + 1);
HXDLIN( 643)									if ((key17 != -1)) {
HXLINE( 643)										action17->addKey(key17,state17);
            									}
            								}
            							}
            						}
            						break;
            						case (int)6: {
HXLINE( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action18 = this->_note_right;
HXDLIN( 643)								int state18 = 1;
HXDLIN( 643)								int _g20 = 0;
HXDLIN( 643)								while((_g20 < copyKeys->length)){
HXLINE( 643)									int key18 = copyKeys->__get(_g20);
HXDLIN( 643)									_g20 = (_g20 + 1);
HXDLIN( 643)									if ((key18 != -1)) {
HXLINE( 643)										action18->addKey(key18,state18);
            									}
            								}
            							}
HXDLIN( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action19 = this->_note_rightP;
HXDLIN( 643)								int state19 = 2;
HXDLIN( 643)								int _g21 = 0;
HXDLIN( 643)								while((_g21 < copyKeys->length)){
HXLINE( 643)									int key19 = copyKeys->__get(_g21);
HXDLIN( 643)									_g21 = (_g21 + 1);
HXDLIN( 643)									if ((key19 != -1)) {
HXLINE( 643)										action19->addKey(key19,state19);
            									}
            								}
            							}
HXDLIN( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action20 = this->_note_rightR;
HXDLIN( 643)								int state20 = -1;
HXDLIN( 643)								int _g22 = 0;
HXDLIN( 643)								while((_g22 < copyKeys->length)){
HXLINE( 643)									int key20 = copyKeys->__get(_g22);
HXDLIN( 643)									_g22 = (_g22 + 1);
HXDLIN( 643)									if ((key20 != -1)) {
HXLINE( 643)										action20->addKey(key20,state20);
            									}
            								}
            							}
            						}
            						break;
            						case (int)7: {
HXLINE( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action21 = this->_note_down;
HXDLIN( 643)								int state21 = 1;
HXDLIN( 643)								int _g23 = 0;
HXDLIN( 643)								while((_g23 < copyKeys->length)){
HXLINE( 643)									int key21 = copyKeys->__get(_g23);
HXDLIN( 643)									_g23 = (_g23 + 1);
HXDLIN( 643)									if ((key21 != -1)) {
HXLINE( 643)										action21->addKey(key21,state21);
            									}
            								}
            							}
HXDLIN( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action22 = this->_note_downP;
HXDLIN( 643)								int state22 = 2;
HXDLIN( 643)								int _g24 = 0;
HXDLIN( 643)								while((_g24 < copyKeys->length)){
HXLINE( 643)									int key22 = copyKeys->__get(_g24);
HXDLIN( 643)									_g24 = (_g24 + 1);
HXDLIN( 643)									if ((key22 != -1)) {
HXLINE( 643)										action22->addKey(key22,state22);
            									}
            								}
            							}
HXDLIN( 643)							{
HXLINE( 643)								 ::flixel::input::actions::FlxActionDigital action23 = this->_note_downR;
HXDLIN( 643)								int state23 = -1;
HXDLIN( 643)								int _g25 = 0;
HXDLIN( 643)								while((_g25 < copyKeys->length)){
HXLINE( 643)									int key23 = copyKeys->__get(_g25);
HXDLIN( 643)									_g25 = (_g25 + 1);
HXDLIN( 643)									if ((key23 != -1)) {
HXLINE( 643)										action23->addKey(key23,state23);
            									}
            								}
            							}
            						}
            						break;
            						case (int)8: {
HXLINE( 643)							 ::flixel::input::actions::FlxActionDigital action24 = this->_reset;
HXDLIN( 643)							int state24 = 2;
HXDLIN( 643)							int _g26 = 0;
HXDLIN( 643)							while((_g26 < copyKeys->length)){
HXLINE( 643)								int key24 = copyKeys->__get(_g26);
HXDLIN( 643)								_g26 = (_g26 + 1);
HXDLIN( 643)								if ((key24 != -1)) {
HXLINE( 643)									action24->addKey(key24,state24);
            								}
            							}
            						}
            						break;
            						case (int)9: {
HXLINE( 643)							 ::flixel::input::actions::FlxActionDigital action25 = this->_accept;
HXDLIN( 643)							int state25 = 2;
HXDLIN( 643)							int _g27 = 0;
HXDLIN( 643)							while((_g27 < copyKeys->length)){
HXLINE( 643)								int key25 = copyKeys->__get(_g27);
HXDLIN( 643)								_g27 = (_g27 + 1);
HXDLIN( 643)								if ((key25 != -1)) {
HXLINE( 643)									action25->addKey(key25,state25);
            								}
            							}
            						}
            						break;
            						case (int)10: {
HXLINE( 643)							 ::flixel::input::actions::FlxActionDigital action26 = this->_back;
HXDLIN( 643)							int state26 = 2;
HXDLIN( 643)							int _g28 = 0;
HXDLIN( 643)							while((_g28 < copyKeys->length)){
HXLINE( 643)								int key26 = copyKeys->__get(_g28);
HXDLIN( 643)								_g28 = (_g28 + 1);
HXDLIN( 643)								if ((key26 != -1)) {
HXLINE( 643)									action26->addKey(key26,state26);
            								}
            							}
            						}
            						break;
            						case (int)11: {
HXLINE( 643)							 ::flixel::input::actions::FlxActionDigital action27 = this->_pause;
HXDLIN( 643)							int state27 = 2;
HXDLIN( 643)							int _g29 = 0;
HXDLIN( 643)							while((_g29 < copyKeys->length)){
HXLINE( 643)								int key27 = copyKeys->__get(_g29);
HXDLIN( 643)								_g29 = (_g29 + 1);
HXDLIN( 643)								if ((key27 != -1)) {
HXLINE( 643)									action27->addKey(key27,state27);
            								}
            							}
            						}
            						break;
            					}
            				}
HXLINE( 644)				{
HXLINE( 644)					::Array< int > copyKeys1 = ( (::Array< int >)(keysMap->get(HX_("ui_down",6d,3d,47,f2))) )->copy();
HXDLIN( 644)					{
HXLINE( 644)						int _g30 = 0;
HXDLIN( 644)						int _g31 = copyKeys1->length;
HXDLIN( 644)						while((_g30 < _g31)){
HXLINE( 644)							_g30 = (_g30 + 1);
HXDLIN( 644)							int i1 = (_g30 - 1);
HXDLIN( 644)							if ((i1 == -1)) {
HXLINE( 644)								copyKeys1->remove(i1);
            							}
            						}
            					}
HXDLIN( 644)					switch((int)(::Control_obj::UI_DOWN_dyn()->_hx_getIndex())){
            						case (int)0: {
HXLINE( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action28 = this->_ui_up;
HXDLIN( 644)								int state28 = 1;
HXDLIN( 644)								int _g32 = 0;
HXDLIN( 644)								while((_g32 < copyKeys1->length)){
HXLINE( 644)									int key28 = copyKeys1->__get(_g32);
HXDLIN( 644)									_g32 = (_g32 + 1);
HXDLIN( 644)									if ((key28 != -1)) {
HXLINE( 644)										action28->addKey(key28,state28);
            									}
            								}
            							}
HXDLIN( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action29 = this->_ui_upP;
HXDLIN( 644)								int state29 = 2;
HXDLIN( 644)								int _g33 = 0;
HXDLIN( 644)								while((_g33 < copyKeys1->length)){
HXLINE( 644)									int key29 = copyKeys1->__get(_g33);
HXDLIN( 644)									_g33 = (_g33 + 1);
HXDLIN( 644)									if ((key29 != -1)) {
HXLINE( 644)										action29->addKey(key29,state29);
            									}
            								}
            							}
HXDLIN( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action30 = this->_ui_upR;
HXDLIN( 644)								int state30 = -1;
HXDLIN( 644)								int _g34 = 0;
HXDLIN( 644)								while((_g34 < copyKeys1->length)){
HXLINE( 644)									int key30 = copyKeys1->__get(_g34);
HXDLIN( 644)									_g34 = (_g34 + 1);
HXDLIN( 644)									if ((key30 != -1)) {
HXLINE( 644)										action30->addKey(key30,state30);
            									}
            								}
            							}
            						}
            						break;
            						case (int)1: {
HXLINE( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action31 = this->_ui_left;
HXDLIN( 644)								int state31 = 1;
HXDLIN( 644)								int _g35 = 0;
HXDLIN( 644)								while((_g35 < copyKeys1->length)){
HXLINE( 644)									int key31 = copyKeys1->__get(_g35);
HXDLIN( 644)									_g35 = (_g35 + 1);
HXDLIN( 644)									if ((key31 != -1)) {
HXLINE( 644)										action31->addKey(key31,state31);
            									}
            								}
            							}
HXDLIN( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action32 = this->_ui_leftP;
HXDLIN( 644)								int state32 = 2;
HXDLIN( 644)								int _g36 = 0;
HXDLIN( 644)								while((_g36 < copyKeys1->length)){
HXLINE( 644)									int key32 = copyKeys1->__get(_g36);
HXDLIN( 644)									_g36 = (_g36 + 1);
HXDLIN( 644)									if ((key32 != -1)) {
HXLINE( 644)										action32->addKey(key32,state32);
            									}
            								}
            							}
HXDLIN( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action33 = this->_ui_leftR;
HXDLIN( 644)								int state33 = -1;
HXDLIN( 644)								int _g37 = 0;
HXDLIN( 644)								while((_g37 < copyKeys1->length)){
HXLINE( 644)									int key33 = copyKeys1->__get(_g37);
HXDLIN( 644)									_g37 = (_g37 + 1);
HXDLIN( 644)									if ((key33 != -1)) {
HXLINE( 644)										action33->addKey(key33,state33);
            									}
            								}
            							}
            						}
            						break;
            						case (int)2: {
HXLINE( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action34 = this->_ui_right;
HXDLIN( 644)								int state34 = 1;
HXDLIN( 644)								int _g38 = 0;
HXDLIN( 644)								while((_g38 < copyKeys1->length)){
HXLINE( 644)									int key34 = copyKeys1->__get(_g38);
HXDLIN( 644)									_g38 = (_g38 + 1);
HXDLIN( 644)									if ((key34 != -1)) {
HXLINE( 644)										action34->addKey(key34,state34);
            									}
            								}
            							}
HXDLIN( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action35 = this->_ui_rightP;
HXDLIN( 644)								int state35 = 2;
HXDLIN( 644)								int _g39 = 0;
HXDLIN( 644)								while((_g39 < copyKeys1->length)){
HXLINE( 644)									int key35 = copyKeys1->__get(_g39);
HXDLIN( 644)									_g39 = (_g39 + 1);
HXDLIN( 644)									if ((key35 != -1)) {
HXLINE( 644)										action35->addKey(key35,state35);
            									}
            								}
            							}
HXDLIN( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action36 = this->_ui_rightR;
HXDLIN( 644)								int state36 = -1;
HXDLIN( 644)								int _g40 = 0;
HXDLIN( 644)								while((_g40 < copyKeys1->length)){
HXLINE( 644)									int key36 = copyKeys1->__get(_g40);
HXDLIN( 644)									_g40 = (_g40 + 1);
HXDLIN( 644)									if ((key36 != -1)) {
HXLINE( 644)										action36->addKey(key36,state36);
            									}
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action37 = this->_ui_down;
HXDLIN( 644)								int state37 = 1;
HXDLIN( 644)								int _g41 = 0;
HXDLIN( 644)								while((_g41 < copyKeys1->length)){
HXLINE( 644)									int key37 = copyKeys1->__get(_g41);
HXDLIN( 644)									_g41 = (_g41 + 1);
HXDLIN( 644)									if ((key37 != -1)) {
HXLINE( 644)										action37->addKey(key37,state37);
            									}
            								}
            							}
HXDLIN( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action38 = this->_ui_downP;
HXDLIN( 644)								int state38 = 2;
HXDLIN( 644)								int _g42 = 0;
HXDLIN( 644)								while((_g42 < copyKeys1->length)){
HXLINE( 644)									int key38 = copyKeys1->__get(_g42);
HXDLIN( 644)									_g42 = (_g42 + 1);
HXDLIN( 644)									if ((key38 != -1)) {
HXLINE( 644)										action38->addKey(key38,state38);
            									}
            								}
            							}
HXDLIN( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action39 = this->_ui_downR;
HXDLIN( 644)								int state39 = -1;
HXDLIN( 644)								int _g43 = 0;
HXDLIN( 644)								while((_g43 < copyKeys1->length)){
HXLINE( 644)									int key39 = copyKeys1->__get(_g43);
HXDLIN( 644)									_g43 = (_g43 + 1);
HXDLIN( 644)									if ((key39 != -1)) {
HXLINE( 644)										action39->addKey(key39,state39);
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action40 = this->_note_up;
HXDLIN( 644)								int state40 = 1;
HXDLIN( 644)								int _g44 = 0;
HXDLIN( 644)								while((_g44 < copyKeys1->length)){
HXLINE( 644)									int key40 = copyKeys1->__get(_g44);
HXDLIN( 644)									_g44 = (_g44 + 1);
HXDLIN( 644)									if ((key40 != -1)) {
HXLINE( 644)										action40->addKey(key40,state40);
            									}
            								}
            							}
HXDLIN( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action41 = this->_note_upP;
HXDLIN( 644)								int state41 = 2;
HXDLIN( 644)								int _g45 = 0;
HXDLIN( 644)								while((_g45 < copyKeys1->length)){
HXLINE( 644)									int key41 = copyKeys1->__get(_g45);
HXDLIN( 644)									_g45 = (_g45 + 1);
HXDLIN( 644)									if ((key41 != -1)) {
HXLINE( 644)										action41->addKey(key41,state41);
            									}
            								}
            							}
HXDLIN( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action42 = this->_note_upR;
HXDLIN( 644)								int state42 = -1;
HXDLIN( 644)								int _g46 = 0;
HXDLIN( 644)								while((_g46 < copyKeys1->length)){
HXLINE( 644)									int key42 = copyKeys1->__get(_g46);
HXDLIN( 644)									_g46 = (_g46 + 1);
HXDLIN( 644)									if ((key42 != -1)) {
HXLINE( 644)										action42->addKey(key42,state42);
            									}
            								}
            							}
            						}
            						break;
            						case (int)5: {
HXLINE( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action43 = this->_note_left;
HXDLIN( 644)								int state43 = 1;
HXDLIN( 644)								int _g47 = 0;
HXDLIN( 644)								while((_g47 < copyKeys1->length)){
HXLINE( 644)									int key43 = copyKeys1->__get(_g47);
HXDLIN( 644)									_g47 = (_g47 + 1);
HXDLIN( 644)									if ((key43 != -1)) {
HXLINE( 644)										action43->addKey(key43,state43);
            									}
            								}
            							}
HXDLIN( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action44 = this->_note_leftP;
HXDLIN( 644)								int state44 = 2;
HXDLIN( 644)								int _g48 = 0;
HXDLIN( 644)								while((_g48 < copyKeys1->length)){
HXLINE( 644)									int key44 = copyKeys1->__get(_g48);
HXDLIN( 644)									_g48 = (_g48 + 1);
HXDLIN( 644)									if ((key44 != -1)) {
HXLINE( 644)										action44->addKey(key44,state44);
            									}
            								}
            							}
HXDLIN( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action45 = this->_note_leftR;
HXDLIN( 644)								int state45 = -1;
HXDLIN( 644)								int _g49 = 0;
HXDLIN( 644)								while((_g49 < copyKeys1->length)){
HXLINE( 644)									int key45 = copyKeys1->__get(_g49);
HXDLIN( 644)									_g49 = (_g49 + 1);
HXDLIN( 644)									if ((key45 != -1)) {
HXLINE( 644)										action45->addKey(key45,state45);
            									}
            								}
            							}
            						}
            						break;
            						case (int)6: {
HXLINE( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action46 = this->_note_right;
HXDLIN( 644)								int state46 = 1;
HXDLIN( 644)								int _g50 = 0;
HXDLIN( 644)								while((_g50 < copyKeys1->length)){
HXLINE( 644)									int key46 = copyKeys1->__get(_g50);
HXDLIN( 644)									_g50 = (_g50 + 1);
HXDLIN( 644)									if ((key46 != -1)) {
HXLINE( 644)										action46->addKey(key46,state46);
            									}
            								}
            							}
HXDLIN( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action47 = this->_note_rightP;
HXDLIN( 644)								int state47 = 2;
HXDLIN( 644)								int _g51 = 0;
HXDLIN( 644)								while((_g51 < copyKeys1->length)){
HXLINE( 644)									int key47 = copyKeys1->__get(_g51);
HXDLIN( 644)									_g51 = (_g51 + 1);
HXDLIN( 644)									if ((key47 != -1)) {
HXLINE( 644)										action47->addKey(key47,state47);
            									}
            								}
            							}
HXDLIN( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action48 = this->_note_rightR;
HXDLIN( 644)								int state48 = -1;
HXDLIN( 644)								int _g52 = 0;
HXDLIN( 644)								while((_g52 < copyKeys1->length)){
HXLINE( 644)									int key48 = copyKeys1->__get(_g52);
HXDLIN( 644)									_g52 = (_g52 + 1);
HXDLIN( 644)									if ((key48 != -1)) {
HXLINE( 644)										action48->addKey(key48,state48);
            									}
            								}
            							}
            						}
            						break;
            						case (int)7: {
HXLINE( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action49 = this->_note_down;
HXDLIN( 644)								int state49 = 1;
HXDLIN( 644)								int _g53 = 0;
HXDLIN( 644)								while((_g53 < copyKeys1->length)){
HXLINE( 644)									int key49 = copyKeys1->__get(_g53);
HXDLIN( 644)									_g53 = (_g53 + 1);
HXDLIN( 644)									if ((key49 != -1)) {
HXLINE( 644)										action49->addKey(key49,state49);
            									}
            								}
            							}
HXDLIN( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action50 = this->_note_downP;
HXDLIN( 644)								int state50 = 2;
HXDLIN( 644)								int _g54 = 0;
HXDLIN( 644)								while((_g54 < copyKeys1->length)){
HXLINE( 644)									int key50 = copyKeys1->__get(_g54);
HXDLIN( 644)									_g54 = (_g54 + 1);
HXDLIN( 644)									if ((key50 != -1)) {
HXLINE( 644)										action50->addKey(key50,state50);
            									}
            								}
            							}
HXDLIN( 644)							{
HXLINE( 644)								 ::flixel::input::actions::FlxActionDigital action51 = this->_note_downR;
HXDLIN( 644)								int state51 = -1;
HXDLIN( 644)								int _g55 = 0;
HXDLIN( 644)								while((_g55 < copyKeys1->length)){
HXLINE( 644)									int key51 = copyKeys1->__get(_g55);
HXDLIN( 644)									_g55 = (_g55 + 1);
HXDLIN( 644)									if ((key51 != -1)) {
HXLINE( 644)										action51->addKey(key51,state51);
            									}
            								}
            							}
            						}
            						break;
            						case (int)8: {
HXLINE( 644)							 ::flixel::input::actions::FlxActionDigital action52 = this->_reset;
HXDLIN( 644)							int state52 = 2;
HXDLIN( 644)							int _g56 = 0;
HXDLIN( 644)							while((_g56 < copyKeys1->length)){
HXLINE( 644)								int key52 = copyKeys1->__get(_g56);
HXDLIN( 644)								_g56 = (_g56 + 1);
HXDLIN( 644)								if ((key52 != -1)) {
HXLINE( 644)									action52->addKey(key52,state52);
            								}
            							}
            						}
            						break;
            						case (int)9: {
HXLINE( 644)							 ::flixel::input::actions::FlxActionDigital action53 = this->_accept;
HXDLIN( 644)							int state53 = 2;
HXDLIN( 644)							int _g57 = 0;
HXDLIN( 644)							while((_g57 < copyKeys1->length)){
HXLINE( 644)								int key53 = copyKeys1->__get(_g57);
HXDLIN( 644)								_g57 = (_g57 + 1);
HXDLIN( 644)								if ((key53 != -1)) {
HXLINE( 644)									action53->addKey(key53,state53);
            								}
            							}
            						}
            						break;
            						case (int)10: {
HXLINE( 644)							 ::flixel::input::actions::FlxActionDigital action54 = this->_back;
HXDLIN( 644)							int state54 = 2;
HXDLIN( 644)							int _g58 = 0;
HXDLIN( 644)							while((_g58 < copyKeys1->length)){
HXLINE( 644)								int key54 = copyKeys1->__get(_g58);
HXDLIN( 644)								_g58 = (_g58 + 1);
HXDLIN( 644)								if ((key54 != -1)) {
HXLINE( 644)									action54->addKey(key54,state54);
            								}
            							}
            						}
            						break;
            						case (int)11: {
HXLINE( 644)							 ::flixel::input::actions::FlxActionDigital action55 = this->_pause;
HXDLIN( 644)							int state55 = 2;
HXDLIN( 644)							int _g59 = 0;
HXDLIN( 644)							while((_g59 < copyKeys1->length)){
HXLINE( 644)								int key55 = copyKeys1->__get(_g59);
HXDLIN( 644)								_g59 = (_g59 + 1);
HXDLIN( 644)								if ((key55 != -1)) {
HXLINE( 644)									action55->addKey(key55,state55);
            								}
            							}
            						}
            						break;
            					}
            				}
HXLINE( 645)				{
HXLINE( 645)					::Array< int > copyKeys2 = ( (::Array< int >)(keysMap->get(HX_("ui_left",12,4d,89,f7))) )->copy();
HXDLIN( 645)					{
HXLINE( 645)						int _g60 = 0;
HXDLIN( 645)						int _g61 = copyKeys2->length;
HXDLIN( 645)						while((_g60 < _g61)){
HXLINE( 645)							_g60 = (_g60 + 1);
HXDLIN( 645)							int i2 = (_g60 - 1);
HXDLIN( 645)							if ((i2 == -1)) {
HXLINE( 645)								copyKeys2->remove(i2);
            							}
            						}
            					}
HXDLIN( 645)					switch((int)(::Control_obj::UI_LEFT_dyn()->_hx_getIndex())){
            						case (int)0: {
HXLINE( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action56 = this->_ui_up;
HXDLIN( 645)								int state56 = 1;
HXDLIN( 645)								int _g62 = 0;
HXDLIN( 645)								while((_g62 < copyKeys2->length)){
HXLINE( 645)									int key56 = copyKeys2->__get(_g62);
HXDLIN( 645)									_g62 = (_g62 + 1);
HXDLIN( 645)									if ((key56 != -1)) {
HXLINE( 645)										action56->addKey(key56,state56);
            									}
            								}
            							}
HXDLIN( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action57 = this->_ui_upP;
HXDLIN( 645)								int state57 = 2;
HXDLIN( 645)								int _g63 = 0;
HXDLIN( 645)								while((_g63 < copyKeys2->length)){
HXLINE( 645)									int key57 = copyKeys2->__get(_g63);
HXDLIN( 645)									_g63 = (_g63 + 1);
HXDLIN( 645)									if ((key57 != -1)) {
HXLINE( 645)										action57->addKey(key57,state57);
            									}
            								}
            							}
HXDLIN( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action58 = this->_ui_upR;
HXDLIN( 645)								int state58 = -1;
HXDLIN( 645)								int _g64 = 0;
HXDLIN( 645)								while((_g64 < copyKeys2->length)){
HXLINE( 645)									int key58 = copyKeys2->__get(_g64);
HXDLIN( 645)									_g64 = (_g64 + 1);
HXDLIN( 645)									if ((key58 != -1)) {
HXLINE( 645)										action58->addKey(key58,state58);
            									}
            								}
            							}
            						}
            						break;
            						case (int)1: {
HXLINE( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action59 = this->_ui_left;
HXDLIN( 645)								int state59 = 1;
HXDLIN( 645)								int _g65 = 0;
HXDLIN( 645)								while((_g65 < copyKeys2->length)){
HXLINE( 645)									int key59 = copyKeys2->__get(_g65);
HXDLIN( 645)									_g65 = (_g65 + 1);
HXDLIN( 645)									if ((key59 != -1)) {
HXLINE( 645)										action59->addKey(key59,state59);
            									}
            								}
            							}
HXDLIN( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action60 = this->_ui_leftP;
HXDLIN( 645)								int state60 = 2;
HXDLIN( 645)								int _g66 = 0;
HXDLIN( 645)								while((_g66 < copyKeys2->length)){
HXLINE( 645)									int key60 = copyKeys2->__get(_g66);
HXDLIN( 645)									_g66 = (_g66 + 1);
HXDLIN( 645)									if ((key60 != -1)) {
HXLINE( 645)										action60->addKey(key60,state60);
            									}
            								}
            							}
HXDLIN( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action61 = this->_ui_leftR;
HXDLIN( 645)								int state61 = -1;
HXDLIN( 645)								int _g67 = 0;
HXDLIN( 645)								while((_g67 < copyKeys2->length)){
HXLINE( 645)									int key61 = copyKeys2->__get(_g67);
HXDLIN( 645)									_g67 = (_g67 + 1);
HXDLIN( 645)									if ((key61 != -1)) {
HXLINE( 645)										action61->addKey(key61,state61);
            									}
            								}
            							}
            						}
            						break;
            						case (int)2: {
HXLINE( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action62 = this->_ui_right;
HXDLIN( 645)								int state62 = 1;
HXDLIN( 645)								int _g68 = 0;
HXDLIN( 645)								while((_g68 < copyKeys2->length)){
HXLINE( 645)									int key62 = copyKeys2->__get(_g68);
HXDLIN( 645)									_g68 = (_g68 + 1);
HXDLIN( 645)									if ((key62 != -1)) {
HXLINE( 645)										action62->addKey(key62,state62);
            									}
            								}
            							}
HXDLIN( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action63 = this->_ui_rightP;
HXDLIN( 645)								int state63 = 2;
HXDLIN( 645)								int _g69 = 0;
HXDLIN( 645)								while((_g69 < copyKeys2->length)){
HXLINE( 645)									int key63 = copyKeys2->__get(_g69);
HXDLIN( 645)									_g69 = (_g69 + 1);
HXDLIN( 645)									if ((key63 != -1)) {
HXLINE( 645)										action63->addKey(key63,state63);
            									}
            								}
            							}
HXDLIN( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action64 = this->_ui_rightR;
HXDLIN( 645)								int state64 = -1;
HXDLIN( 645)								int _g70 = 0;
HXDLIN( 645)								while((_g70 < copyKeys2->length)){
HXLINE( 645)									int key64 = copyKeys2->__get(_g70);
HXDLIN( 645)									_g70 = (_g70 + 1);
HXDLIN( 645)									if ((key64 != -1)) {
HXLINE( 645)										action64->addKey(key64,state64);
            									}
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action65 = this->_ui_down;
HXDLIN( 645)								int state65 = 1;
HXDLIN( 645)								int _g71 = 0;
HXDLIN( 645)								while((_g71 < copyKeys2->length)){
HXLINE( 645)									int key65 = copyKeys2->__get(_g71);
HXDLIN( 645)									_g71 = (_g71 + 1);
HXDLIN( 645)									if ((key65 != -1)) {
HXLINE( 645)										action65->addKey(key65,state65);
            									}
            								}
            							}
HXDLIN( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action66 = this->_ui_downP;
HXDLIN( 645)								int state66 = 2;
HXDLIN( 645)								int _g72 = 0;
HXDLIN( 645)								while((_g72 < copyKeys2->length)){
HXLINE( 645)									int key66 = copyKeys2->__get(_g72);
HXDLIN( 645)									_g72 = (_g72 + 1);
HXDLIN( 645)									if ((key66 != -1)) {
HXLINE( 645)										action66->addKey(key66,state66);
            									}
            								}
            							}
HXDLIN( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action67 = this->_ui_downR;
HXDLIN( 645)								int state67 = -1;
HXDLIN( 645)								int _g73 = 0;
HXDLIN( 645)								while((_g73 < copyKeys2->length)){
HXLINE( 645)									int key67 = copyKeys2->__get(_g73);
HXDLIN( 645)									_g73 = (_g73 + 1);
HXDLIN( 645)									if ((key67 != -1)) {
HXLINE( 645)										action67->addKey(key67,state67);
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action68 = this->_note_up;
HXDLIN( 645)								int state68 = 1;
HXDLIN( 645)								int _g74 = 0;
HXDLIN( 645)								while((_g74 < copyKeys2->length)){
HXLINE( 645)									int key68 = copyKeys2->__get(_g74);
HXDLIN( 645)									_g74 = (_g74 + 1);
HXDLIN( 645)									if ((key68 != -1)) {
HXLINE( 645)										action68->addKey(key68,state68);
            									}
            								}
            							}
HXDLIN( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action69 = this->_note_upP;
HXDLIN( 645)								int state69 = 2;
HXDLIN( 645)								int _g75 = 0;
HXDLIN( 645)								while((_g75 < copyKeys2->length)){
HXLINE( 645)									int key69 = copyKeys2->__get(_g75);
HXDLIN( 645)									_g75 = (_g75 + 1);
HXDLIN( 645)									if ((key69 != -1)) {
HXLINE( 645)										action69->addKey(key69,state69);
            									}
            								}
            							}
HXDLIN( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action70 = this->_note_upR;
HXDLIN( 645)								int state70 = -1;
HXDLIN( 645)								int _g76 = 0;
HXDLIN( 645)								while((_g76 < copyKeys2->length)){
HXLINE( 645)									int key70 = copyKeys2->__get(_g76);
HXDLIN( 645)									_g76 = (_g76 + 1);
HXDLIN( 645)									if ((key70 != -1)) {
HXLINE( 645)										action70->addKey(key70,state70);
            									}
            								}
            							}
            						}
            						break;
            						case (int)5: {
HXLINE( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action71 = this->_note_left;
HXDLIN( 645)								int state71 = 1;
HXDLIN( 645)								int _g77 = 0;
HXDLIN( 645)								while((_g77 < copyKeys2->length)){
HXLINE( 645)									int key71 = copyKeys2->__get(_g77);
HXDLIN( 645)									_g77 = (_g77 + 1);
HXDLIN( 645)									if ((key71 != -1)) {
HXLINE( 645)										action71->addKey(key71,state71);
            									}
            								}
            							}
HXDLIN( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action72 = this->_note_leftP;
HXDLIN( 645)								int state72 = 2;
HXDLIN( 645)								int _g78 = 0;
HXDLIN( 645)								while((_g78 < copyKeys2->length)){
HXLINE( 645)									int key72 = copyKeys2->__get(_g78);
HXDLIN( 645)									_g78 = (_g78 + 1);
HXDLIN( 645)									if ((key72 != -1)) {
HXLINE( 645)										action72->addKey(key72,state72);
            									}
            								}
            							}
HXDLIN( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action73 = this->_note_leftR;
HXDLIN( 645)								int state73 = -1;
HXDLIN( 645)								int _g79 = 0;
HXDLIN( 645)								while((_g79 < copyKeys2->length)){
HXLINE( 645)									int key73 = copyKeys2->__get(_g79);
HXDLIN( 645)									_g79 = (_g79 + 1);
HXDLIN( 645)									if ((key73 != -1)) {
HXLINE( 645)										action73->addKey(key73,state73);
            									}
            								}
            							}
            						}
            						break;
            						case (int)6: {
HXLINE( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action74 = this->_note_right;
HXDLIN( 645)								int state74 = 1;
HXDLIN( 645)								int _g80 = 0;
HXDLIN( 645)								while((_g80 < copyKeys2->length)){
HXLINE( 645)									int key74 = copyKeys2->__get(_g80);
HXDLIN( 645)									_g80 = (_g80 + 1);
HXDLIN( 645)									if ((key74 != -1)) {
HXLINE( 645)										action74->addKey(key74,state74);
            									}
            								}
            							}
HXDLIN( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action75 = this->_note_rightP;
HXDLIN( 645)								int state75 = 2;
HXDLIN( 645)								int _g81 = 0;
HXDLIN( 645)								while((_g81 < copyKeys2->length)){
HXLINE( 645)									int key75 = copyKeys2->__get(_g81);
HXDLIN( 645)									_g81 = (_g81 + 1);
HXDLIN( 645)									if ((key75 != -1)) {
HXLINE( 645)										action75->addKey(key75,state75);
            									}
            								}
            							}
HXDLIN( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action76 = this->_note_rightR;
HXDLIN( 645)								int state76 = -1;
HXDLIN( 645)								int _g82 = 0;
HXDLIN( 645)								while((_g82 < copyKeys2->length)){
HXLINE( 645)									int key76 = copyKeys2->__get(_g82);
HXDLIN( 645)									_g82 = (_g82 + 1);
HXDLIN( 645)									if ((key76 != -1)) {
HXLINE( 645)										action76->addKey(key76,state76);
            									}
            								}
            							}
            						}
            						break;
            						case (int)7: {
HXLINE( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action77 = this->_note_down;
HXDLIN( 645)								int state77 = 1;
HXDLIN( 645)								int _g83 = 0;
HXDLIN( 645)								while((_g83 < copyKeys2->length)){
HXLINE( 645)									int key77 = copyKeys2->__get(_g83);
HXDLIN( 645)									_g83 = (_g83 + 1);
HXDLIN( 645)									if ((key77 != -1)) {
HXLINE( 645)										action77->addKey(key77,state77);
            									}
            								}
            							}
HXDLIN( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action78 = this->_note_downP;
HXDLIN( 645)								int state78 = 2;
HXDLIN( 645)								int _g84 = 0;
HXDLIN( 645)								while((_g84 < copyKeys2->length)){
HXLINE( 645)									int key78 = copyKeys2->__get(_g84);
HXDLIN( 645)									_g84 = (_g84 + 1);
HXDLIN( 645)									if ((key78 != -1)) {
HXLINE( 645)										action78->addKey(key78,state78);
            									}
            								}
            							}
HXDLIN( 645)							{
HXLINE( 645)								 ::flixel::input::actions::FlxActionDigital action79 = this->_note_downR;
HXDLIN( 645)								int state79 = -1;
HXDLIN( 645)								int _g85 = 0;
HXDLIN( 645)								while((_g85 < copyKeys2->length)){
HXLINE( 645)									int key79 = copyKeys2->__get(_g85);
HXDLIN( 645)									_g85 = (_g85 + 1);
HXDLIN( 645)									if ((key79 != -1)) {
HXLINE( 645)										action79->addKey(key79,state79);
            									}
            								}
            							}
            						}
            						break;
            						case (int)8: {
HXLINE( 645)							 ::flixel::input::actions::FlxActionDigital action80 = this->_reset;
HXDLIN( 645)							int state80 = 2;
HXDLIN( 645)							int _g86 = 0;
HXDLIN( 645)							while((_g86 < copyKeys2->length)){
HXLINE( 645)								int key80 = copyKeys2->__get(_g86);
HXDLIN( 645)								_g86 = (_g86 + 1);
HXDLIN( 645)								if ((key80 != -1)) {
HXLINE( 645)									action80->addKey(key80,state80);
            								}
            							}
            						}
            						break;
            						case (int)9: {
HXLINE( 645)							 ::flixel::input::actions::FlxActionDigital action81 = this->_accept;
HXDLIN( 645)							int state81 = 2;
HXDLIN( 645)							int _g87 = 0;
HXDLIN( 645)							while((_g87 < copyKeys2->length)){
HXLINE( 645)								int key81 = copyKeys2->__get(_g87);
HXDLIN( 645)								_g87 = (_g87 + 1);
HXDLIN( 645)								if ((key81 != -1)) {
HXLINE( 645)									action81->addKey(key81,state81);
            								}
            							}
            						}
            						break;
            						case (int)10: {
HXLINE( 645)							 ::flixel::input::actions::FlxActionDigital action82 = this->_back;
HXDLIN( 645)							int state82 = 2;
HXDLIN( 645)							int _g88 = 0;
HXDLIN( 645)							while((_g88 < copyKeys2->length)){
HXLINE( 645)								int key82 = copyKeys2->__get(_g88);
HXDLIN( 645)								_g88 = (_g88 + 1);
HXDLIN( 645)								if ((key82 != -1)) {
HXLINE( 645)									action82->addKey(key82,state82);
            								}
            							}
            						}
            						break;
            						case (int)11: {
HXLINE( 645)							 ::flixel::input::actions::FlxActionDigital action83 = this->_pause;
HXDLIN( 645)							int state83 = 2;
HXDLIN( 645)							int _g89 = 0;
HXDLIN( 645)							while((_g89 < copyKeys2->length)){
HXLINE( 645)								int key83 = copyKeys2->__get(_g89);
HXDLIN( 645)								_g89 = (_g89 + 1);
HXDLIN( 645)								if ((key83 != -1)) {
HXLINE( 645)									action83->addKey(key83,state83);
            								}
            							}
            						}
            						break;
            					}
            				}
HXLINE( 646)				{
HXLINE( 646)					::Array< int > copyKeys3 = ( (::Array< int >)(keysMap->get(HX_("ui_right",71,30,a7,17))) )->copy();
HXDLIN( 646)					{
HXLINE( 646)						int _g90 = 0;
HXDLIN( 646)						int _g91 = copyKeys3->length;
HXDLIN( 646)						while((_g90 < _g91)){
HXLINE( 646)							_g90 = (_g90 + 1);
HXDLIN( 646)							int i3 = (_g90 - 1);
HXDLIN( 646)							if ((i3 == -1)) {
HXLINE( 646)								copyKeys3->remove(i3);
            							}
            						}
            					}
HXDLIN( 646)					switch((int)(::Control_obj::UI_RIGHT_dyn()->_hx_getIndex())){
            						case (int)0: {
HXLINE( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action84 = this->_ui_up;
HXDLIN( 646)								int state84 = 1;
HXDLIN( 646)								int _g92 = 0;
HXDLIN( 646)								while((_g92 < copyKeys3->length)){
HXLINE( 646)									int key84 = copyKeys3->__get(_g92);
HXDLIN( 646)									_g92 = (_g92 + 1);
HXDLIN( 646)									if ((key84 != -1)) {
HXLINE( 646)										action84->addKey(key84,state84);
            									}
            								}
            							}
HXDLIN( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action85 = this->_ui_upP;
HXDLIN( 646)								int state85 = 2;
HXDLIN( 646)								int _g93 = 0;
HXDLIN( 646)								while((_g93 < copyKeys3->length)){
HXLINE( 646)									int key85 = copyKeys3->__get(_g93);
HXDLIN( 646)									_g93 = (_g93 + 1);
HXDLIN( 646)									if ((key85 != -1)) {
HXLINE( 646)										action85->addKey(key85,state85);
            									}
            								}
            							}
HXDLIN( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action86 = this->_ui_upR;
HXDLIN( 646)								int state86 = -1;
HXDLIN( 646)								int _g94 = 0;
HXDLIN( 646)								while((_g94 < copyKeys3->length)){
HXLINE( 646)									int key86 = copyKeys3->__get(_g94);
HXDLIN( 646)									_g94 = (_g94 + 1);
HXDLIN( 646)									if ((key86 != -1)) {
HXLINE( 646)										action86->addKey(key86,state86);
            									}
            								}
            							}
            						}
            						break;
            						case (int)1: {
HXLINE( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action87 = this->_ui_left;
HXDLIN( 646)								int state87 = 1;
HXDLIN( 646)								int _g95 = 0;
HXDLIN( 646)								while((_g95 < copyKeys3->length)){
HXLINE( 646)									int key87 = copyKeys3->__get(_g95);
HXDLIN( 646)									_g95 = (_g95 + 1);
HXDLIN( 646)									if ((key87 != -1)) {
HXLINE( 646)										action87->addKey(key87,state87);
            									}
            								}
            							}
HXDLIN( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action88 = this->_ui_leftP;
HXDLIN( 646)								int state88 = 2;
HXDLIN( 646)								int _g96 = 0;
HXDLIN( 646)								while((_g96 < copyKeys3->length)){
HXLINE( 646)									int key88 = copyKeys3->__get(_g96);
HXDLIN( 646)									_g96 = (_g96 + 1);
HXDLIN( 646)									if ((key88 != -1)) {
HXLINE( 646)										action88->addKey(key88,state88);
            									}
            								}
            							}
HXDLIN( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action89 = this->_ui_leftR;
HXDLIN( 646)								int state89 = -1;
HXDLIN( 646)								int _g97 = 0;
HXDLIN( 646)								while((_g97 < copyKeys3->length)){
HXLINE( 646)									int key89 = copyKeys3->__get(_g97);
HXDLIN( 646)									_g97 = (_g97 + 1);
HXDLIN( 646)									if ((key89 != -1)) {
HXLINE( 646)										action89->addKey(key89,state89);
            									}
            								}
            							}
            						}
            						break;
            						case (int)2: {
HXLINE( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action90 = this->_ui_right;
HXDLIN( 646)								int state90 = 1;
HXDLIN( 646)								int _g98 = 0;
HXDLIN( 646)								while((_g98 < copyKeys3->length)){
HXLINE( 646)									int key90 = copyKeys3->__get(_g98);
HXDLIN( 646)									_g98 = (_g98 + 1);
HXDLIN( 646)									if ((key90 != -1)) {
HXLINE( 646)										action90->addKey(key90,state90);
            									}
            								}
            							}
HXDLIN( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action91 = this->_ui_rightP;
HXDLIN( 646)								int state91 = 2;
HXDLIN( 646)								int _g99 = 0;
HXDLIN( 646)								while((_g99 < copyKeys3->length)){
HXLINE( 646)									int key91 = copyKeys3->__get(_g99);
HXDLIN( 646)									_g99 = (_g99 + 1);
HXDLIN( 646)									if ((key91 != -1)) {
HXLINE( 646)										action91->addKey(key91,state91);
            									}
            								}
            							}
HXDLIN( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action92 = this->_ui_rightR;
HXDLIN( 646)								int state92 = -1;
HXDLIN( 646)								int _g100 = 0;
HXDLIN( 646)								while((_g100 < copyKeys3->length)){
HXLINE( 646)									int key92 = copyKeys3->__get(_g100);
HXDLIN( 646)									_g100 = (_g100 + 1);
HXDLIN( 646)									if ((key92 != -1)) {
HXLINE( 646)										action92->addKey(key92,state92);
            									}
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action93 = this->_ui_down;
HXDLIN( 646)								int state93 = 1;
HXDLIN( 646)								int _g101 = 0;
HXDLIN( 646)								while((_g101 < copyKeys3->length)){
HXLINE( 646)									int key93 = copyKeys3->__get(_g101);
HXDLIN( 646)									_g101 = (_g101 + 1);
HXDLIN( 646)									if ((key93 != -1)) {
HXLINE( 646)										action93->addKey(key93,state93);
            									}
            								}
            							}
HXDLIN( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action94 = this->_ui_downP;
HXDLIN( 646)								int state94 = 2;
HXDLIN( 646)								int _g102 = 0;
HXDLIN( 646)								while((_g102 < copyKeys3->length)){
HXLINE( 646)									int key94 = copyKeys3->__get(_g102);
HXDLIN( 646)									_g102 = (_g102 + 1);
HXDLIN( 646)									if ((key94 != -1)) {
HXLINE( 646)										action94->addKey(key94,state94);
            									}
            								}
            							}
HXDLIN( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action95 = this->_ui_downR;
HXDLIN( 646)								int state95 = -1;
HXDLIN( 646)								int _g103 = 0;
HXDLIN( 646)								while((_g103 < copyKeys3->length)){
HXLINE( 646)									int key95 = copyKeys3->__get(_g103);
HXDLIN( 646)									_g103 = (_g103 + 1);
HXDLIN( 646)									if ((key95 != -1)) {
HXLINE( 646)										action95->addKey(key95,state95);
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action96 = this->_note_up;
HXDLIN( 646)								int state96 = 1;
HXDLIN( 646)								int _g104 = 0;
HXDLIN( 646)								while((_g104 < copyKeys3->length)){
HXLINE( 646)									int key96 = copyKeys3->__get(_g104);
HXDLIN( 646)									_g104 = (_g104 + 1);
HXDLIN( 646)									if ((key96 != -1)) {
HXLINE( 646)										action96->addKey(key96,state96);
            									}
            								}
            							}
HXDLIN( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action97 = this->_note_upP;
HXDLIN( 646)								int state97 = 2;
HXDLIN( 646)								int _g105 = 0;
HXDLIN( 646)								while((_g105 < copyKeys3->length)){
HXLINE( 646)									int key97 = copyKeys3->__get(_g105);
HXDLIN( 646)									_g105 = (_g105 + 1);
HXDLIN( 646)									if ((key97 != -1)) {
HXLINE( 646)										action97->addKey(key97,state97);
            									}
            								}
            							}
HXDLIN( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action98 = this->_note_upR;
HXDLIN( 646)								int state98 = -1;
HXDLIN( 646)								int _g106 = 0;
HXDLIN( 646)								while((_g106 < copyKeys3->length)){
HXLINE( 646)									int key98 = copyKeys3->__get(_g106);
HXDLIN( 646)									_g106 = (_g106 + 1);
HXDLIN( 646)									if ((key98 != -1)) {
HXLINE( 646)										action98->addKey(key98,state98);
            									}
            								}
            							}
            						}
            						break;
            						case (int)5: {
HXLINE( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action99 = this->_note_left;
HXDLIN( 646)								int state99 = 1;
HXDLIN( 646)								int _g107 = 0;
HXDLIN( 646)								while((_g107 < copyKeys3->length)){
HXLINE( 646)									int key99 = copyKeys3->__get(_g107);
HXDLIN( 646)									_g107 = (_g107 + 1);
HXDLIN( 646)									if ((key99 != -1)) {
HXLINE( 646)										action99->addKey(key99,state99);
            									}
            								}
            							}
HXDLIN( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action100 = this->_note_leftP;
HXDLIN( 646)								int state100 = 2;
HXDLIN( 646)								int _g108 = 0;
HXDLIN( 646)								while((_g108 < copyKeys3->length)){
HXLINE( 646)									int key100 = copyKeys3->__get(_g108);
HXDLIN( 646)									_g108 = (_g108 + 1);
HXDLIN( 646)									if ((key100 != -1)) {
HXLINE( 646)										action100->addKey(key100,state100);
            									}
            								}
            							}
HXDLIN( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action101 = this->_note_leftR;
HXDLIN( 646)								int state101 = -1;
HXDLIN( 646)								int _g109 = 0;
HXDLIN( 646)								while((_g109 < copyKeys3->length)){
HXLINE( 646)									int key101 = copyKeys3->__get(_g109);
HXDLIN( 646)									_g109 = (_g109 + 1);
HXDLIN( 646)									if ((key101 != -1)) {
HXLINE( 646)										action101->addKey(key101,state101);
            									}
            								}
            							}
            						}
            						break;
            						case (int)6: {
HXLINE( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action102 = this->_note_right;
HXDLIN( 646)								int state102 = 1;
HXDLIN( 646)								int _g110 = 0;
HXDLIN( 646)								while((_g110 < copyKeys3->length)){
HXLINE( 646)									int key102 = copyKeys3->__get(_g110);
HXDLIN( 646)									_g110 = (_g110 + 1);
HXDLIN( 646)									if ((key102 != -1)) {
HXLINE( 646)										action102->addKey(key102,state102);
            									}
            								}
            							}
HXDLIN( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action103 = this->_note_rightP;
HXDLIN( 646)								int state103 = 2;
HXDLIN( 646)								int _g111 = 0;
HXDLIN( 646)								while((_g111 < copyKeys3->length)){
HXLINE( 646)									int key103 = copyKeys3->__get(_g111);
HXDLIN( 646)									_g111 = (_g111 + 1);
HXDLIN( 646)									if ((key103 != -1)) {
HXLINE( 646)										action103->addKey(key103,state103);
            									}
            								}
            							}
HXDLIN( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action104 = this->_note_rightR;
HXDLIN( 646)								int state104 = -1;
HXDLIN( 646)								int _g112 = 0;
HXDLIN( 646)								while((_g112 < copyKeys3->length)){
HXLINE( 646)									int key104 = copyKeys3->__get(_g112);
HXDLIN( 646)									_g112 = (_g112 + 1);
HXDLIN( 646)									if ((key104 != -1)) {
HXLINE( 646)										action104->addKey(key104,state104);
            									}
            								}
            							}
            						}
            						break;
            						case (int)7: {
HXLINE( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action105 = this->_note_down;
HXDLIN( 646)								int state105 = 1;
HXDLIN( 646)								int _g113 = 0;
HXDLIN( 646)								while((_g113 < copyKeys3->length)){
HXLINE( 646)									int key105 = copyKeys3->__get(_g113);
HXDLIN( 646)									_g113 = (_g113 + 1);
HXDLIN( 646)									if ((key105 != -1)) {
HXLINE( 646)										action105->addKey(key105,state105);
            									}
            								}
            							}
HXDLIN( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action106 = this->_note_downP;
HXDLIN( 646)								int state106 = 2;
HXDLIN( 646)								int _g114 = 0;
HXDLIN( 646)								while((_g114 < copyKeys3->length)){
HXLINE( 646)									int key106 = copyKeys3->__get(_g114);
HXDLIN( 646)									_g114 = (_g114 + 1);
HXDLIN( 646)									if ((key106 != -1)) {
HXLINE( 646)										action106->addKey(key106,state106);
            									}
            								}
            							}
HXDLIN( 646)							{
HXLINE( 646)								 ::flixel::input::actions::FlxActionDigital action107 = this->_note_downR;
HXDLIN( 646)								int state107 = -1;
HXDLIN( 646)								int _g115 = 0;
HXDLIN( 646)								while((_g115 < copyKeys3->length)){
HXLINE( 646)									int key107 = copyKeys3->__get(_g115);
HXDLIN( 646)									_g115 = (_g115 + 1);
HXDLIN( 646)									if ((key107 != -1)) {
HXLINE( 646)										action107->addKey(key107,state107);
            									}
            								}
            							}
            						}
            						break;
            						case (int)8: {
HXLINE( 646)							 ::flixel::input::actions::FlxActionDigital action108 = this->_reset;
HXDLIN( 646)							int state108 = 2;
HXDLIN( 646)							int _g116 = 0;
HXDLIN( 646)							while((_g116 < copyKeys3->length)){
HXLINE( 646)								int key108 = copyKeys3->__get(_g116);
HXDLIN( 646)								_g116 = (_g116 + 1);
HXDLIN( 646)								if ((key108 != -1)) {
HXLINE( 646)									action108->addKey(key108,state108);
            								}
            							}
            						}
            						break;
            						case (int)9: {
HXLINE( 646)							 ::flixel::input::actions::FlxActionDigital action109 = this->_accept;
HXDLIN( 646)							int state109 = 2;
HXDLIN( 646)							int _g117 = 0;
HXDLIN( 646)							while((_g117 < copyKeys3->length)){
HXLINE( 646)								int key109 = copyKeys3->__get(_g117);
HXDLIN( 646)								_g117 = (_g117 + 1);
HXDLIN( 646)								if ((key109 != -1)) {
HXLINE( 646)									action109->addKey(key109,state109);
            								}
            							}
            						}
            						break;
            						case (int)10: {
HXLINE( 646)							 ::flixel::input::actions::FlxActionDigital action110 = this->_back;
HXDLIN( 646)							int state110 = 2;
HXDLIN( 646)							int _g118 = 0;
HXDLIN( 646)							while((_g118 < copyKeys3->length)){
HXLINE( 646)								int key110 = copyKeys3->__get(_g118);
HXDLIN( 646)								_g118 = (_g118 + 1);
HXDLIN( 646)								if ((key110 != -1)) {
HXLINE( 646)									action110->addKey(key110,state110);
            								}
            							}
            						}
            						break;
            						case (int)11: {
HXLINE( 646)							 ::flixel::input::actions::FlxActionDigital action111 = this->_pause;
HXDLIN( 646)							int state111 = 2;
HXDLIN( 646)							int _g119 = 0;
HXDLIN( 646)							while((_g119 < copyKeys3->length)){
HXLINE( 646)								int key111 = copyKeys3->__get(_g119);
HXDLIN( 646)								_g119 = (_g119 + 1);
HXDLIN( 646)								if ((key111 != -1)) {
HXLINE( 646)									action111->addKey(key111,state111);
            								}
            							}
            						}
            						break;
            					}
            				}
HXLINE( 647)				{
HXLINE( 647)					::Array< int > copyKeys4 = ( (::Array< int >)(keysMap->get(HX_("note_up",c8,67,5c,4d))) )->copy();
HXDLIN( 647)					{
HXLINE( 647)						int _g120 = 0;
HXDLIN( 647)						int _g121 = copyKeys4->length;
HXDLIN( 647)						while((_g120 < _g121)){
HXLINE( 647)							_g120 = (_g120 + 1);
HXDLIN( 647)							int i4 = (_g120 - 1);
HXDLIN( 647)							if ((i4 == -1)) {
HXLINE( 647)								copyKeys4->remove(i4);
            							}
            						}
            					}
HXDLIN( 647)					switch((int)(::Control_obj::NOTE_UP_dyn()->_hx_getIndex())){
            						case (int)0: {
HXLINE( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action112 = this->_ui_up;
HXDLIN( 647)								int state112 = 1;
HXDLIN( 647)								int _g122 = 0;
HXDLIN( 647)								while((_g122 < copyKeys4->length)){
HXLINE( 647)									int key112 = copyKeys4->__get(_g122);
HXDLIN( 647)									_g122 = (_g122 + 1);
HXDLIN( 647)									if ((key112 != -1)) {
HXLINE( 647)										action112->addKey(key112,state112);
            									}
            								}
            							}
HXDLIN( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action113 = this->_ui_upP;
HXDLIN( 647)								int state113 = 2;
HXDLIN( 647)								int _g123 = 0;
HXDLIN( 647)								while((_g123 < copyKeys4->length)){
HXLINE( 647)									int key113 = copyKeys4->__get(_g123);
HXDLIN( 647)									_g123 = (_g123 + 1);
HXDLIN( 647)									if ((key113 != -1)) {
HXLINE( 647)										action113->addKey(key113,state113);
            									}
            								}
            							}
HXDLIN( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action114 = this->_ui_upR;
HXDLIN( 647)								int state114 = -1;
HXDLIN( 647)								int _g124 = 0;
HXDLIN( 647)								while((_g124 < copyKeys4->length)){
HXLINE( 647)									int key114 = copyKeys4->__get(_g124);
HXDLIN( 647)									_g124 = (_g124 + 1);
HXDLIN( 647)									if ((key114 != -1)) {
HXLINE( 647)										action114->addKey(key114,state114);
            									}
            								}
            							}
            						}
            						break;
            						case (int)1: {
HXLINE( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action115 = this->_ui_left;
HXDLIN( 647)								int state115 = 1;
HXDLIN( 647)								int _g125 = 0;
HXDLIN( 647)								while((_g125 < copyKeys4->length)){
HXLINE( 647)									int key115 = copyKeys4->__get(_g125);
HXDLIN( 647)									_g125 = (_g125 + 1);
HXDLIN( 647)									if ((key115 != -1)) {
HXLINE( 647)										action115->addKey(key115,state115);
            									}
            								}
            							}
HXDLIN( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action116 = this->_ui_leftP;
HXDLIN( 647)								int state116 = 2;
HXDLIN( 647)								int _g126 = 0;
HXDLIN( 647)								while((_g126 < copyKeys4->length)){
HXLINE( 647)									int key116 = copyKeys4->__get(_g126);
HXDLIN( 647)									_g126 = (_g126 + 1);
HXDLIN( 647)									if ((key116 != -1)) {
HXLINE( 647)										action116->addKey(key116,state116);
            									}
            								}
            							}
HXDLIN( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action117 = this->_ui_leftR;
HXDLIN( 647)								int state117 = -1;
HXDLIN( 647)								int _g127 = 0;
HXDLIN( 647)								while((_g127 < copyKeys4->length)){
HXLINE( 647)									int key117 = copyKeys4->__get(_g127);
HXDLIN( 647)									_g127 = (_g127 + 1);
HXDLIN( 647)									if ((key117 != -1)) {
HXLINE( 647)										action117->addKey(key117,state117);
            									}
            								}
            							}
            						}
            						break;
            						case (int)2: {
HXLINE( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action118 = this->_ui_right;
HXDLIN( 647)								int state118 = 1;
HXDLIN( 647)								int _g128 = 0;
HXDLIN( 647)								while((_g128 < copyKeys4->length)){
HXLINE( 647)									int key118 = copyKeys4->__get(_g128);
HXDLIN( 647)									_g128 = (_g128 + 1);
HXDLIN( 647)									if ((key118 != -1)) {
HXLINE( 647)										action118->addKey(key118,state118);
            									}
            								}
            							}
HXDLIN( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action119 = this->_ui_rightP;
HXDLIN( 647)								int state119 = 2;
HXDLIN( 647)								int _g129 = 0;
HXDLIN( 647)								while((_g129 < copyKeys4->length)){
HXLINE( 647)									int key119 = copyKeys4->__get(_g129);
HXDLIN( 647)									_g129 = (_g129 + 1);
HXDLIN( 647)									if ((key119 != -1)) {
HXLINE( 647)										action119->addKey(key119,state119);
            									}
            								}
            							}
HXDLIN( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action120 = this->_ui_rightR;
HXDLIN( 647)								int state120 = -1;
HXDLIN( 647)								int _g130 = 0;
HXDLIN( 647)								while((_g130 < copyKeys4->length)){
HXLINE( 647)									int key120 = copyKeys4->__get(_g130);
HXDLIN( 647)									_g130 = (_g130 + 1);
HXDLIN( 647)									if ((key120 != -1)) {
HXLINE( 647)										action120->addKey(key120,state120);
            									}
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action121 = this->_ui_down;
HXDLIN( 647)								int state121 = 1;
HXDLIN( 647)								int _g131 = 0;
HXDLIN( 647)								while((_g131 < copyKeys4->length)){
HXLINE( 647)									int key121 = copyKeys4->__get(_g131);
HXDLIN( 647)									_g131 = (_g131 + 1);
HXDLIN( 647)									if ((key121 != -1)) {
HXLINE( 647)										action121->addKey(key121,state121);
            									}
            								}
            							}
HXDLIN( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action122 = this->_ui_downP;
HXDLIN( 647)								int state122 = 2;
HXDLIN( 647)								int _g132 = 0;
HXDLIN( 647)								while((_g132 < copyKeys4->length)){
HXLINE( 647)									int key122 = copyKeys4->__get(_g132);
HXDLIN( 647)									_g132 = (_g132 + 1);
HXDLIN( 647)									if ((key122 != -1)) {
HXLINE( 647)										action122->addKey(key122,state122);
            									}
            								}
            							}
HXDLIN( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action123 = this->_ui_downR;
HXDLIN( 647)								int state123 = -1;
HXDLIN( 647)								int _g133 = 0;
HXDLIN( 647)								while((_g133 < copyKeys4->length)){
HXLINE( 647)									int key123 = copyKeys4->__get(_g133);
HXDLIN( 647)									_g133 = (_g133 + 1);
HXDLIN( 647)									if ((key123 != -1)) {
HXLINE( 647)										action123->addKey(key123,state123);
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action124 = this->_note_up;
HXDLIN( 647)								int state124 = 1;
HXDLIN( 647)								int _g134 = 0;
HXDLIN( 647)								while((_g134 < copyKeys4->length)){
HXLINE( 647)									int key124 = copyKeys4->__get(_g134);
HXDLIN( 647)									_g134 = (_g134 + 1);
HXDLIN( 647)									if ((key124 != -1)) {
HXLINE( 647)										action124->addKey(key124,state124);
            									}
            								}
            							}
HXDLIN( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action125 = this->_note_upP;
HXDLIN( 647)								int state125 = 2;
HXDLIN( 647)								int _g135 = 0;
HXDLIN( 647)								while((_g135 < copyKeys4->length)){
HXLINE( 647)									int key125 = copyKeys4->__get(_g135);
HXDLIN( 647)									_g135 = (_g135 + 1);
HXDLIN( 647)									if ((key125 != -1)) {
HXLINE( 647)										action125->addKey(key125,state125);
            									}
            								}
            							}
HXDLIN( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action126 = this->_note_upR;
HXDLIN( 647)								int state126 = -1;
HXDLIN( 647)								int _g136 = 0;
HXDLIN( 647)								while((_g136 < copyKeys4->length)){
HXLINE( 647)									int key126 = copyKeys4->__get(_g136);
HXDLIN( 647)									_g136 = (_g136 + 1);
HXDLIN( 647)									if ((key126 != -1)) {
HXLINE( 647)										action126->addKey(key126,state126);
            									}
            								}
            							}
            						}
            						break;
            						case (int)5: {
HXLINE( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action127 = this->_note_left;
HXDLIN( 647)								int state127 = 1;
HXDLIN( 647)								int _g137 = 0;
HXDLIN( 647)								while((_g137 < copyKeys4->length)){
HXLINE( 647)									int key127 = copyKeys4->__get(_g137);
HXDLIN( 647)									_g137 = (_g137 + 1);
HXDLIN( 647)									if ((key127 != -1)) {
HXLINE( 647)										action127->addKey(key127,state127);
            									}
            								}
            							}
HXDLIN( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action128 = this->_note_leftP;
HXDLIN( 647)								int state128 = 2;
HXDLIN( 647)								int _g138 = 0;
HXDLIN( 647)								while((_g138 < copyKeys4->length)){
HXLINE( 647)									int key128 = copyKeys4->__get(_g138);
HXDLIN( 647)									_g138 = (_g138 + 1);
HXDLIN( 647)									if ((key128 != -1)) {
HXLINE( 647)										action128->addKey(key128,state128);
            									}
            								}
            							}
HXDLIN( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action129 = this->_note_leftR;
HXDLIN( 647)								int state129 = -1;
HXDLIN( 647)								int _g139 = 0;
HXDLIN( 647)								while((_g139 < copyKeys4->length)){
HXLINE( 647)									int key129 = copyKeys4->__get(_g139);
HXDLIN( 647)									_g139 = (_g139 + 1);
HXDLIN( 647)									if ((key129 != -1)) {
HXLINE( 647)										action129->addKey(key129,state129);
            									}
            								}
            							}
            						}
            						break;
            						case (int)6: {
HXLINE( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action130 = this->_note_right;
HXDLIN( 647)								int state130 = 1;
HXDLIN( 647)								int _g140 = 0;
HXDLIN( 647)								while((_g140 < copyKeys4->length)){
HXLINE( 647)									int key130 = copyKeys4->__get(_g140);
HXDLIN( 647)									_g140 = (_g140 + 1);
HXDLIN( 647)									if ((key130 != -1)) {
HXLINE( 647)										action130->addKey(key130,state130);
            									}
            								}
            							}
HXDLIN( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action131 = this->_note_rightP;
HXDLIN( 647)								int state131 = 2;
HXDLIN( 647)								int _g141 = 0;
HXDLIN( 647)								while((_g141 < copyKeys4->length)){
HXLINE( 647)									int key131 = copyKeys4->__get(_g141);
HXDLIN( 647)									_g141 = (_g141 + 1);
HXDLIN( 647)									if ((key131 != -1)) {
HXLINE( 647)										action131->addKey(key131,state131);
            									}
            								}
            							}
HXDLIN( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action132 = this->_note_rightR;
HXDLIN( 647)								int state132 = -1;
HXDLIN( 647)								int _g142 = 0;
HXDLIN( 647)								while((_g142 < copyKeys4->length)){
HXLINE( 647)									int key132 = copyKeys4->__get(_g142);
HXDLIN( 647)									_g142 = (_g142 + 1);
HXDLIN( 647)									if ((key132 != -1)) {
HXLINE( 647)										action132->addKey(key132,state132);
            									}
            								}
            							}
            						}
            						break;
            						case (int)7: {
HXLINE( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action133 = this->_note_down;
HXDLIN( 647)								int state133 = 1;
HXDLIN( 647)								int _g143 = 0;
HXDLIN( 647)								while((_g143 < copyKeys4->length)){
HXLINE( 647)									int key133 = copyKeys4->__get(_g143);
HXDLIN( 647)									_g143 = (_g143 + 1);
HXDLIN( 647)									if ((key133 != -1)) {
HXLINE( 647)										action133->addKey(key133,state133);
            									}
            								}
            							}
HXDLIN( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action134 = this->_note_downP;
HXDLIN( 647)								int state134 = 2;
HXDLIN( 647)								int _g144 = 0;
HXDLIN( 647)								while((_g144 < copyKeys4->length)){
HXLINE( 647)									int key134 = copyKeys4->__get(_g144);
HXDLIN( 647)									_g144 = (_g144 + 1);
HXDLIN( 647)									if ((key134 != -1)) {
HXLINE( 647)										action134->addKey(key134,state134);
            									}
            								}
            							}
HXDLIN( 647)							{
HXLINE( 647)								 ::flixel::input::actions::FlxActionDigital action135 = this->_note_downR;
HXDLIN( 647)								int state135 = -1;
HXDLIN( 647)								int _g145 = 0;
HXDLIN( 647)								while((_g145 < copyKeys4->length)){
HXLINE( 647)									int key135 = copyKeys4->__get(_g145);
HXDLIN( 647)									_g145 = (_g145 + 1);
HXDLIN( 647)									if ((key135 != -1)) {
HXLINE( 647)										action135->addKey(key135,state135);
            									}
            								}
            							}
            						}
            						break;
            						case (int)8: {
HXLINE( 647)							 ::flixel::input::actions::FlxActionDigital action136 = this->_reset;
HXDLIN( 647)							int state136 = 2;
HXDLIN( 647)							int _g146 = 0;
HXDLIN( 647)							while((_g146 < copyKeys4->length)){
HXLINE( 647)								int key136 = copyKeys4->__get(_g146);
HXDLIN( 647)								_g146 = (_g146 + 1);
HXDLIN( 647)								if ((key136 != -1)) {
HXLINE( 647)									action136->addKey(key136,state136);
            								}
            							}
            						}
            						break;
            						case (int)9: {
HXLINE( 647)							 ::flixel::input::actions::FlxActionDigital action137 = this->_accept;
HXDLIN( 647)							int state137 = 2;
HXDLIN( 647)							int _g147 = 0;
HXDLIN( 647)							while((_g147 < copyKeys4->length)){
HXLINE( 647)								int key137 = copyKeys4->__get(_g147);
HXDLIN( 647)								_g147 = (_g147 + 1);
HXDLIN( 647)								if ((key137 != -1)) {
HXLINE( 647)									action137->addKey(key137,state137);
            								}
            							}
            						}
            						break;
            						case (int)10: {
HXLINE( 647)							 ::flixel::input::actions::FlxActionDigital action138 = this->_back;
HXDLIN( 647)							int state138 = 2;
HXDLIN( 647)							int _g148 = 0;
HXDLIN( 647)							while((_g148 < copyKeys4->length)){
HXLINE( 647)								int key138 = copyKeys4->__get(_g148);
HXDLIN( 647)								_g148 = (_g148 + 1);
HXDLIN( 647)								if ((key138 != -1)) {
HXLINE( 647)									action138->addKey(key138,state138);
            								}
            							}
            						}
            						break;
            						case (int)11: {
HXLINE( 647)							 ::flixel::input::actions::FlxActionDigital action139 = this->_pause;
HXDLIN( 647)							int state139 = 2;
HXDLIN( 647)							int _g149 = 0;
HXDLIN( 647)							while((_g149 < copyKeys4->length)){
HXLINE( 647)								int key139 = copyKeys4->__get(_g149);
HXDLIN( 647)								_g149 = (_g149 + 1);
HXDLIN( 647)								if ((key139 != -1)) {
HXLINE( 647)									action139->addKey(key139,state139);
            								}
            							}
            						}
            						break;
            					}
            				}
HXLINE( 648)				{
HXLINE( 648)					::Array< int > copyKeys5 = ( (::Array< int >)(keysMap->get(HX_("note_down",0f,ef,de,9f))) )->copy();
HXDLIN( 648)					{
HXLINE( 648)						int _g150 = 0;
HXDLIN( 648)						int _g151 = copyKeys5->length;
HXDLIN( 648)						while((_g150 < _g151)){
HXLINE( 648)							_g150 = (_g150 + 1);
HXDLIN( 648)							int i5 = (_g150 - 1);
HXDLIN( 648)							if ((i5 == -1)) {
HXLINE( 648)								copyKeys5->remove(i5);
            							}
            						}
            					}
HXDLIN( 648)					switch((int)(::Control_obj::NOTE_DOWN_dyn()->_hx_getIndex())){
            						case (int)0: {
HXLINE( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action140 = this->_ui_up;
HXDLIN( 648)								int state140 = 1;
HXDLIN( 648)								int _g152 = 0;
HXDLIN( 648)								while((_g152 < copyKeys5->length)){
HXLINE( 648)									int key140 = copyKeys5->__get(_g152);
HXDLIN( 648)									_g152 = (_g152 + 1);
HXDLIN( 648)									if ((key140 != -1)) {
HXLINE( 648)										action140->addKey(key140,state140);
            									}
            								}
            							}
HXDLIN( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action141 = this->_ui_upP;
HXDLIN( 648)								int state141 = 2;
HXDLIN( 648)								int _g153 = 0;
HXDLIN( 648)								while((_g153 < copyKeys5->length)){
HXLINE( 648)									int key141 = copyKeys5->__get(_g153);
HXDLIN( 648)									_g153 = (_g153 + 1);
HXDLIN( 648)									if ((key141 != -1)) {
HXLINE( 648)										action141->addKey(key141,state141);
            									}
            								}
            							}
HXDLIN( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action142 = this->_ui_upR;
HXDLIN( 648)								int state142 = -1;
HXDLIN( 648)								int _g154 = 0;
HXDLIN( 648)								while((_g154 < copyKeys5->length)){
HXLINE( 648)									int key142 = copyKeys5->__get(_g154);
HXDLIN( 648)									_g154 = (_g154 + 1);
HXDLIN( 648)									if ((key142 != -1)) {
HXLINE( 648)										action142->addKey(key142,state142);
            									}
            								}
            							}
            						}
            						break;
            						case (int)1: {
HXLINE( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action143 = this->_ui_left;
HXDLIN( 648)								int state143 = 1;
HXDLIN( 648)								int _g155 = 0;
HXDLIN( 648)								while((_g155 < copyKeys5->length)){
HXLINE( 648)									int key143 = copyKeys5->__get(_g155);
HXDLIN( 648)									_g155 = (_g155 + 1);
HXDLIN( 648)									if ((key143 != -1)) {
HXLINE( 648)										action143->addKey(key143,state143);
            									}
            								}
            							}
HXDLIN( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action144 = this->_ui_leftP;
HXDLIN( 648)								int state144 = 2;
HXDLIN( 648)								int _g156 = 0;
HXDLIN( 648)								while((_g156 < copyKeys5->length)){
HXLINE( 648)									int key144 = copyKeys5->__get(_g156);
HXDLIN( 648)									_g156 = (_g156 + 1);
HXDLIN( 648)									if ((key144 != -1)) {
HXLINE( 648)										action144->addKey(key144,state144);
            									}
            								}
            							}
HXDLIN( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action145 = this->_ui_leftR;
HXDLIN( 648)								int state145 = -1;
HXDLIN( 648)								int _g157 = 0;
HXDLIN( 648)								while((_g157 < copyKeys5->length)){
HXLINE( 648)									int key145 = copyKeys5->__get(_g157);
HXDLIN( 648)									_g157 = (_g157 + 1);
HXDLIN( 648)									if ((key145 != -1)) {
HXLINE( 648)										action145->addKey(key145,state145);
            									}
            								}
            							}
            						}
            						break;
            						case (int)2: {
HXLINE( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action146 = this->_ui_right;
HXDLIN( 648)								int state146 = 1;
HXDLIN( 648)								int _g158 = 0;
HXDLIN( 648)								while((_g158 < copyKeys5->length)){
HXLINE( 648)									int key146 = copyKeys5->__get(_g158);
HXDLIN( 648)									_g158 = (_g158 + 1);
HXDLIN( 648)									if ((key146 != -1)) {
HXLINE( 648)										action146->addKey(key146,state146);
            									}
            								}
            							}
HXDLIN( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action147 = this->_ui_rightP;
HXDLIN( 648)								int state147 = 2;
HXDLIN( 648)								int _g159 = 0;
HXDLIN( 648)								while((_g159 < copyKeys5->length)){
HXLINE( 648)									int key147 = copyKeys5->__get(_g159);
HXDLIN( 648)									_g159 = (_g159 + 1);
HXDLIN( 648)									if ((key147 != -1)) {
HXLINE( 648)										action147->addKey(key147,state147);
            									}
            								}
            							}
HXDLIN( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action148 = this->_ui_rightR;
HXDLIN( 648)								int state148 = -1;
HXDLIN( 648)								int _g160 = 0;
HXDLIN( 648)								while((_g160 < copyKeys5->length)){
HXLINE( 648)									int key148 = copyKeys5->__get(_g160);
HXDLIN( 648)									_g160 = (_g160 + 1);
HXDLIN( 648)									if ((key148 != -1)) {
HXLINE( 648)										action148->addKey(key148,state148);
            									}
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action149 = this->_ui_down;
HXDLIN( 648)								int state149 = 1;
HXDLIN( 648)								int _g161 = 0;
HXDLIN( 648)								while((_g161 < copyKeys5->length)){
HXLINE( 648)									int key149 = copyKeys5->__get(_g161);
HXDLIN( 648)									_g161 = (_g161 + 1);
HXDLIN( 648)									if ((key149 != -1)) {
HXLINE( 648)										action149->addKey(key149,state149);
            									}
            								}
            							}
HXDLIN( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action150 = this->_ui_downP;
HXDLIN( 648)								int state150 = 2;
HXDLIN( 648)								int _g162 = 0;
HXDLIN( 648)								while((_g162 < copyKeys5->length)){
HXLINE( 648)									int key150 = copyKeys5->__get(_g162);
HXDLIN( 648)									_g162 = (_g162 + 1);
HXDLIN( 648)									if ((key150 != -1)) {
HXLINE( 648)										action150->addKey(key150,state150);
            									}
            								}
            							}
HXDLIN( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action151 = this->_ui_downR;
HXDLIN( 648)								int state151 = -1;
HXDLIN( 648)								int _g163 = 0;
HXDLIN( 648)								while((_g163 < copyKeys5->length)){
HXLINE( 648)									int key151 = copyKeys5->__get(_g163);
HXDLIN( 648)									_g163 = (_g163 + 1);
HXDLIN( 648)									if ((key151 != -1)) {
HXLINE( 648)										action151->addKey(key151,state151);
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action152 = this->_note_up;
HXDLIN( 648)								int state152 = 1;
HXDLIN( 648)								int _g164 = 0;
HXDLIN( 648)								while((_g164 < copyKeys5->length)){
HXLINE( 648)									int key152 = copyKeys5->__get(_g164);
HXDLIN( 648)									_g164 = (_g164 + 1);
HXDLIN( 648)									if ((key152 != -1)) {
HXLINE( 648)										action152->addKey(key152,state152);
            									}
            								}
            							}
HXDLIN( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action153 = this->_note_upP;
HXDLIN( 648)								int state153 = 2;
HXDLIN( 648)								int _g165 = 0;
HXDLIN( 648)								while((_g165 < copyKeys5->length)){
HXLINE( 648)									int key153 = copyKeys5->__get(_g165);
HXDLIN( 648)									_g165 = (_g165 + 1);
HXDLIN( 648)									if ((key153 != -1)) {
HXLINE( 648)										action153->addKey(key153,state153);
            									}
            								}
            							}
HXDLIN( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action154 = this->_note_upR;
HXDLIN( 648)								int state154 = -1;
HXDLIN( 648)								int _g166 = 0;
HXDLIN( 648)								while((_g166 < copyKeys5->length)){
HXLINE( 648)									int key154 = copyKeys5->__get(_g166);
HXDLIN( 648)									_g166 = (_g166 + 1);
HXDLIN( 648)									if ((key154 != -1)) {
HXLINE( 648)										action154->addKey(key154,state154);
            									}
            								}
            							}
            						}
            						break;
            						case (int)5: {
HXLINE( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action155 = this->_note_left;
HXDLIN( 648)								int state155 = 1;
HXDLIN( 648)								int _g167 = 0;
HXDLIN( 648)								while((_g167 < copyKeys5->length)){
HXLINE( 648)									int key155 = copyKeys5->__get(_g167);
HXDLIN( 648)									_g167 = (_g167 + 1);
HXDLIN( 648)									if ((key155 != -1)) {
HXLINE( 648)										action155->addKey(key155,state155);
            									}
            								}
            							}
HXDLIN( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action156 = this->_note_leftP;
HXDLIN( 648)								int state156 = 2;
HXDLIN( 648)								int _g168 = 0;
HXDLIN( 648)								while((_g168 < copyKeys5->length)){
HXLINE( 648)									int key156 = copyKeys5->__get(_g168);
HXDLIN( 648)									_g168 = (_g168 + 1);
HXDLIN( 648)									if ((key156 != -1)) {
HXLINE( 648)										action156->addKey(key156,state156);
            									}
            								}
            							}
HXDLIN( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action157 = this->_note_leftR;
HXDLIN( 648)								int state157 = -1;
HXDLIN( 648)								int _g169 = 0;
HXDLIN( 648)								while((_g169 < copyKeys5->length)){
HXLINE( 648)									int key157 = copyKeys5->__get(_g169);
HXDLIN( 648)									_g169 = (_g169 + 1);
HXDLIN( 648)									if ((key157 != -1)) {
HXLINE( 648)										action157->addKey(key157,state157);
            									}
            								}
            							}
            						}
            						break;
            						case (int)6: {
HXLINE( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action158 = this->_note_right;
HXDLIN( 648)								int state158 = 1;
HXDLIN( 648)								int _g170 = 0;
HXDLIN( 648)								while((_g170 < copyKeys5->length)){
HXLINE( 648)									int key158 = copyKeys5->__get(_g170);
HXDLIN( 648)									_g170 = (_g170 + 1);
HXDLIN( 648)									if ((key158 != -1)) {
HXLINE( 648)										action158->addKey(key158,state158);
            									}
            								}
            							}
HXDLIN( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action159 = this->_note_rightP;
HXDLIN( 648)								int state159 = 2;
HXDLIN( 648)								int _g171 = 0;
HXDLIN( 648)								while((_g171 < copyKeys5->length)){
HXLINE( 648)									int key159 = copyKeys5->__get(_g171);
HXDLIN( 648)									_g171 = (_g171 + 1);
HXDLIN( 648)									if ((key159 != -1)) {
HXLINE( 648)										action159->addKey(key159,state159);
            									}
            								}
            							}
HXDLIN( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action160 = this->_note_rightR;
HXDLIN( 648)								int state160 = -1;
HXDLIN( 648)								int _g172 = 0;
HXDLIN( 648)								while((_g172 < copyKeys5->length)){
HXLINE( 648)									int key160 = copyKeys5->__get(_g172);
HXDLIN( 648)									_g172 = (_g172 + 1);
HXDLIN( 648)									if ((key160 != -1)) {
HXLINE( 648)										action160->addKey(key160,state160);
            									}
            								}
            							}
            						}
            						break;
            						case (int)7: {
HXLINE( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action161 = this->_note_down;
HXDLIN( 648)								int state161 = 1;
HXDLIN( 648)								int _g173 = 0;
HXDLIN( 648)								while((_g173 < copyKeys5->length)){
HXLINE( 648)									int key161 = copyKeys5->__get(_g173);
HXDLIN( 648)									_g173 = (_g173 + 1);
HXDLIN( 648)									if ((key161 != -1)) {
HXLINE( 648)										action161->addKey(key161,state161);
            									}
            								}
            							}
HXDLIN( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action162 = this->_note_downP;
HXDLIN( 648)								int state162 = 2;
HXDLIN( 648)								int _g174 = 0;
HXDLIN( 648)								while((_g174 < copyKeys5->length)){
HXLINE( 648)									int key162 = copyKeys5->__get(_g174);
HXDLIN( 648)									_g174 = (_g174 + 1);
HXDLIN( 648)									if ((key162 != -1)) {
HXLINE( 648)										action162->addKey(key162,state162);
            									}
            								}
            							}
HXDLIN( 648)							{
HXLINE( 648)								 ::flixel::input::actions::FlxActionDigital action163 = this->_note_downR;
HXDLIN( 648)								int state163 = -1;
HXDLIN( 648)								int _g175 = 0;
HXDLIN( 648)								while((_g175 < copyKeys5->length)){
HXLINE( 648)									int key163 = copyKeys5->__get(_g175);
HXDLIN( 648)									_g175 = (_g175 + 1);
HXDLIN( 648)									if ((key163 != -1)) {
HXLINE( 648)										action163->addKey(key163,state163);
            									}
            								}
            							}
            						}
            						break;
            						case (int)8: {
HXLINE( 648)							 ::flixel::input::actions::FlxActionDigital action164 = this->_reset;
HXDLIN( 648)							int state164 = 2;
HXDLIN( 648)							int _g176 = 0;
HXDLIN( 648)							while((_g176 < copyKeys5->length)){
HXLINE( 648)								int key164 = copyKeys5->__get(_g176);
HXDLIN( 648)								_g176 = (_g176 + 1);
HXDLIN( 648)								if ((key164 != -1)) {
HXLINE( 648)									action164->addKey(key164,state164);
            								}
            							}
            						}
            						break;
            						case (int)9: {
HXLINE( 648)							 ::flixel::input::actions::FlxActionDigital action165 = this->_accept;
HXDLIN( 648)							int state165 = 2;
HXDLIN( 648)							int _g177 = 0;
HXDLIN( 648)							while((_g177 < copyKeys5->length)){
HXLINE( 648)								int key165 = copyKeys5->__get(_g177);
HXDLIN( 648)								_g177 = (_g177 + 1);
HXDLIN( 648)								if ((key165 != -1)) {
HXLINE( 648)									action165->addKey(key165,state165);
            								}
            							}
            						}
            						break;
            						case (int)10: {
HXLINE( 648)							 ::flixel::input::actions::FlxActionDigital action166 = this->_back;
HXDLIN( 648)							int state166 = 2;
HXDLIN( 648)							int _g178 = 0;
HXDLIN( 648)							while((_g178 < copyKeys5->length)){
HXLINE( 648)								int key166 = copyKeys5->__get(_g178);
HXDLIN( 648)								_g178 = (_g178 + 1);
HXDLIN( 648)								if ((key166 != -1)) {
HXLINE( 648)									action166->addKey(key166,state166);
            								}
            							}
            						}
            						break;
            						case (int)11: {
HXLINE( 648)							 ::flixel::input::actions::FlxActionDigital action167 = this->_pause;
HXDLIN( 648)							int state167 = 2;
HXDLIN( 648)							int _g179 = 0;
HXDLIN( 648)							while((_g179 < copyKeys5->length)){
HXLINE( 648)								int key167 = copyKeys5->__get(_g179);
HXDLIN( 648)								_g179 = (_g179 + 1);
HXDLIN( 648)								if ((key167 != -1)) {
HXLINE( 648)									action167->addKey(key167,state167);
            								}
            							}
            						}
            						break;
            					}
            				}
HXLINE( 649)				{
HXLINE( 649)					::Array< int > copyKeys6 = ( (::Array< int >)(keysMap->get(HX_("note_left",b4,fe,20,a5))) )->copy();
HXDLIN( 649)					{
HXLINE( 649)						int _g180 = 0;
HXDLIN( 649)						int _g181 = copyKeys6->length;
HXDLIN( 649)						while((_g180 < _g181)){
HXLINE( 649)							_g180 = (_g180 + 1);
HXDLIN( 649)							int i6 = (_g180 - 1);
HXDLIN( 649)							if ((i6 == -1)) {
HXLINE( 649)								copyKeys6->remove(i6);
            							}
            						}
            					}
HXDLIN( 649)					switch((int)(::Control_obj::NOTE_LEFT_dyn()->_hx_getIndex())){
            						case (int)0: {
HXLINE( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action168 = this->_ui_up;
HXDLIN( 649)								int state168 = 1;
HXDLIN( 649)								int _g182 = 0;
HXDLIN( 649)								while((_g182 < copyKeys6->length)){
HXLINE( 649)									int key168 = copyKeys6->__get(_g182);
HXDLIN( 649)									_g182 = (_g182 + 1);
HXDLIN( 649)									if ((key168 != -1)) {
HXLINE( 649)										action168->addKey(key168,state168);
            									}
            								}
            							}
HXDLIN( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action169 = this->_ui_upP;
HXDLIN( 649)								int state169 = 2;
HXDLIN( 649)								int _g183 = 0;
HXDLIN( 649)								while((_g183 < copyKeys6->length)){
HXLINE( 649)									int key169 = copyKeys6->__get(_g183);
HXDLIN( 649)									_g183 = (_g183 + 1);
HXDLIN( 649)									if ((key169 != -1)) {
HXLINE( 649)										action169->addKey(key169,state169);
            									}
            								}
            							}
HXDLIN( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action170 = this->_ui_upR;
HXDLIN( 649)								int state170 = -1;
HXDLIN( 649)								int _g184 = 0;
HXDLIN( 649)								while((_g184 < copyKeys6->length)){
HXLINE( 649)									int key170 = copyKeys6->__get(_g184);
HXDLIN( 649)									_g184 = (_g184 + 1);
HXDLIN( 649)									if ((key170 != -1)) {
HXLINE( 649)										action170->addKey(key170,state170);
            									}
            								}
            							}
            						}
            						break;
            						case (int)1: {
HXLINE( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action171 = this->_ui_left;
HXDLIN( 649)								int state171 = 1;
HXDLIN( 649)								int _g185 = 0;
HXDLIN( 649)								while((_g185 < copyKeys6->length)){
HXLINE( 649)									int key171 = copyKeys6->__get(_g185);
HXDLIN( 649)									_g185 = (_g185 + 1);
HXDLIN( 649)									if ((key171 != -1)) {
HXLINE( 649)										action171->addKey(key171,state171);
            									}
            								}
            							}
HXDLIN( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action172 = this->_ui_leftP;
HXDLIN( 649)								int state172 = 2;
HXDLIN( 649)								int _g186 = 0;
HXDLIN( 649)								while((_g186 < copyKeys6->length)){
HXLINE( 649)									int key172 = copyKeys6->__get(_g186);
HXDLIN( 649)									_g186 = (_g186 + 1);
HXDLIN( 649)									if ((key172 != -1)) {
HXLINE( 649)										action172->addKey(key172,state172);
            									}
            								}
            							}
HXDLIN( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action173 = this->_ui_leftR;
HXDLIN( 649)								int state173 = -1;
HXDLIN( 649)								int _g187 = 0;
HXDLIN( 649)								while((_g187 < copyKeys6->length)){
HXLINE( 649)									int key173 = copyKeys6->__get(_g187);
HXDLIN( 649)									_g187 = (_g187 + 1);
HXDLIN( 649)									if ((key173 != -1)) {
HXLINE( 649)										action173->addKey(key173,state173);
            									}
            								}
            							}
            						}
            						break;
            						case (int)2: {
HXLINE( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action174 = this->_ui_right;
HXDLIN( 649)								int state174 = 1;
HXDLIN( 649)								int _g188 = 0;
HXDLIN( 649)								while((_g188 < copyKeys6->length)){
HXLINE( 649)									int key174 = copyKeys6->__get(_g188);
HXDLIN( 649)									_g188 = (_g188 + 1);
HXDLIN( 649)									if ((key174 != -1)) {
HXLINE( 649)										action174->addKey(key174,state174);
            									}
            								}
            							}
HXDLIN( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action175 = this->_ui_rightP;
HXDLIN( 649)								int state175 = 2;
HXDLIN( 649)								int _g189 = 0;
HXDLIN( 649)								while((_g189 < copyKeys6->length)){
HXLINE( 649)									int key175 = copyKeys6->__get(_g189);
HXDLIN( 649)									_g189 = (_g189 + 1);
HXDLIN( 649)									if ((key175 != -1)) {
HXLINE( 649)										action175->addKey(key175,state175);
            									}
            								}
            							}
HXDLIN( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action176 = this->_ui_rightR;
HXDLIN( 649)								int state176 = -1;
HXDLIN( 649)								int _g190 = 0;
HXDLIN( 649)								while((_g190 < copyKeys6->length)){
HXLINE( 649)									int key176 = copyKeys6->__get(_g190);
HXDLIN( 649)									_g190 = (_g190 + 1);
HXDLIN( 649)									if ((key176 != -1)) {
HXLINE( 649)										action176->addKey(key176,state176);
            									}
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action177 = this->_ui_down;
HXDLIN( 649)								int state177 = 1;
HXDLIN( 649)								int _g191 = 0;
HXDLIN( 649)								while((_g191 < copyKeys6->length)){
HXLINE( 649)									int key177 = copyKeys6->__get(_g191);
HXDLIN( 649)									_g191 = (_g191 + 1);
HXDLIN( 649)									if ((key177 != -1)) {
HXLINE( 649)										action177->addKey(key177,state177);
            									}
            								}
            							}
HXDLIN( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action178 = this->_ui_downP;
HXDLIN( 649)								int state178 = 2;
HXDLIN( 649)								int _g192 = 0;
HXDLIN( 649)								while((_g192 < copyKeys6->length)){
HXLINE( 649)									int key178 = copyKeys6->__get(_g192);
HXDLIN( 649)									_g192 = (_g192 + 1);
HXDLIN( 649)									if ((key178 != -1)) {
HXLINE( 649)										action178->addKey(key178,state178);
            									}
            								}
            							}
HXDLIN( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action179 = this->_ui_downR;
HXDLIN( 649)								int state179 = -1;
HXDLIN( 649)								int _g193 = 0;
HXDLIN( 649)								while((_g193 < copyKeys6->length)){
HXLINE( 649)									int key179 = copyKeys6->__get(_g193);
HXDLIN( 649)									_g193 = (_g193 + 1);
HXDLIN( 649)									if ((key179 != -1)) {
HXLINE( 649)										action179->addKey(key179,state179);
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action180 = this->_note_up;
HXDLIN( 649)								int state180 = 1;
HXDLIN( 649)								int _g194 = 0;
HXDLIN( 649)								while((_g194 < copyKeys6->length)){
HXLINE( 649)									int key180 = copyKeys6->__get(_g194);
HXDLIN( 649)									_g194 = (_g194 + 1);
HXDLIN( 649)									if ((key180 != -1)) {
HXLINE( 649)										action180->addKey(key180,state180);
            									}
            								}
            							}
HXDLIN( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action181 = this->_note_upP;
HXDLIN( 649)								int state181 = 2;
HXDLIN( 649)								int _g195 = 0;
HXDLIN( 649)								while((_g195 < copyKeys6->length)){
HXLINE( 649)									int key181 = copyKeys6->__get(_g195);
HXDLIN( 649)									_g195 = (_g195 + 1);
HXDLIN( 649)									if ((key181 != -1)) {
HXLINE( 649)										action181->addKey(key181,state181);
            									}
            								}
            							}
HXDLIN( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action182 = this->_note_upR;
HXDLIN( 649)								int state182 = -1;
HXDLIN( 649)								int _g196 = 0;
HXDLIN( 649)								while((_g196 < copyKeys6->length)){
HXLINE( 649)									int key182 = copyKeys6->__get(_g196);
HXDLIN( 649)									_g196 = (_g196 + 1);
HXDLIN( 649)									if ((key182 != -1)) {
HXLINE( 649)										action182->addKey(key182,state182);
            									}
            								}
            							}
            						}
            						break;
            						case (int)5: {
HXLINE( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action183 = this->_note_left;
HXDLIN( 649)								int state183 = 1;
HXDLIN( 649)								int _g197 = 0;
HXDLIN( 649)								while((_g197 < copyKeys6->length)){
HXLINE( 649)									int key183 = copyKeys6->__get(_g197);
HXDLIN( 649)									_g197 = (_g197 + 1);
HXDLIN( 649)									if ((key183 != -1)) {
HXLINE( 649)										action183->addKey(key183,state183);
            									}
            								}
            							}
HXDLIN( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action184 = this->_note_leftP;
HXDLIN( 649)								int state184 = 2;
HXDLIN( 649)								int _g198 = 0;
HXDLIN( 649)								while((_g198 < copyKeys6->length)){
HXLINE( 649)									int key184 = copyKeys6->__get(_g198);
HXDLIN( 649)									_g198 = (_g198 + 1);
HXDLIN( 649)									if ((key184 != -1)) {
HXLINE( 649)										action184->addKey(key184,state184);
            									}
            								}
            							}
HXDLIN( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action185 = this->_note_leftR;
HXDLIN( 649)								int state185 = -1;
HXDLIN( 649)								int _g199 = 0;
HXDLIN( 649)								while((_g199 < copyKeys6->length)){
HXLINE( 649)									int key185 = copyKeys6->__get(_g199);
HXDLIN( 649)									_g199 = (_g199 + 1);
HXDLIN( 649)									if ((key185 != -1)) {
HXLINE( 649)										action185->addKey(key185,state185);
            									}
            								}
            							}
            						}
            						break;
            						case (int)6: {
HXLINE( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action186 = this->_note_right;
HXDLIN( 649)								int state186 = 1;
HXDLIN( 649)								int _g200 = 0;
HXDLIN( 649)								while((_g200 < copyKeys6->length)){
HXLINE( 649)									int key186 = copyKeys6->__get(_g200);
HXDLIN( 649)									_g200 = (_g200 + 1);
HXDLIN( 649)									if ((key186 != -1)) {
HXLINE( 649)										action186->addKey(key186,state186);
            									}
            								}
            							}
HXDLIN( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action187 = this->_note_rightP;
HXDLIN( 649)								int state187 = 2;
HXDLIN( 649)								int _g201 = 0;
HXDLIN( 649)								while((_g201 < copyKeys6->length)){
HXLINE( 649)									int key187 = copyKeys6->__get(_g201);
HXDLIN( 649)									_g201 = (_g201 + 1);
HXDLIN( 649)									if ((key187 != -1)) {
HXLINE( 649)										action187->addKey(key187,state187);
            									}
            								}
            							}
HXDLIN( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action188 = this->_note_rightR;
HXDLIN( 649)								int state188 = -1;
HXDLIN( 649)								int _g202 = 0;
HXDLIN( 649)								while((_g202 < copyKeys6->length)){
HXLINE( 649)									int key188 = copyKeys6->__get(_g202);
HXDLIN( 649)									_g202 = (_g202 + 1);
HXDLIN( 649)									if ((key188 != -1)) {
HXLINE( 649)										action188->addKey(key188,state188);
            									}
            								}
            							}
            						}
            						break;
            						case (int)7: {
HXLINE( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action189 = this->_note_down;
HXDLIN( 649)								int state189 = 1;
HXDLIN( 649)								int _g203 = 0;
HXDLIN( 649)								while((_g203 < copyKeys6->length)){
HXLINE( 649)									int key189 = copyKeys6->__get(_g203);
HXDLIN( 649)									_g203 = (_g203 + 1);
HXDLIN( 649)									if ((key189 != -1)) {
HXLINE( 649)										action189->addKey(key189,state189);
            									}
            								}
            							}
HXDLIN( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action190 = this->_note_downP;
HXDLIN( 649)								int state190 = 2;
HXDLIN( 649)								int _g204 = 0;
HXDLIN( 649)								while((_g204 < copyKeys6->length)){
HXLINE( 649)									int key190 = copyKeys6->__get(_g204);
HXDLIN( 649)									_g204 = (_g204 + 1);
HXDLIN( 649)									if ((key190 != -1)) {
HXLINE( 649)										action190->addKey(key190,state190);
            									}
            								}
            							}
HXDLIN( 649)							{
HXLINE( 649)								 ::flixel::input::actions::FlxActionDigital action191 = this->_note_downR;
HXDLIN( 649)								int state191 = -1;
HXDLIN( 649)								int _g205 = 0;
HXDLIN( 649)								while((_g205 < copyKeys6->length)){
HXLINE( 649)									int key191 = copyKeys6->__get(_g205);
HXDLIN( 649)									_g205 = (_g205 + 1);
HXDLIN( 649)									if ((key191 != -1)) {
HXLINE( 649)										action191->addKey(key191,state191);
            									}
            								}
            							}
            						}
            						break;
            						case (int)8: {
HXLINE( 649)							 ::flixel::input::actions::FlxActionDigital action192 = this->_reset;
HXDLIN( 649)							int state192 = 2;
HXDLIN( 649)							int _g206 = 0;
HXDLIN( 649)							while((_g206 < copyKeys6->length)){
HXLINE( 649)								int key192 = copyKeys6->__get(_g206);
HXDLIN( 649)								_g206 = (_g206 + 1);
HXDLIN( 649)								if ((key192 != -1)) {
HXLINE( 649)									action192->addKey(key192,state192);
            								}
            							}
            						}
            						break;
            						case (int)9: {
HXLINE( 649)							 ::flixel::input::actions::FlxActionDigital action193 = this->_accept;
HXDLIN( 649)							int state193 = 2;
HXDLIN( 649)							int _g207 = 0;
HXDLIN( 649)							while((_g207 < copyKeys6->length)){
HXLINE( 649)								int key193 = copyKeys6->__get(_g207);
HXDLIN( 649)								_g207 = (_g207 + 1);
HXDLIN( 649)								if ((key193 != -1)) {
HXLINE( 649)									action193->addKey(key193,state193);
            								}
            							}
            						}
            						break;
            						case (int)10: {
HXLINE( 649)							 ::flixel::input::actions::FlxActionDigital action194 = this->_back;
HXDLIN( 649)							int state194 = 2;
HXDLIN( 649)							int _g208 = 0;
HXDLIN( 649)							while((_g208 < copyKeys6->length)){
HXLINE( 649)								int key194 = copyKeys6->__get(_g208);
HXDLIN( 649)								_g208 = (_g208 + 1);
HXDLIN( 649)								if ((key194 != -1)) {
HXLINE( 649)									action194->addKey(key194,state194);
            								}
            							}
            						}
            						break;
            						case (int)11: {
HXLINE( 649)							 ::flixel::input::actions::FlxActionDigital action195 = this->_pause;
HXDLIN( 649)							int state195 = 2;
HXDLIN( 649)							int _g209 = 0;
HXDLIN( 649)							while((_g209 < copyKeys6->length)){
HXLINE( 649)								int key195 = copyKeys6->__get(_g209);
HXDLIN( 649)								_g209 = (_g209 + 1);
HXDLIN( 649)								if ((key195 != -1)) {
HXLINE( 649)									action195->addKey(key195,state195);
            								}
            							}
            						}
            						break;
            					}
            				}
HXLINE( 650)				{
HXLINE( 650)					::Array< int > copyKeys7 = ( (::Array< int >)(keysMap->get(HX_("note_right",8f,ec,ca,4e))) )->copy();
HXDLIN( 650)					{
HXLINE( 650)						int _g210 = 0;
HXDLIN( 650)						int _g211 = copyKeys7->length;
HXDLIN( 650)						while((_g210 < _g211)){
HXLINE( 650)							_g210 = (_g210 + 1);
HXDLIN( 650)							int i7 = (_g210 - 1);
HXDLIN( 650)							if ((i7 == -1)) {
HXLINE( 650)								copyKeys7->remove(i7);
            							}
            						}
            					}
HXDLIN( 650)					switch((int)(::Control_obj::NOTE_RIGHT_dyn()->_hx_getIndex())){
            						case (int)0: {
HXLINE( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action196 = this->_ui_up;
HXDLIN( 650)								int state196 = 1;
HXDLIN( 650)								int _g212 = 0;
HXDLIN( 650)								while((_g212 < copyKeys7->length)){
HXLINE( 650)									int key196 = copyKeys7->__get(_g212);
HXDLIN( 650)									_g212 = (_g212 + 1);
HXDLIN( 650)									if ((key196 != -1)) {
HXLINE( 650)										action196->addKey(key196,state196);
            									}
            								}
            							}
HXDLIN( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action197 = this->_ui_upP;
HXDLIN( 650)								int state197 = 2;
HXDLIN( 650)								int _g213 = 0;
HXDLIN( 650)								while((_g213 < copyKeys7->length)){
HXLINE( 650)									int key197 = copyKeys7->__get(_g213);
HXDLIN( 650)									_g213 = (_g213 + 1);
HXDLIN( 650)									if ((key197 != -1)) {
HXLINE( 650)										action197->addKey(key197,state197);
            									}
            								}
            							}
HXDLIN( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action198 = this->_ui_upR;
HXDLIN( 650)								int state198 = -1;
HXDLIN( 650)								int _g214 = 0;
HXDLIN( 650)								while((_g214 < copyKeys7->length)){
HXLINE( 650)									int key198 = copyKeys7->__get(_g214);
HXDLIN( 650)									_g214 = (_g214 + 1);
HXDLIN( 650)									if ((key198 != -1)) {
HXLINE( 650)										action198->addKey(key198,state198);
            									}
            								}
            							}
            						}
            						break;
            						case (int)1: {
HXLINE( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action199 = this->_ui_left;
HXDLIN( 650)								int state199 = 1;
HXDLIN( 650)								int _g215 = 0;
HXDLIN( 650)								while((_g215 < copyKeys7->length)){
HXLINE( 650)									int key199 = copyKeys7->__get(_g215);
HXDLIN( 650)									_g215 = (_g215 + 1);
HXDLIN( 650)									if ((key199 != -1)) {
HXLINE( 650)										action199->addKey(key199,state199);
            									}
            								}
            							}
HXDLIN( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action200 = this->_ui_leftP;
HXDLIN( 650)								int state200 = 2;
HXDLIN( 650)								int _g216 = 0;
HXDLIN( 650)								while((_g216 < copyKeys7->length)){
HXLINE( 650)									int key200 = copyKeys7->__get(_g216);
HXDLIN( 650)									_g216 = (_g216 + 1);
HXDLIN( 650)									if ((key200 != -1)) {
HXLINE( 650)										action200->addKey(key200,state200);
            									}
            								}
            							}
HXDLIN( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action201 = this->_ui_leftR;
HXDLIN( 650)								int state201 = -1;
HXDLIN( 650)								int _g217 = 0;
HXDLIN( 650)								while((_g217 < copyKeys7->length)){
HXLINE( 650)									int key201 = copyKeys7->__get(_g217);
HXDLIN( 650)									_g217 = (_g217 + 1);
HXDLIN( 650)									if ((key201 != -1)) {
HXLINE( 650)										action201->addKey(key201,state201);
            									}
            								}
            							}
            						}
            						break;
            						case (int)2: {
HXLINE( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action202 = this->_ui_right;
HXDLIN( 650)								int state202 = 1;
HXDLIN( 650)								int _g218 = 0;
HXDLIN( 650)								while((_g218 < copyKeys7->length)){
HXLINE( 650)									int key202 = copyKeys7->__get(_g218);
HXDLIN( 650)									_g218 = (_g218 + 1);
HXDLIN( 650)									if ((key202 != -1)) {
HXLINE( 650)										action202->addKey(key202,state202);
            									}
            								}
            							}
HXDLIN( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action203 = this->_ui_rightP;
HXDLIN( 650)								int state203 = 2;
HXDLIN( 650)								int _g219 = 0;
HXDLIN( 650)								while((_g219 < copyKeys7->length)){
HXLINE( 650)									int key203 = copyKeys7->__get(_g219);
HXDLIN( 650)									_g219 = (_g219 + 1);
HXDLIN( 650)									if ((key203 != -1)) {
HXLINE( 650)										action203->addKey(key203,state203);
            									}
            								}
            							}
HXDLIN( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action204 = this->_ui_rightR;
HXDLIN( 650)								int state204 = -1;
HXDLIN( 650)								int _g220 = 0;
HXDLIN( 650)								while((_g220 < copyKeys7->length)){
HXLINE( 650)									int key204 = copyKeys7->__get(_g220);
HXDLIN( 650)									_g220 = (_g220 + 1);
HXDLIN( 650)									if ((key204 != -1)) {
HXLINE( 650)										action204->addKey(key204,state204);
            									}
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action205 = this->_ui_down;
HXDLIN( 650)								int state205 = 1;
HXDLIN( 650)								int _g221 = 0;
HXDLIN( 650)								while((_g221 < copyKeys7->length)){
HXLINE( 650)									int key205 = copyKeys7->__get(_g221);
HXDLIN( 650)									_g221 = (_g221 + 1);
HXDLIN( 650)									if ((key205 != -1)) {
HXLINE( 650)										action205->addKey(key205,state205);
            									}
            								}
            							}
HXDLIN( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action206 = this->_ui_downP;
HXDLIN( 650)								int state206 = 2;
HXDLIN( 650)								int _g222 = 0;
HXDLIN( 650)								while((_g222 < copyKeys7->length)){
HXLINE( 650)									int key206 = copyKeys7->__get(_g222);
HXDLIN( 650)									_g222 = (_g222 + 1);
HXDLIN( 650)									if ((key206 != -1)) {
HXLINE( 650)										action206->addKey(key206,state206);
            									}
            								}
            							}
HXDLIN( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action207 = this->_ui_downR;
HXDLIN( 650)								int state207 = -1;
HXDLIN( 650)								int _g223 = 0;
HXDLIN( 650)								while((_g223 < copyKeys7->length)){
HXLINE( 650)									int key207 = copyKeys7->__get(_g223);
HXDLIN( 650)									_g223 = (_g223 + 1);
HXDLIN( 650)									if ((key207 != -1)) {
HXLINE( 650)										action207->addKey(key207,state207);
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action208 = this->_note_up;
HXDLIN( 650)								int state208 = 1;
HXDLIN( 650)								int _g224 = 0;
HXDLIN( 650)								while((_g224 < copyKeys7->length)){
HXLINE( 650)									int key208 = copyKeys7->__get(_g224);
HXDLIN( 650)									_g224 = (_g224 + 1);
HXDLIN( 650)									if ((key208 != -1)) {
HXLINE( 650)										action208->addKey(key208,state208);
            									}
            								}
            							}
HXDLIN( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action209 = this->_note_upP;
HXDLIN( 650)								int state209 = 2;
HXDLIN( 650)								int _g225 = 0;
HXDLIN( 650)								while((_g225 < copyKeys7->length)){
HXLINE( 650)									int key209 = copyKeys7->__get(_g225);
HXDLIN( 650)									_g225 = (_g225 + 1);
HXDLIN( 650)									if ((key209 != -1)) {
HXLINE( 650)										action209->addKey(key209,state209);
            									}
            								}
            							}
HXDLIN( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action210 = this->_note_upR;
HXDLIN( 650)								int state210 = -1;
HXDLIN( 650)								int _g226 = 0;
HXDLIN( 650)								while((_g226 < copyKeys7->length)){
HXLINE( 650)									int key210 = copyKeys7->__get(_g226);
HXDLIN( 650)									_g226 = (_g226 + 1);
HXDLIN( 650)									if ((key210 != -1)) {
HXLINE( 650)										action210->addKey(key210,state210);
            									}
            								}
            							}
            						}
            						break;
            						case (int)5: {
HXLINE( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action211 = this->_note_left;
HXDLIN( 650)								int state211 = 1;
HXDLIN( 650)								int _g227 = 0;
HXDLIN( 650)								while((_g227 < copyKeys7->length)){
HXLINE( 650)									int key211 = copyKeys7->__get(_g227);
HXDLIN( 650)									_g227 = (_g227 + 1);
HXDLIN( 650)									if ((key211 != -1)) {
HXLINE( 650)										action211->addKey(key211,state211);
            									}
            								}
            							}
HXDLIN( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action212 = this->_note_leftP;
HXDLIN( 650)								int state212 = 2;
HXDLIN( 650)								int _g228 = 0;
HXDLIN( 650)								while((_g228 < copyKeys7->length)){
HXLINE( 650)									int key212 = copyKeys7->__get(_g228);
HXDLIN( 650)									_g228 = (_g228 + 1);
HXDLIN( 650)									if ((key212 != -1)) {
HXLINE( 650)										action212->addKey(key212,state212);
            									}
            								}
            							}
HXDLIN( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action213 = this->_note_leftR;
HXDLIN( 650)								int state213 = -1;
HXDLIN( 650)								int _g229 = 0;
HXDLIN( 650)								while((_g229 < copyKeys7->length)){
HXLINE( 650)									int key213 = copyKeys7->__get(_g229);
HXDLIN( 650)									_g229 = (_g229 + 1);
HXDLIN( 650)									if ((key213 != -1)) {
HXLINE( 650)										action213->addKey(key213,state213);
            									}
            								}
            							}
            						}
            						break;
            						case (int)6: {
HXLINE( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action214 = this->_note_right;
HXDLIN( 650)								int state214 = 1;
HXDLIN( 650)								int _g230 = 0;
HXDLIN( 650)								while((_g230 < copyKeys7->length)){
HXLINE( 650)									int key214 = copyKeys7->__get(_g230);
HXDLIN( 650)									_g230 = (_g230 + 1);
HXDLIN( 650)									if ((key214 != -1)) {
HXLINE( 650)										action214->addKey(key214,state214);
            									}
            								}
            							}
HXDLIN( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action215 = this->_note_rightP;
HXDLIN( 650)								int state215 = 2;
HXDLIN( 650)								int _g231 = 0;
HXDLIN( 650)								while((_g231 < copyKeys7->length)){
HXLINE( 650)									int key215 = copyKeys7->__get(_g231);
HXDLIN( 650)									_g231 = (_g231 + 1);
HXDLIN( 650)									if ((key215 != -1)) {
HXLINE( 650)										action215->addKey(key215,state215);
            									}
            								}
            							}
HXDLIN( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action216 = this->_note_rightR;
HXDLIN( 650)								int state216 = -1;
HXDLIN( 650)								int _g232 = 0;
HXDLIN( 650)								while((_g232 < copyKeys7->length)){
HXLINE( 650)									int key216 = copyKeys7->__get(_g232);
HXDLIN( 650)									_g232 = (_g232 + 1);
HXDLIN( 650)									if ((key216 != -1)) {
HXLINE( 650)										action216->addKey(key216,state216);
            									}
            								}
            							}
            						}
            						break;
            						case (int)7: {
HXLINE( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action217 = this->_note_down;
HXDLIN( 650)								int state217 = 1;
HXDLIN( 650)								int _g233 = 0;
HXDLIN( 650)								while((_g233 < copyKeys7->length)){
HXLINE( 650)									int key217 = copyKeys7->__get(_g233);
HXDLIN( 650)									_g233 = (_g233 + 1);
HXDLIN( 650)									if ((key217 != -1)) {
HXLINE( 650)										action217->addKey(key217,state217);
            									}
            								}
            							}
HXDLIN( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action218 = this->_note_downP;
HXDLIN( 650)								int state218 = 2;
HXDLIN( 650)								int _g234 = 0;
HXDLIN( 650)								while((_g234 < copyKeys7->length)){
HXLINE( 650)									int key218 = copyKeys7->__get(_g234);
HXDLIN( 650)									_g234 = (_g234 + 1);
HXDLIN( 650)									if ((key218 != -1)) {
HXLINE( 650)										action218->addKey(key218,state218);
            									}
            								}
            							}
HXDLIN( 650)							{
HXLINE( 650)								 ::flixel::input::actions::FlxActionDigital action219 = this->_note_downR;
HXDLIN( 650)								int state219 = -1;
HXDLIN( 650)								int _g235 = 0;
HXDLIN( 650)								while((_g235 < copyKeys7->length)){
HXLINE( 650)									int key219 = copyKeys7->__get(_g235);
HXDLIN( 650)									_g235 = (_g235 + 1);
HXDLIN( 650)									if ((key219 != -1)) {
HXLINE( 650)										action219->addKey(key219,state219);
            									}
            								}
            							}
            						}
            						break;
            						case (int)8: {
HXLINE( 650)							 ::flixel::input::actions::FlxActionDigital action220 = this->_reset;
HXDLIN( 650)							int state220 = 2;
HXDLIN( 650)							int _g236 = 0;
HXDLIN( 650)							while((_g236 < copyKeys7->length)){
HXLINE( 650)								int key220 = copyKeys7->__get(_g236);
HXDLIN( 650)								_g236 = (_g236 + 1);
HXDLIN( 650)								if ((key220 != -1)) {
HXLINE( 650)									action220->addKey(key220,state220);
            								}
            							}
            						}
            						break;
            						case (int)9: {
HXLINE( 650)							 ::flixel::input::actions::FlxActionDigital action221 = this->_accept;
HXDLIN( 650)							int state221 = 2;
HXDLIN( 650)							int _g237 = 0;
HXDLIN( 650)							while((_g237 < copyKeys7->length)){
HXLINE( 650)								int key221 = copyKeys7->__get(_g237);
HXDLIN( 650)								_g237 = (_g237 + 1);
HXDLIN( 650)								if ((key221 != -1)) {
HXLINE( 650)									action221->addKey(key221,state221);
            								}
            							}
            						}
            						break;
            						case (int)10: {
HXLINE( 650)							 ::flixel::input::actions::FlxActionDigital action222 = this->_back;
HXDLIN( 650)							int state222 = 2;
HXDLIN( 650)							int _g238 = 0;
HXDLIN( 650)							while((_g238 < copyKeys7->length)){
HXLINE( 650)								int key222 = copyKeys7->__get(_g238);
HXDLIN( 650)								_g238 = (_g238 + 1);
HXDLIN( 650)								if ((key222 != -1)) {
HXLINE( 650)									action222->addKey(key222,state222);
            								}
            							}
            						}
            						break;
            						case (int)11: {
HXLINE( 650)							 ::flixel::input::actions::FlxActionDigital action223 = this->_pause;
HXDLIN( 650)							int state223 = 2;
HXDLIN( 650)							int _g239 = 0;
HXDLIN( 650)							while((_g239 < copyKeys7->length)){
HXLINE( 650)								int key223 = copyKeys7->__get(_g239);
HXDLIN( 650)								_g239 = (_g239 + 1);
HXDLIN( 650)								if ((key223 != -1)) {
HXLINE( 650)									action223->addKey(key223,state223);
            								}
            							}
            						}
            						break;
            					}
            				}
HXLINE( 652)				{
HXLINE( 652)					::Array< int > copyKeys8 = ( (::Array< int >)(keysMap->get(HX_("accept",08,93,06,0b))) )->copy();
HXDLIN( 652)					{
HXLINE( 652)						int _g240 = 0;
HXDLIN( 652)						int _g241 = copyKeys8->length;
HXDLIN( 652)						while((_g240 < _g241)){
HXLINE( 652)							_g240 = (_g240 + 1);
HXDLIN( 652)							int i8 = (_g240 - 1);
HXDLIN( 652)							if ((i8 == -1)) {
HXLINE( 652)								copyKeys8->remove(i8);
            							}
            						}
            					}
HXDLIN( 652)					switch((int)(::Control_obj::ACCEPT_dyn()->_hx_getIndex())){
            						case (int)0: {
HXLINE( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action224 = this->_ui_up;
HXDLIN( 652)								int state224 = 1;
HXDLIN( 652)								int _g242 = 0;
HXDLIN( 652)								while((_g242 < copyKeys8->length)){
HXLINE( 652)									int key224 = copyKeys8->__get(_g242);
HXDLIN( 652)									_g242 = (_g242 + 1);
HXDLIN( 652)									if ((key224 != -1)) {
HXLINE( 652)										action224->addKey(key224,state224);
            									}
            								}
            							}
HXDLIN( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action225 = this->_ui_upP;
HXDLIN( 652)								int state225 = 2;
HXDLIN( 652)								int _g243 = 0;
HXDLIN( 652)								while((_g243 < copyKeys8->length)){
HXLINE( 652)									int key225 = copyKeys8->__get(_g243);
HXDLIN( 652)									_g243 = (_g243 + 1);
HXDLIN( 652)									if ((key225 != -1)) {
HXLINE( 652)										action225->addKey(key225,state225);
            									}
            								}
            							}
HXDLIN( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action226 = this->_ui_upR;
HXDLIN( 652)								int state226 = -1;
HXDLIN( 652)								int _g244 = 0;
HXDLIN( 652)								while((_g244 < copyKeys8->length)){
HXLINE( 652)									int key226 = copyKeys8->__get(_g244);
HXDLIN( 652)									_g244 = (_g244 + 1);
HXDLIN( 652)									if ((key226 != -1)) {
HXLINE( 652)										action226->addKey(key226,state226);
            									}
            								}
            							}
            						}
            						break;
            						case (int)1: {
HXLINE( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action227 = this->_ui_left;
HXDLIN( 652)								int state227 = 1;
HXDLIN( 652)								int _g245 = 0;
HXDLIN( 652)								while((_g245 < copyKeys8->length)){
HXLINE( 652)									int key227 = copyKeys8->__get(_g245);
HXDLIN( 652)									_g245 = (_g245 + 1);
HXDLIN( 652)									if ((key227 != -1)) {
HXLINE( 652)										action227->addKey(key227,state227);
            									}
            								}
            							}
HXDLIN( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action228 = this->_ui_leftP;
HXDLIN( 652)								int state228 = 2;
HXDLIN( 652)								int _g246 = 0;
HXDLIN( 652)								while((_g246 < copyKeys8->length)){
HXLINE( 652)									int key228 = copyKeys8->__get(_g246);
HXDLIN( 652)									_g246 = (_g246 + 1);
HXDLIN( 652)									if ((key228 != -1)) {
HXLINE( 652)										action228->addKey(key228,state228);
            									}
            								}
            							}
HXDLIN( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action229 = this->_ui_leftR;
HXDLIN( 652)								int state229 = -1;
HXDLIN( 652)								int _g247 = 0;
HXDLIN( 652)								while((_g247 < copyKeys8->length)){
HXLINE( 652)									int key229 = copyKeys8->__get(_g247);
HXDLIN( 652)									_g247 = (_g247 + 1);
HXDLIN( 652)									if ((key229 != -1)) {
HXLINE( 652)										action229->addKey(key229,state229);
            									}
            								}
            							}
            						}
            						break;
            						case (int)2: {
HXLINE( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action230 = this->_ui_right;
HXDLIN( 652)								int state230 = 1;
HXDLIN( 652)								int _g248 = 0;
HXDLIN( 652)								while((_g248 < copyKeys8->length)){
HXLINE( 652)									int key230 = copyKeys8->__get(_g248);
HXDLIN( 652)									_g248 = (_g248 + 1);
HXDLIN( 652)									if ((key230 != -1)) {
HXLINE( 652)										action230->addKey(key230,state230);
            									}
            								}
            							}
HXDLIN( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action231 = this->_ui_rightP;
HXDLIN( 652)								int state231 = 2;
HXDLIN( 652)								int _g249 = 0;
HXDLIN( 652)								while((_g249 < copyKeys8->length)){
HXLINE( 652)									int key231 = copyKeys8->__get(_g249);
HXDLIN( 652)									_g249 = (_g249 + 1);
HXDLIN( 652)									if ((key231 != -1)) {
HXLINE( 652)										action231->addKey(key231,state231);
            									}
            								}
            							}
HXDLIN( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action232 = this->_ui_rightR;
HXDLIN( 652)								int state232 = -1;
HXDLIN( 652)								int _g250 = 0;
HXDLIN( 652)								while((_g250 < copyKeys8->length)){
HXLINE( 652)									int key232 = copyKeys8->__get(_g250);
HXDLIN( 652)									_g250 = (_g250 + 1);
HXDLIN( 652)									if ((key232 != -1)) {
HXLINE( 652)										action232->addKey(key232,state232);
            									}
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action233 = this->_ui_down;
HXDLIN( 652)								int state233 = 1;
HXDLIN( 652)								int _g251 = 0;
HXDLIN( 652)								while((_g251 < copyKeys8->length)){
HXLINE( 652)									int key233 = copyKeys8->__get(_g251);
HXDLIN( 652)									_g251 = (_g251 + 1);
HXDLIN( 652)									if ((key233 != -1)) {
HXLINE( 652)										action233->addKey(key233,state233);
            									}
            								}
            							}
HXDLIN( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action234 = this->_ui_downP;
HXDLIN( 652)								int state234 = 2;
HXDLIN( 652)								int _g252 = 0;
HXDLIN( 652)								while((_g252 < copyKeys8->length)){
HXLINE( 652)									int key234 = copyKeys8->__get(_g252);
HXDLIN( 652)									_g252 = (_g252 + 1);
HXDLIN( 652)									if ((key234 != -1)) {
HXLINE( 652)										action234->addKey(key234,state234);
            									}
            								}
            							}
HXDLIN( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action235 = this->_ui_downR;
HXDLIN( 652)								int state235 = -1;
HXDLIN( 652)								int _g253 = 0;
HXDLIN( 652)								while((_g253 < copyKeys8->length)){
HXLINE( 652)									int key235 = copyKeys8->__get(_g253);
HXDLIN( 652)									_g253 = (_g253 + 1);
HXDLIN( 652)									if ((key235 != -1)) {
HXLINE( 652)										action235->addKey(key235,state235);
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action236 = this->_note_up;
HXDLIN( 652)								int state236 = 1;
HXDLIN( 652)								int _g254 = 0;
HXDLIN( 652)								while((_g254 < copyKeys8->length)){
HXLINE( 652)									int key236 = copyKeys8->__get(_g254);
HXDLIN( 652)									_g254 = (_g254 + 1);
HXDLIN( 652)									if ((key236 != -1)) {
HXLINE( 652)										action236->addKey(key236,state236);
            									}
            								}
            							}
HXDLIN( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action237 = this->_note_upP;
HXDLIN( 652)								int state237 = 2;
HXDLIN( 652)								int _g255 = 0;
HXDLIN( 652)								while((_g255 < copyKeys8->length)){
HXLINE( 652)									int key237 = copyKeys8->__get(_g255);
HXDLIN( 652)									_g255 = (_g255 + 1);
HXDLIN( 652)									if ((key237 != -1)) {
HXLINE( 652)										action237->addKey(key237,state237);
            									}
            								}
            							}
HXDLIN( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action238 = this->_note_upR;
HXDLIN( 652)								int state238 = -1;
HXDLIN( 652)								int _g256 = 0;
HXDLIN( 652)								while((_g256 < copyKeys8->length)){
HXLINE( 652)									int key238 = copyKeys8->__get(_g256);
HXDLIN( 652)									_g256 = (_g256 + 1);
HXDLIN( 652)									if ((key238 != -1)) {
HXLINE( 652)										action238->addKey(key238,state238);
            									}
            								}
            							}
            						}
            						break;
            						case (int)5: {
HXLINE( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action239 = this->_note_left;
HXDLIN( 652)								int state239 = 1;
HXDLIN( 652)								int _g257 = 0;
HXDLIN( 652)								while((_g257 < copyKeys8->length)){
HXLINE( 652)									int key239 = copyKeys8->__get(_g257);
HXDLIN( 652)									_g257 = (_g257 + 1);
HXDLIN( 652)									if ((key239 != -1)) {
HXLINE( 652)										action239->addKey(key239,state239);
            									}
            								}
            							}
HXDLIN( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action240 = this->_note_leftP;
HXDLIN( 652)								int state240 = 2;
HXDLIN( 652)								int _g258 = 0;
HXDLIN( 652)								while((_g258 < copyKeys8->length)){
HXLINE( 652)									int key240 = copyKeys8->__get(_g258);
HXDLIN( 652)									_g258 = (_g258 + 1);
HXDLIN( 652)									if ((key240 != -1)) {
HXLINE( 652)										action240->addKey(key240,state240);
            									}
            								}
            							}
HXDLIN( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action241 = this->_note_leftR;
HXDLIN( 652)								int state241 = -1;
HXDLIN( 652)								int _g259 = 0;
HXDLIN( 652)								while((_g259 < copyKeys8->length)){
HXLINE( 652)									int key241 = copyKeys8->__get(_g259);
HXDLIN( 652)									_g259 = (_g259 + 1);
HXDLIN( 652)									if ((key241 != -1)) {
HXLINE( 652)										action241->addKey(key241,state241);
            									}
            								}
            							}
            						}
            						break;
            						case (int)6: {
HXLINE( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action242 = this->_note_right;
HXDLIN( 652)								int state242 = 1;
HXDLIN( 652)								int _g260 = 0;
HXDLIN( 652)								while((_g260 < copyKeys8->length)){
HXLINE( 652)									int key242 = copyKeys8->__get(_g260);
HXDLIN( 652)									_g260 = (_g260 + 1);
HXDLIN( 652)									if ((key242 != -1)) {
HXLINE( 652)										action242->addKey(key242,state242);
            									}
            								}
            							}
HXDLIN( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action243 = this->_note_rightP;
HXDLIN( 652)								int state243 = 2;
HXDLIN( 652)								int _g261 = 0;
HXDLIN( 652)								while((_g261 < copyKeys8->length)){
HXLINE( 652)									int key243 = copyKeys8->__get(_g261);
HXDLIN( 652)									_g261 = (_g261 + 1);
HXDLIN( 652)									if ((key243 != -1)) {
HXLINE( 652)										action243->addKey(key243,state243);
            									}
            								}
            							}
HXDLIN( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action244 = this->_note_rightR;
HXDLIN( 652)								int state244 = -1;
HXDLIN( 652)								int _g262 = 0;
HXDLIN( 652)								while((_g262 < copyKeys8->length)){
HXLINE( 652)									int key244 = copyKeys8->__get(_g262);
HXDLIN( 652)									_g262 = (_g262 + 1);
HXDLIN( 652)									if ((key244 != -1)) {
HXLINE( 652)										action244->addKey(key244,state244);
            									}
            								}
            							}
            						}
            						break;
            						case (int)7: {
HXLINE( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action245 = this->_note_down;
HXDLIN( 652)								int state245 = 1;
HXDLIN( 652)								int _g263 = 0;
HXDLIN( 652)								while((_g263 < copyKeys8->length)){
HXLINE( 652)									int key245 = copyKeys8->__get(_g263);
HXDLIN( 652)									_g263 = (_g263 + 1);
HXDLIN( 652)									if ((key245 != -1)) {
HXLINE( 652)										action245->addKey(key245,state245);
            									}
            								}
            							}
HXDLIN( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action246 = this->_note_downP;
HXDLIN( 652)								int state246 = 2;
HXDLIN( 652)								int _g264 = 0;
HXDLIN( 652)								while((_g264 < copyKeys8->length)){
HXLINE( 652)									int key246 = copyKeys8->__get(_g264);
HXDLIN( 652)									_g264 = (_g264 + 1);
HXDLIN( 652)									if ((key246 != -1)) {
HXLINE( 652)										action246->addKey(key246,state246);
            									}
            								}
            							}
HXDLIN( 652)							{
HXLINE( 652)								 ::flixel::input::actions::FlxActionDigital action247 = this->_note_downR;
HXDLIN( 652)								int state247 = -1;
HXDLIN( 652)								int _g265 = 0;
HXDLIN( 652)								while((_g265 < copyKeys8->length)){
HXLINE( 652)									int key247 = copyKeys8->__get(_g265);
HXDLIN( 652)									_g265 = (_g265 + 1);
HXDLIN( 652)									if ((key247 != -1)) {
HXLINE( 652)										action247->addKey(key247,state247);
            									}
            								}
            							}
            						}
            						break;
            						case (int)8: {
HXLINE( 652)							 ::flixel::input::actions::FlxActionDigital action248 = this->_reset;
HXDLIN( 652)							int state248 = 2;
HXDLIN( 652)							int _g266 = 0;
HXDLIN( 652)							while((_g266 < copyKeys8->length)){
HXLINE( 652)								int key248 = copyKeys8->__get(_g266);
HXDLIN( 652)								_g266 = (_g266 + 1);
HXDLIN( 652)								if ((key248 != -1)) {
HXLINE( 652)									action248->addKey(key248,state248);
            								}
            							}
            						}
            						break;
            						case (int)9: {
HXLINE( 652)							 ::flixel::input::actions::FlxActionDigital action249 = this->_accept;
HXDLIN( 652)							int state249 = 2;
HXDLIN( 652)							int _g267 = 0;
HXDLIN( 652)							while((_g267 < copyKeys8->length)){
HXLINE( 652)								int key249 = copyKeys8->__get(_g267);
HXDLIN( 652)								_g267 = (_g267 + 1);
HXDLIN( 652)								if ((key249 != -1)) {
HXLINE( 652)									action249->addKey(key249,state249);
            								}
            							}
            						}
            						break;
            						case (int)10: {
HXLINE( 652)							 ::flixel::input::actions::FlxActionDigital action250 = this->_back;
HXDLIN( 652)							int state250 = 2;
HXDLIN( 652)							int _g268 = 0;
HXDLIN( 652)							while((_g268 < copyKeys8->length)){
HXLINE( 652)								int key250 = copyKeys8->__get(_g268);
HXDLIN( 652)								_g268 = (_g268 + 1);
HXDLIN( 652)								if ((key250 != -1)) {
HXLINE( 652)									action250->addKey(key250,state250);
            								}
            							}
            						}
            						break;
            						case (int)11: {
HXLINE( 652)							 ::flixel::input::actions::FlxActionDigital action251 = this->_pause;
HXDLIN( 652)							int state251 = 2;
HXDLIN( 652)							int _g269 = 0;
HXDLIN( 652)							while((_g269 < copyKeys8->length)){
HXLINE( 652)								int key251 = copyKeys8->__get(_g269);
HXDLIN( 652)								_g269 = (_g269 + 1);
HXDLIN( 652)								if ((key251 != -1)) {
HXLINE( 652)									action251->addKey(key251,state251);
            								}
            							}
            						}
            						break;
            					}
            				}
HXLINE( 653)				{
HXLINE( 653)					::Array< int > copyKeys9 = ( (::Array< int >)(keysMap->get(HX_("back",27,da,10,41))) )->copy();
HXDLIN( 653)					{
HXLINE( 653)						int _g270 = 0;
HXDLIN( 653)						int _g271 = copyKeys9->length;
HXDLIN( 653)						while((_g270 < _g271)){
HXLINE( 653)							_g270 = (_g270 + 1);
HXDLIN( 653)							int i9 = (_g270 - 1);
HXDLIN( 653)							if ((i9 == -1)) {
HXLINE( 653)								copyKeys9->remove(i9);
            							}
            						}
            					}
HXDLIN( 653)					switch((int)(::Control_obj::BACK_dyn()->_hx_getIndex())){
            						case (int)0: {
HXLINE( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action252 = this->_ui_up;
HXDLIN( 653)								int state252 = 1;
HXDLIN( 653)								int _g272 = 0;
HXDLIN( 653)								while((_g272 < copyKeys9->length)){
HXLINE( 653)									int key252 = copyKeys9->__get(_g272);
HXDLIN( 653)									_g272 = (_g272 + 1);
HXDLIN( 653)									if ((key252 != -1)) {
HXLINE( 653)										action252->addKey(key252,state252);
            									}
            								}
            							}
HXDLIN( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action253 = this->_ui_upP;
HXDLIN( 653)								int state253 = 2;
HXDLIN( 653)								int _g273 = 0;
HXDLIN( 653)								while((_g273 < copyKeys9->length)){
HXLINE( 653)									int key253 = copyKeys9->__get(_g273);
HXDLIN( 653)									_g273 = (_g273 + 1);
HXDLIN( 653)									if ((key253 != -1)) {
HXLINE( 653)										action253->addKey(key253,state253);
            									}
            								}
            							}
HXDLIN( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action254 = this->_ui_upR;
HXDLIN( 653)								int state254 = -1;
HXDLIN( 653)								int _g274 = 0;
HXDLIN( 653)								while((_g274 < copyKeys9->length)){
HXLINE( 653)									int key254 = copyKeys9->__get(_g274);
HXDLIN( 653)									_g274 = (_g274 + 1);
HXDLIN( 653)									if ((key254 != -1)) {
HXLINE( 653)										action254->addKey(key254,state254);
            									}
            								}
            							}
            						}
            						break;
            						case (int)1: {
HXLINE( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action255 = this->_ui_left;
HXDLIN( 653)								int state255 = 1;
HXDLIN( 653)								int _g275 = 0;
HXDLIN( 653)								while((_g275 < copyKeys9->length)){
HXLINE( 653)									int key255 = copyKeys9->__get(_g275);
HXDLIN( 653)									_g275 = (_g275 + 1);
HXDLIN( 653)									if ((key255 != -1)) {
HXLINE( 653)										action255->addKey(key255,state255);
            									}
            								}
            							}
HXDLIN( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action256 = this->_ui_leftP;
HXDLIN( 653)								int state256 = 2;
HXDLIN( 653)								int _g276 = 0;
HXDLIN( 653)								while((_g276 < copyKeys9->length)){
HXLINE( 653)									int key256 = copyKeys9->__get(_g276);
HXDLIN( 653)									_g276 = (_g276 + 1);
HXDLIN( 653)									if ((key256 != -1)) {
HXLINE( 653)										action256->addKey(key256,state256);
            									}
            								}
            							}
HXDLIN( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action257 = this->_ui_leftR;
HXDLIN( 653)								int state257 = -1;
HXDLIN( 653)								int _g277 = 0;
HXDLIN( 653)								while((_g277 < copyKeys9->length)){
HXLINE( 653)									int key257 = copyKeys9->__get(_g277);
HXDLIN( 653)									_g277 = (_g277 + 1);
HXDLIN( 653)									if ((key257 != -1)) {
HXLINE( 653)										action257->addKey(key257,state257);
            									}
            								}
            							}
            						}
            						break;
            						case (int)2: {
HXLINE( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action258 = this->_ui_right;
HXDLIN( 653)								int state258 = 1;
HXDLIN( 653)								int _g278 = 0;
HXDLIN( 653)								while((_g278 < copyKeys9->length)){
HXLINE( 653)									int key258 = copyKeys9->__get(_g278);
HXDLIN( 653)									_g278 = (_g278 + 1);
HXDLIN( 653)									if ((key258 != -1)) {
HXLINE( 653)										action258->addKey(key258,state258);
            									}
            								}
            							}
HXDLIN( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action259 = this->_ui_rightP;
HXDLIN( 653)								int state259 = 2;
HXDLIN( 653)								int _g279 = 0;
HXDLIN( 653)								while((_g279 < copyKeys9->length)){
HXLINE( 653)									int key259 = copyKeys9->__get(_g279);
HXDLIN( 653)									_g279 = (_g279 + 1);
HXDLIN( 653)									if ((key259 != -1)) {
HXLINE( 653)										action259->addKey(key259,state259);
            									}
            								}
            							}
HXDLIN( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action260 = this->_ui_rightR;
HXDLIN( 653)								int state260 = -1;
HXDLIN( 653)								int _g280 = 0;
HXDLIN( 653)								while((_g280 < copyKeys9->length)){
HXLINE( 653)									int key260 = copyKeys9->__get(_g280);
HXDLIN( 653)									_g280 = (_g280 + 1);
HXDLIN( 653)									if ((key260 != -1)) {
HXLINE( 653)										action260->addKey(key260,state260);
            									}
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action261 = this->_ui_down;
HXDLIN( 653)								int state261 = 1;
HXDLIN( 653)								int _g281 = 0;
HXDLIN( 653)								while((_g281 < copyKeys9->length)){
HXLINE( 653)									int key261 = copyKeys9->__get(_g281);
HXDLIN( 653)									_g281 = (_g281 + 1);
HXDLIN( 653)									if ((key261 != -1)) {
HXLINE( 653)										action261->addKey(key261,state261);
            									}
            								}
            							}
HXDLIN( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action262 = this->_ui_downP;
HXDLIN( 653)								int state262 = 2;
HXDLIN( 653)								int _g282 = 0;
HXDLIN( 653)								while((_g282 < copyKeys9->length)){
HXLINE( 653)									int key262 = copyKeys9->__get(_g282);
HXDLIN( 653)									_g282 = (_g282 + 1);
HXDLIN( 653)									if ((key262 != -1)) {
HXLINE( 653)										action262->addKey(key262,state262);
            									}
            								}
            							}
HXDLIN( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action263 = this->_ui_downR;
HXDLIN( 653)								int state263 = -1;
HXDLIN( 653)								int _g283 = 0;
HXDLIN( 653)								while((_g283 < copyKeys9->length)){
HXLINE( 653)									int key263 = copyKeys9->__get(_g283);
HXDLIN( 653)									_g283 = (_g283 + 1);
HXDLIN( 653)									if ((key263 != -1)) {
HXLINE( 653)										action263->addKey(key263,state263);
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action264 = this->_note_up;
HXDLIN( 653)								int state264 = 1;
HXDLIN( 653)								int _g284 = 0;
HXDLIN( 653)								while((_g284 < copyKeys9->length)){
HXLINE( 653)									int key264 = copyKeys9->__get(_g284);
HXDLIN( 653)									_g284 = (_g284 + 1);
HXDLIN( 653)									if ((key264 != -1)) {
HXLINE( 653)										action264->addKey(key264,state264);
            									}
            								}
            							}
HXDLIN( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action265 = this->_note_upP;
HXDLIN( 653)								int state265 = 2;
HXDLIN( 653)								int _g285 = 0;
HXDLIN( 653)								while((_g285 < copyKeys9->length)){
HXLINE( 653)									int key265 = copyKeys9->__get(_g285);
HXDLIN( 653)									_g285 = (_g285 + 1);
HXDLIN( 653)									if ((key265 != -1)) {
HXLINE( 653)										action265->addKey(key265,state265);
            									}
            								}
            							}
HXDLIN( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action266 = this->_note_upR;
HXDLIN( 653)								int state266 = -1;
HXDLIN( 653)								int _g286 = 0;
HXDLIN( 653)								while((_g286 < copyKeys9->length)){
HXLINE( 653)									int key266 = copyKeys9->__get(_g286);
HXDLIN( 653)									_g286 = (_g286 + 1);
HXDLIN( 653)									if ((key266 != -1)) {
HXLINE( 653)										action266->addKey(key266,state266);
            									}
            								}
            							}
            						}
            						break;
            						case (int)5: {
HXLINE( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action267 = this->_note_left;
HXDLIN( 653)								int state267 = 1;
HXDLIN( 653)								int _g287 = 0;
HXDLIN( 653)								while((_g287 < copyKeys9->length)){
HXLINE( 653)									int key267 = copyKeys9->__get(_g287);
HXDLIN( 653)									_g287 = (_g287 + 1);
HXDLIN( 653)									if ((key267 != -1)) {
HXLINE( 653)										action267->addKey(key267,state267);
            									}
            								}
            							}
HXDLIN( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action268 = this->_note_leftP;
HXDLIN( 653)								int state268 = 2;
HXDLIN( 653)								int _g288 = 0;
HXDLIN( 653)								while((_g288 < copyKeys9->length)){
HXLINE( 653)									int key268 = copyKeys9->__get(_g288);
HXDLIN( 653)									_g288 = (_g288 + 1);
HXDLIN( 653)									if ((key268 != -1)) {
HXLINE( 653)										action268->addKey(key268,state268);
            									}
            								}
            							}
HXDLIN( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action269 = this->_note_leftR;
HXDLIN( 653)								int state269 = -1;
HXDLIN( 653)								int _g289 = 0;
HXDLIN( 653)								while((_g289 < copyKeys9->length)){
HXLINE( 653)									int key269 = copyKeys9->__get(_g289);
HXDLIN( 653)									_g289 = (_g289 + 1);
HXDLIN( 653)									if ((key269 != -1)) {
HXLINE( 653)										action269->addKey(key269,state269);
            									}
            								}
            							}
            						}
            						break;
            						case (int)6: {
HXLINE( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action270 = this->_note_right;
HXDLIN( 653)								int state270 = 1;
HXDLIN( 653)								int _g290 = 0;
HXDLIN( 653)								while((_g290 < copyKeys9->length)){
HXLINE( 653)									int key270 = copyKeys9->__get(_g290);
HXDLIN( 653)									_g290 = (_g290 + 1);
HXDLIN( 653)									if ((key270 != -1)) {
HXLINE( 653)										action270->addKey(key270,state270);
            									}
            								}
            							}
HXDLIN( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action271 = this->_note_rightP;
HXDLIN( 653)								int state271 = 2;
HXDLIN( 653)								int _g291 = 0;
HXDLIN( 653)								while((_g291 < copyKeys9->length)){
HXLINE( 653)									int key271 = copyKeys9->__get(_g291);
HXDLIN( 653)									_g291 = (_g291 + 1);
HXDLIN( 653)									if ((key271 != -1)) {
HXLINE( 653)										action271->addKey(key271,state271);
            									}
            								}
            							}
HXDLIN( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action272 = this->_note_rightR;
HXDLIN( 653)								int state272 = -1;
HXDLIN( 653)								int _g292 = 0;
HXDLIN( 653)								while((_g292 < copyKeys9->length)){
HXLINE( 653)									int key272 = copyKeys9->__get(_g292);
HXDLIN( 653)									_g292 = (_g292 + 1);
HXDLIN( 653)									if ((key272 != -1)) {
HXLINE( 653)										action272->addKey(key272,state272);
            									}
            								}
            							}
            						}
            						break;
            						case (int)7: {
HXLINE( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action273 = this->_note_down;
HXDLIN( 653)								int state273 = 1;
HXDLIN( 653)								int _g293 = 0;
HXDLIN( 653)								while((_g293 < copyKeys9->length)){
HXLINE( 653)									int key273 = copyKeys9->__get(_g293);
HXDLIN( 653)									_g293 = (_g293 + 1);
HXDLIN( 653)									if ((key273 != -1)) {
HXLINE( 653)										action273->addKey(key273,state273);
            									}
            								}
            							}
HXDLIN( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action274 = this->_note_downP;
HXDLIN( 653)								int state274 = 2;
HXDLIN( 653)								int _g294 = 0;
HXDLIN( 653)								while((_g294 < copyKeys9->length)){
HXLINE( 653)									int key274 = copyKeys9->__get(_g294);
HXDLIN( 653)									_g294 = (_g294 + 1);
HXDLIN( 653)									if ((key274 != -1)) {
HXLINE( 653)										action274->addKey(key274,state274);
            									}
            								}
            							}
HXDLIN( 653)							{
HXLINE( 653)								 ::flixel::input::actions::FlxActionDigital action275 = this->_note_downR;
HXDLIN( 653)								int state275 = -1;
HXDLIN( 653)								int _g295 = 0;
HXDLIN( 653)								while((_g295 < copyKeys9->length)){
HXLINE( 653)									int key275 = copyKeys9->__get(_g295);
HXDLIN( 653)									_g295 = (_g295 + 1);
HXDLIN( 653)									if ((key275 != -1)) {
HXLINE( 653)										action275->addKey(key275,state275);
            									}
            								}
            							}
            						}
            						break;
            						case (int)8: {
HXLINE( 653)							 ::flixel::input::actions::FlxActionDigital action276 = this->_reset;
HXDLIN( 653)							int state276 = 2;
HXDLIN( 653)							int _g296 = 0;
HXDLIN( 653)							while((_g296 < copyKeys9->length)){
HXLINE( 653)								int key276 = copyKeys9->__get(_g296);
HXDLIN( 653)								_g296 = (_g296 + 1);
HXDLIN( 653)								if ((key276 != -1)) {
HXLINE( 653)									action276->addKey(key276,state276);
            								}
            							}
            						}
            						break;
            						case (int)9: {
HXLINE( 653)							 ::flixel::input::actions::FlxActionDigital action277 = this->_accept;
HXDLIN( 653)							int state277 = 2;
HXDLIN( 653)							int _g297 = 0;
HXDLIN( 653)							while((_g297 < copyKeys9->length)){
HXLINE( 653)								int key277 = copyKeys9->__get(_g297);
HXDLIN( 653)								_g297 = (_g297 + 1);
HXDLIN( 653)								if ((key277 != -1)) {
HXLINE( 653)									action277->addKey(key277,state277);
            								}
            							}
            						}
            						break;
            						case (int)10: {
HXLINE( 653)							 ::flixel::input::actions::FlxActionDigital action278 = this->_back;
HXDLIN( 653)							int state278 = 2;
HXDLIN( 653)							int _g298 = 0;
HXDLIN( 653)							while((_g298 < copyKeys9->length)){
HXLINE( 653)								int key278 = copyKeys9->__get(_g298);
HXDLIN( 653)								_g298 = (_g298 + 1);
HXDLIN( 653)								if ((key278 != -1)) {
HXLINE( 653)									action278->addKey(key278,state278);
            								}
            							}
            						}
            						break;
            						case (int)11: {
HXLINE( 653)							 ::flixel::input::actions::FlxActionDigital action279 = this->_pause;
HXDLIN( 653)							int state279 = 2;
HXDLIN( 653)							int _g299 = 0;
HXDLIN( 653)							while((_g299 < copyKeys9->length)){
HXLINE( 653)								int key279 = copyKeys9->__get(_g299);
HXDLIN( 653)								_g299 = (_g299 + 1);
HXDLIN( 653)								if ((key279 != -1)) {
HXLINE( 653)									action279->addKey(key279,state279);
            								}
            							}
            						}
            						break;
            					}
            				}
HXLINE( 654)				{
HXLINE( 654)					::Array< int > copyKeys10 = ( (::Array< int >)(keysMap->get(HX_("pause",f6,d6,57,bd))) )->copy();
HXDLIN( 654)					{
HXLINE( 654)						int _g300 = 0;
HXDLIN( 654)						int _g301 = copyKeys10->length;
HXDLIN( 654)						while((_g300 < _g301)){
HXLINE( 654)							_g300 = (_g300 + 1);
HXDLIN( 654)							int i10 = (_g300 - 1);
HXDLIN( 654)							if ((i10 == -1)) {
HXLINE( 654)								copyKeys10->remove(i10);
            							}
            						}
            					}
HXDLIN( 654)					switch((int)(::Control_obj::PAUSE_dyn()->_hx_getIndex())){
            						case (int)0: {
HXLINE( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action280 = this->_ui_up;
HXDLIN( 654)								int state280 = 1;
HXDLIN( 654)								int _g302 = 0;
HXDLIN( 654)								while((_g302 < copyKeys10->length)){
HXLINE( 654)									int key280 = copyKeys10->__get(_g302);
HXDLIN( 654)									_g302 = (_g302 + 1);
HXDLIN( 654)									if ((key280 != -1)) {
HXLINE( 654)										action280->addKey(key280,state280);
            									}
            								}
            							}
HXDLIN( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action281 = this->_ui_upP;
HXDLIN( 654)								int state281 = 2;
HXDLIN( 654)								int _g303 = 0;
HXDLIN( 654)								while((_g303 < copyKeys10->length)){
HXLINE( 654)									int key281 = copyKeys10->__get(_g303);
HXDLIN( 654)									_g303 = (_g303 + 1);
HXDLIN( 654)									if ((key281 != -1)) {
HXLINE( 654)										action281->addKey(key281,state281);
            									}
            								}
            							}
HXDLIN( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action282 = this->_ui_upR;
HXDLIN( 654)								int state282 = -1;
HXDLIN( 654)								int _g304 = 0;
HXDLIN( 654)								while((_g304 < copyKeys10->length)){
HXLINE( 654)									int key282 = copyKeys10->__get(_g304);
HXDLIN( 654)									_g304 = (_g304 + 1);
HXDLIN( 654)									if ((key282 != -1)) {
HXLINE( 654)										action282->addKey(key282,state282);
            									}
            								}
            							}
            						}
            						break;
            						case (int)1: {
HXLINE( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action283 = this->_ui_left;
HXDLIN( 654)								int state283 = 1;
HXDLIN( 654)								int _g305 = 0;
HXDLIN( 654)								while((_g305 < copyKeys10->length)){
HXLINE( 654)									int key283 = copyKeys10->__get(_g305);
HXDLIN( 654)									_g305 = (_g305 + 1);
HXDLIN( 654)									if ((key283 != -1)) {
HXLINE( 654)										action283->addKey(key283,state283);
            									}
            								}
            							}
HXDLIN( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action284 = this->_ui_leftP;
HXDLIN( 654)								int state284 = 2;
HXDLIN( 654)								int _g306 = 0;
HXDLIN( 654)								while((_g306 < copyKeys10->length)){
HXLINE( 654)									int key284 = copyKeys10->__get(_g306);
HXDLIN( 654)									_g306 = (_g306 + 1);
HXDLIN( 654)									if ((key284 != -1)) {
HXLINE( 654)										action284->addKey(key284,state284);
            									}
            								}
            							}
HXDLIN( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action285 = this->_ui_leftR;
HXDLIN( 654)								int state285 = -1;
HXDLIN( 654)								int _g307 = 0;
HXDLIN( 654)								while((_g307 < copyKeys10->length)){
HXLINE( 654)									int key285 = copyKeys10->__get(_g307);
HXDLIN( 654)									_g307 = (_g307 + 1);
HXDLIN( 654)									if ((key285 != -1)) {
HXLINE( 654)										action285->addKey(key285,state285);
            									}
            								}
            							}
            						}
            						break;
            						case (int)2: {
HXLINE( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action286 = this->_ui_right;
HXDLIN( 654)								int state286 = 1;
HXDLIN( 654)								int _g308 = 0;
HXDLIN( 654)								while((_g308 < copyKeys10->length)){
HXLINE( 654)									int key286 = copyKeys10->__get(_g308);
HXDLIN( 654)									_g308 = (_g308 + 1);
HXDLIN( 654)									if ((key286 != -1)) {
HXLINE( 654)										action286->addKey(key286,state286);
            									}
            								}
            							}
HXDLIN( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action287 = this->_ui_rightP;
HXDLIN( 654)								int state287 = 2;
HXDLIN( 654)								int _g309 = 0;
HXDLIN( 654)								while((_g309 < copyKeys10->length)){
HXLINE( 654)									int key287 = copyKeys10->__get(_g309);
HXDLIN( 654)									_g309 = (_g309 + 1);
HXDLIN( 654)									if ((key287 != -1)) {
HXLINE( 654)										action287->addKey(key287,state287);
            									}
            								}
            							}
HXDLIN( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action288 = this->_ui_rightR;
HXDLIN( 654)								int state288 = -1;
HXDLIN( 654)								int _g310 = 0;
HXDLIN( 654)								while((_g310 < copyKeys10->length)){
HXLINE( 654)									int key288 = copyKeys10->__get(_g310);
HXDLIN( 654)									_g310 = (_g310 + 1);
HXDLIN( 654)									if ((key288 != -1)) {
HXLINE( 654)										action288->addKey(key288,state288);
            									}
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action289 = this->_ui_down;
HXDLIN( 654)								int state289 = 1;
HXDLIN( 654)								int _g311 = 0;
HXDLIN( 654)								while((_g311 < copyKeys10->length)){
HXLINE( 654)									int key289 = copyKeys10->__get(_g311);
HXDLIN( 654)									_g311 = (_g311 + 1);
HXDLIN( 654)									if ((key289 != -1)) {
HXLINE( 654)										action289->addKey(key289,state289);
            									}
            								}
            							}
HXDLIN( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action290 = this->_ui_downP;
HXDLIN( 654)								int state290 = 2;
HXDLIN( 654)								int _g312 = 0;
HXDLIN( 654)								while((_g312 < copyKeys10->length)){
HXLINE( 654)									int key290 = copyKeys10->__get(_g312);
HXDLIN( 654)									_g312 = (_g312 + 1);
HXDLIN( 654)									if ((key290 != -1)) {
HXLINE( 654)										action290->addKey(key290,state290);
            									}
            								}
            							}
HXDLIN( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action291 = this->_ui_downR;
HXDLIN( 654)								int state291 = -1;
HXDLIN( 654)								int _g313 = 0;
HXDLIN( 654)								while((_g313 < copyKeys10->length)){
HXLINE( 654)									int key291 = copyKeys10->__get(_g313);
HXDLIN( 654)									_g313 = (_g313 + 1);
HXDLIN( 654)									if ((key291 != -1)) {
HXLINE( 654)										action291->addKey(key291,state291);
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action292 = this->_note_up;
HXDLIN( 654)								int state292 = 1;
HXDLIN( 654)								int _g314 = 0;
HXDLIN( 654)								while((_g314 < copyKeys10->length)){
HXLINE( 654)									int key292 = copyKeys10->__get(_g314);
HXDLIN( 654)									_g314 = (_g314 + 1);
HXDLIN( 654)									if ((key292 != -1)) {
HXLINE( 654)										action292->addKey(key292,state292);
            									}
            								}
            							}
HXDLIN( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action293 = this->_note_upP;
HXDLIN( 654)								int state293 = 2;
HXDLIN( 654)								int _g315 = 0;
HXDLIN( 654)								while((_g315 < copyKeys10->length)){
HXLINE( 654)									int key293 = copyKeys10->__get(_g315);
HXDLIN( 654)									_g315 = (_g315 + 1);
HXDLIN( 654)									if ((key293 != -1)) {
HXLINE( 654)										action293->addKey(key293,state293);
            									}
            								}
            							}
HXDLIN( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action294 = this->_note_upR;
HXDLIN( 654)								int state294 = -1;
HXDLIN( 654)								int _g316 = 0;
HXDLIN( 654)								while((_g316 < copyKeys10->length)){
HXLINE( 654)									int key294 = copyKeys10->__get(_g316);
HXDLIN( 654)									_g316 = (_g316 + 1);
HXDLIN( 654)									if ((key294 != -1)) {
HXLINE( 654)										action294->addKey(key294,state294);
            									}
            								}
            							}
            						}
            						break;
            						case (int)5: {
HXLINE( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action295 = this->_note_left;
HXDLIN( 654)								int state295 = 1;
HXDLIN( 654)								int _g317 = 0;
HXDLIN( 654)								while((_g317 < copyKeys10->length)){
HXLINE( 654)									int key295 = copyKeys10->__get(_g317);
HXDLIN( 654)									_g317 = (_g317 + 1);
HXDLIN( 654)									if ((key295 != -1)) {
HXLINE( 654)										action295->addKey(key295,state295);
            									}
            								}
            							}
HXDLIN( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action296 = this->_note_leftP;
HXDLIN( 654)								int state296 = 2;
HXDLIN( 654)								int _g318 = 0;
HXDLIN( 654)								while((_g318 < copyKeys10->length)){
HXLINE( 654)									int key296 = copyKeys10->__get(_g318);
HXDLIN( 654)									_g318 = (_g318 + 1);
HXDLIN( 654)									if ((key296 != -1)) {
HXLINE( 654)										action296->addKey(key296,state296);
            									}
            								}
            							}
HXDLIN( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action297 = this->_note_leftR;
HXDLIN( 654)								int state297 = -1;
HXDLIN( 654)								int _g319 = 0;
HXDLIN( 654)								while((_g319 < copyKeys10->length)){
HXLINE( 654)									int key297 = copyKeys10->__get(_g319);
HXDLIN( 654)									_g319 = (_g319 + 1);
HXDLIN( 654)									if ((key297 != -1)) {
HXLINE( 654)										action297->addKey(key297,state297);
            									}
            								}
            							}
            						}
            						break;
            						case (int)6: {
HXLINE( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action298 = this->_note_right;
HXDLIN( 654)								int state298 = 1;
HXDLIN( 654)								int _g320 = 0;
HXDLIN( 654)								while((_g320 < copyKeys10->length)){
HXLINE( 654)									int key298 = copyKeys10->__get(_g320);
HXDLIN( 654)									_g320 = (_g320 + 1);
HXDLIN( 654)									if ((key298 != -1)) {
HXLINE( 654)										action298->addKey(key298,state298);
            									}
            								}
            							}
HXDLIN( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action299 = this->_note_rightP;
HXDLIN( 654)								int state299 = 2;
HXDLIN( 654)								int _g321 = 0;
HXDLIN( 654)								while((_g321 < copyKeys10->length)){
HXLINE( 654)									int key299 = copyKeys10->__get(_g321);
HXDLIN( 654)									_g321 = (_g321 + 1);
HXDLIN( 654)									if ((key299 != -1)) {
HXLINE( 654)										action299->addKey(key299,state299);
            									}
            								}
            							}
HXDLIN( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action300 = this->_note_rightR;
HXDLIN( 654)								int state300 = -1;
HXDLIN( 654)								int _g322 = 0;
HXDLIN( 654)								while((_g322 < copyKeys10->length)){
HXLINE( 654)									int key300 = copyKeys10->__get(_g322);
HXDLIN( 654)									_g322 = (_g322 + 1);
HXDLIN( 654)									if ((key300 != -1)) {
HXLINE( 654)										action300->addKey(key300,state300);
            									}
            								}
            							}
            						}
            						break;
            						case (int)7: {
HXLINE( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action301 = this->_note_down;
HXDLIN( 654)								int state301 = 1;
HXDLIN( 654)								int _g323 = 0;
HXDLIN( 654)								while((_g323 < copyKeys10->length)){
HXLINE( 654)									int key301 = copyKeys10->__get(_g323);
HXDLIN( 654)									_g323 = (_g323 + 1);
HXDLIN( 654)									if ((key301 != -1)) {
HXLINE( 654)										action301->addKey(key301,state301);
            									}
            								}
            							}
HXDLIN( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action302 = this->_note_downP;
HXDLIN( 654)								int state302 = 2;
HXDLIN( 654)								int _g324 = 0;
HXDLIN( 654)								while((_g324 < copyKeys10->length)){
HXLINE( 654)									int key302 = copyKeys10->__get(_g324);
HXDLIN( 654)									_g324 = (_g324 + 1);
HXDLIN( 654)									if ((key302 != -1)) {
HXLINE( 654)										action302->addKey(key302,state302);
            									}
            								}
            							}
HXDLIN( 654)							{
HXLINE( 654)								 ::flixel::input::actions::FlxActionDigital action303 = this->_note_downR;
HXDLIN( 654)								int state303 = -1;
HXDLIN( 654)								int _g325 = 0;
HXDLIN( 654)								while((_g325 < copyKeys10->length)){
HXLINE( 654)									int key303 = copyKeys10->__get(_g325);
HXDLIN( 654)									_g325 = (_g325 + 1);
HXDLIN( 654)									if ((key303 != -1)) {
HXLINE( 654)										action303->addKey(key303,state303);
            									}
            								}
            							}
            						}
            						break;
            						case (int)8: {
HXLINE( 654)							 ::flixel::input::actions::FlxActionDigital action304 = this->_reset;
HXDLIN( 654)							int state304 = 2;
HXDLIN( 654)							int _g326 = 0;
HXDLIN( 654)							while((_g326 < copyKeys10->length)){
HXLINE( 654)								int key304 = copyKeys10->__get(_g326);
HXDLIN( 654)								_g326 = (_g326 + 1);
HXDLIN( 654)								if ((key304 != -1)) {
HXLINE( 654)									action304->addKey(key304,state304);
            								}
            							}
            						}
            						break;
            						case (int)9: {
HXLINE( 654)							 ::flixel::input::actions::FlxActionDigital action305 = this->_accept;
HXDLIN( 654)							int state305 = 2;
HXDLIN( 654)							int _g327 = 0;
HXDLIN( 654)							while((_g327 < copyKeys10->length)){
HXLINE( 654)								int key305 = copyKeys10->__get(_g327);
HXDLIN( 654)								_g327 = (_g327 + 1);
HXDLIN( 654)								if ((key305 != -1)) {
HXLINE( 654)									action305->addKey(key305,state305);
            								}
            							}
            						}
            						break;
            						case (int)10: {
HXLINE( 654)							 ::flixel::input::actions::FlxActionDigital action306 = this->_back;
HXDLIN( 654)							int state306 = 2;
HXDLIN( 654)							int _g328 = 0;
HXDLIN( 654)							while((_g328 < copyKeys10->length)){
HXLINE( 654)								int key306 = copyKeys10->__get(_g328);
HXDLIN( 654)								_g328 = (_g328 + 1);
HXDLIN( 654)								if ((key306 != -1)) {
HXLINE( 654)									action306->addKey(key306,state306);
            								}
            							}
            						}
            						break;
            						case (int)11: {
HXLINE( 654)							 ::flixel::input::actions::FlxActionDigital action307 = this->_pause;
HXDLIN( 654)							int state307 = 2;
HXDLIN( 654)							int _g329 = 0;
HXDLIN( 654)							while((_g329 < copyKeys10->length)){
HXLINE( 654)								int key307 = copyKeys10->__get(_g329);
HXDLIN( 654)								_g329 = (_g329 + 1);
HXDLIN( 654)								if ((key307 != -1)) {
HXLINE( 654)									action307->addKey(key307,state307);
            								}
            							}
            						}
            						break;
            					}
            				}
HXLINE( 655)				{
HXLINE( 655)					::Array< int > copyKeys11 = ( (::Array< int >)(keysMap->get(HX_("reset",cf,49,c8,e6))) )->copy();
HXDLIN( 655)					{
HXLINE( 655)						int _g330 = 0;
HXDLIN( 655)						int _g331 = copyKeys11->length;
HXDLIN( 655)						while((_g330 < _g331)){
HXLINE( 655)							_g330 = (_g330 + 1);
HXDLIN( 655)							int i11 = (_g330 - 1);
HXDLIN( 655)							if ((i11 == -1)) {
HXLINE( 655)								copyKeys11->remove(i11);
            							}
            						}
            					}
HXDLIN( 655)					switch((int)(::Control_obj::RESET_dyn()->_hx_getIndex())){
            						case (int)0: {
HXLINE( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action308 = this->_ui_up;
HXDLIN( 655)								int state308 = 1;
HXDLIN( 655)								int _g332 = 0;
HXDLIN( 655)								while((_g332 < copyKeys11->length)){
HXLINE( 655)									int key308 = copyKeys11->__get(_g332);
HXDLIN( 655)									_g332 = (_g332 + 1);
HXDLIN( 655)									if ((key308 != -1)) {
HXLINE( 655)										action308->addKey(key308,state308);
            									}
            								}
            							}
HXDLIN( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action309 = this->_ui_upP;
HXDLIN( 655)								int state309 = 2;
HXDLIN( 655)								int _g333 = 0;
HXDLIN( 655)								while((_g333 < copyKeys11->length)){
HXLINE( 655)									int key309 = copyKeys11->__get(_g333);
HXDLIN( 655)									_g333 = (_g333 + 1);
HXDLIN( 655)									if ((key309 != -1)) {
HXLINE( 655)										action309->addKey(key309,state309);
            									}
            								}
            							}
HXDLIN( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action310 = this->_ui_upR;
HXDLIN( 655)								int state310 = -1;
HXDLIN( 655)								int _g334 = 0;
HXDLIN( 655)								while((_g334 < copyKeys11->length)){
HXLINE( 655)									int key310 = copyKeys11->__get(_g334);
HXDLIN( 655)									_g334 = (_g334 + 1);
HXDLIN( 655)									if ((key310 != -1)) {
HXLINE( 655)										action310->addKey(key310,state310);
            									}
            								}
            							}
            						}
            						break;
            						case (int)1: {
HXLINE( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action311 = this->_ui_left;
HXDLIN( 655)								int state311 = 1;
HXDLIN( 655)								int _g335 = 0;
HXDLIN( 655)								while((_g335 < copyKeys11->length)){
HXLINE( 655)									int key311 = copyKeys11->__get(_g335);
HXDLIN( 655)									_g335 = (_g335 + 1);
HXDLIN( 655)									if ((key311 != -1)) {
HXLINE( 655)										action311->addKey(key311,state311);
            									}
            								}
            							}
HXDLIN( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action312 = this->_ui_leftP;
HXDLIN( 655)								int state312 = 2;
HXDLIN( 655)								int _g336 = 0;
HXDLIN( 655)								while((_g336 < copyKeys11->length)){
HXLINE( 655)									int key312 = copyKeys11->__get(_g336);
HXDLIN( 655)									_g336 = (_g336 + 1);
HXDLIN( 655)									if ((key312 != -1)) {
HXLINE( 655)										action312->addKey(key312,state312);
            									}
            								}
            							}
HXDLIN( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action313 = this->_ui_leftR;
HXDLIN( 655)								int state313 = -1;
HXDLIN( 655)								int _g337 = 0;
HXDLIN( 655)								while((_g337 < copyKeys11->length)){
HXLINE( 655)									int key313 = copyKeys11->__get(_g337);
HXDLIN( 655)									_g337 = (_g337 + 1);
HXDLIN( 655)									if ((key313 != -1)) {
HXLINE( 655)										action313->addKey(key313,state313);
            									}
            								}
            							}
            						}
            						break;
            						case (int)2: {
HXLINE( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action314 = this->_ui_right;
HXDLIN( 655)								int state314 = 1;
HXDLIN( 655)								int _g338 = 0;
HXDLIN( 655)								while((_g338 < copyKeys11->length)){
HXLINE( 655)									int key314 = copyKeys11->__get(_g338);
HXDLIN( 655)									_g338 = (_g338 + 1);
HXDLIN( 655)									if ((key314 != -1)) {
HXLINE( 655)										action314->addKey(key314,state314);
            									}
            								}
            							}
HXDLIN( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action315 = this->_ui_rightP;
HXDLIN( 655)								int state315 = 2;
HXDLIN( 655)								int _g339 = 0;
HXDLIN( 655)								while((_g339 < copyKeys11->length)){
HXLINE( 655)									int key315 = copyKeys11->__get(_g339);
HXDLIN( 655)									_g339 = (_g339 + 1);
HXDLIN( 655)									if ((key315 != -1)) {
HXLINE( 655)										action315->addKey(key315,state315);
            									}
            								}
            							}
HXDLIN( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action316 = this->_ui_rightR;
HXDLIN( 655)								int state316 = -1;
HXDLIN( 655)								int _g340 = 0;
HXDLIN( 655)								while((_g340 < copyKeys11->length)){
HXLINE( 655)									int key316 = copyKeys11->__get(_g340);
HXDLIN( 655)									_g340 = (_g340 + 1);
HXDLIN( 655)									if ((key316 != -1)) {
HXLINE( 655)										action316->addKey(key316,state316);
            									}
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action317 = this->_ui_down;
HXDLIN( 655)								int state317 = 1;
HXDLIN( 655)								int _g341 = 0;
HXDLIN( 655)								while((_g341 < copyKeys11->length)){
HXLINE( 655)									int key317 = copyKeys11->__get(_g341);
HXDLIN( 655)									_g341 = (_g341 + 1);
HXDLIN( 655)									if ((key317 != -1)) {
HXLINE( 655)										action317->addKey(key317,state317);
            									}
            								}
            							}
HXDLIN( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action318 = this->_ui_downP;
HXDLIN( 655)								int state318 = 2;
HXDLIN( 655)								int _g342 = 0;
HXDLIN( 655)								while((_g342 < copyKeys11->length)){
HXLINE( 655)									int key318 = copyKeys11->__get(_g342);
HXDLIN( 655)									_g342 = (_g342 + 1);
HXDLIN( 655)									if ((key318 != -1)) {
HXLINE( 655)										action318->addKey(key318,state318);
            									}
            								}
            							}
HXDLIN( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action319 = this->_ui_downR;
HXDLIN( 655)								int state319 = -1;
HXDLIN( 655)								int _g343 = 0;
HXDLIN( 655)								while((_g343 < copyKeys11->length)){
HXLINE( 655)									int key319 = copyKeys11->__get(_g343);
HXDLIN( 655)									_g343 = (_g343 + 1);
HXDLIN( 655)									if ((key319 != -1)) {
HXLINE( 655)										action319->addKey(key319,state319);
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action320 = this->_note_up;
HXDLIN( 655)								int state320 = 1;
HXDLIN( 655)								int _g344 = 0;
HXDLIN( 655)								while((_g344 < copyKeys11->length)){
HXLINE( 655)									int key320 = copyKeys11->__get(_g344);
HXDLIN( 655)									_g344 = (_g344 + 1);
HXDLIN( 655)									if ((key320 != -1)) {
HXLINE( 655)										action320->addKey(key320,state320);
            									}
            								}
            							}
HXDLIN( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action321 = this->_note_upP;
HXDLIN( 655)								int state321 = 2;
HXDLIN( 655)								int _g345 = 0;
HXDLIN( 655)								while((_g345 < copyKeys11->length)){
HXLINE( 655)									int key321 = copyKeys11->__get(_g345);
HXDLIN( 655)									_g345 = (_g345 + 1);
HXDLIN( 655)									if ((key321 != -1)) {
HXLINE( 655)										action321->addKey(key321,state321);
            									}
            								}
            							}
HXDLIN( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action322 = this->_note_upR;
HXDLIN( 655)								int state322 = -1;
HXDLIN( 655)								int _g346 = 0;
HXDLIN( 655)								while((_g346 < copyKeys11->length)){
HXLINE( 655)									int key322 = copyKeys11->__get(_g346);
HXDLIN( 655)									_g346 = (_g346 + 1);
HXDLIN( 655)									if ((key322 != -1)) {
HXLINE( 655)										action322->addKey(key322,state322);
            									}
            								}
            							}
            						}
            						break;
            						case (int)5: {
HXLINE( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action323 = this->_note_left;
HXDLIN( 655)								int state323 = 1;
HXDLIN( 655)								int _g347 = 0;
HXDLIN( 655)								while((_g347 < copyKeys11->length)){
HXLINE( 655)									int key323 = copyKeys11->__get(_g347);
HXDLIN( 655)									_g347 = (_g347 + 1);
HXDLIN( 655)									if ((key323 != -1)) {
HXLINE( 655)										action323->addKey(key323,state323);
            									}
            								}
            							}
HXDLIN( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action324 = this->_note_leftP;
HXDLIN( 655)								int state324 = 2;
HXDLIN( 655)								int _g348 = 0;
HXDLIN( 655)								while((_g348 < copyKeys11->length)){
HXLINE( 655)									int key324 = copyKeys11->__get(_g348);
HXDLIN( 655)									_g348 = (_g348 + 1);
HXDLIN( 655)									if ((key324 != -1)) {
HXLINE( 655)										action324->addKey(key324,state324);
            									}
            								}
            							}
HXDLIN( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action325 = this->_note_leftR;
HXDLIN( 655)								int state325 = -1;
HXDLIN( 655)								int _g349 = 0;
HXDLIN( 655)								while((_g349 < copyKeys11->length)){
HXLINE( 655)									int key325 = copyKeys11->__get(_g349);
HXDLIN( 655)									_g349 = (_g349 + 1);
HXDLIN( 655)									if ((key325 != -1)) {
HXLINE( 655)										action325->addKey(key325,state325);
            									}
            								}
            							}
            						}
            						break;
            						case (int)6: {
HXLINE( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action326 = this->_note_right;
HXDLIN( 655)								int state326 = 1;
HXDLIN( 655)								int _g350 = 0;
HXDLIN( 655)								while((_g350 < copyKeys11->length)){
HXLINE( 655)									int key326 = copyKeys11->__get(_g350);
HXDLIN( 655)									_g350 = (_g350 + 1);
HXDLIN( 655)									if ((key326 != -1)) {
HXLINE( 655)										action326->addKey(key326,state326);
            									}
            								}
            							}
HXDLIN( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action327 = this->_note_rightP;
HXDLIN( 655)								int state327 = 2;
HXDLIN( 655)								int _g351 = 0;
HXDLIN( 655)								while((_g351 < copyKeys11->length)){
HXLINE( 655)									int key327 = copyKeys11->__get(_g351);
HXDLIN( 655)									_g351 = (_g351 + 1);
HXDLIN( 655)									if ((key327 != -1)) {
HXLINE( 655)										action327->addKey(key327,state327);
            									}
            								}
            							}
HXDLIN( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action328 = this->_note_rightR;
HXDLIN( 655)								int state328 = -1;
HXDLIN( 655)								int _g352 = 0;
HXDLIN( 655)								while((_g352 < copyKeys11->length)){
HXLINE( 655)									int key328 = copyKeys11->__get(_g352);
HXDLIN( 655)									_g352 = (_g352 + 1);
HXDLIN( 655)									if ((key328 != -1)) {
HXLINE( 655)										action328->addKey(key328,state328);
            									}
            								}
            							}
            						}
            						break;
            						case (int)7: {
HXLINE( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action329 = this->_note_down;
HXDLIN( 655)								int state329 = 1;
HXDLIN( 655)								int _g353 = 0;
HXDLIN( 655)								while((_g353 < copyKeys11->length)){
HXLINE( 655)									int key329 = copyKeys11->__get(_g353);
HXDLIN( 655)									_g353 = (_g353 + 1);
HXDLIN( 655)									if ((key329 != -1)) {
HXLINE( 655)										action329->addKey(key329,state329);
            									}
            								}
            							}
HXDLIN( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action330 = this->_note_downP;
HXDLIN( 655)								int state330 = 2;
HXDLIN( 655)								int _g354 = 0;
HXDLIN( 655)								while((_g354 < copyKeys11->length)){
HXLINE( 655)									int key330 = copyKeys11->__get(_g354);
HXDLIN( 655)									_g354 = (_g354 + 1);
HXDLIN( 655)									if ((key330 != -1)) {
HXLINE( 655)										action330->addKey(key330,state330);
            									}
            								}
            							}
HXDLIN( 655)							{
HXLINE( 655)								 ::flixel::input::actions::FlxActionDigital action331 = this->_note_downR;
HXDLIN( 655)								int state331 = -1;
HXDLIN( 655)								int _g355 = 0;
HXDLIN( 655)								while((_g355 < copyKeys11->length)){
HXLINE( 655)									int key331 = copyKeys11->__get(_g355);
HXDLIN( 655)									_g355 = (_g355 + 1);
HXDLIN( 655)									if ((key331 != -1)) {
HXLINE( 655)										action331->addKey(key331,state331);
            									}
            								}
            							}
            						}
            						break;
            						case (int)8: {
HXLINE( 655)							 ::flixel::input::actions::FlxActionDigital action332 = this->_reset;
HXDLIN( 655)							int state332 = 2;
HXDLIN( 655)							int _g356 = 0;
HXDLIN( 655)							while((_g356 < copyKeys11->length)){
HXLINE( 655)								int key332 = copyKeys11->__get(_g356);
HXDLIN( 655)								_g356 = (_g356 + 1);
HXDLIN( 655)								if ((key332 != -1)) {
HXLINE( 655)									action332->addKey(key332,state332);
            								}
            							}
            						}
            						break;
            						case (int)9: {
HXLINE( 655)							 ::flixel::input::actions::FlxActionDigital action333 = this->_accept;
HXDLIN( 655)							int state333 = 2;
HXDLIN( 655)							int _g357 = 0;
HXDLIN( 655)							while((_g357 < copyKeys11->length)){
HXLINE( 655)								int key333 = copyKeys11->__get(_g357);
HXDLIN( 655)								_g357 = (_g357 + 1);
HXDLIN( 655)								if ((key333 != -1)) {
HXLINE( 655)									action333->addKey(key333,state333);
            								}
            							}
            						}
            						break;
            						case (int)10: {
HXLINE( 655)							 ::flixel::input::actions::FlxActionDigital action334 = this->_back;
HXDLIN( 655)							int state334 = 2;
HXDLIN( 655)							int _g358 = 0;
HXDLIN( 655)							while((_g358 < copyKeys11->length)){
HXLINE( 655)								int key334 = copyKeys11->__get(_g358);
HXDLIN( 655)								_g358 = (_g358 + 1);
HXDLIN( 655)								if ((key334 != -1)) {
HXLINE( 655)									action334->addKey(key334,state334);
            								}
            							}
            						}
            						break;
            						case (int)11: {
HXLINE( 655)							 ::flixel::input::actions::FlxActionDigital action335 = this->_pause;
HXDLIN( 655)							int state335 = 2;
HXDLIN( 655)							int _g359 = 0;
HXDLIN( 655)							while((_g359 < copyKeys11->length)){
HXLINE( 655)								int key335 = copyKeys11->__get(_g359);
HXDLIN( 655)								_g359 = (_g359 + 1);
HXDLIN( 655)								if ((key335 != -1)) {
HXLINE( 655)									action335->addKey(key335,state335);
            								}
            							}
            						}
            						break;
            					}
            				}
            			}
            			break;
            			case (int)1: {
HXLINE( 669)				if (scheme->_hx_getBool(0)) {
HXLINE( 657)					{
HXLINE( 657)						::Array< int > copyKeys12 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1120,1)->copy();
HXDLIN( 657)						{
HXLINE( 657)							int _g360 = 0;
HXDLIN( 657)							int _g361 = copyKeys12->length;
HXDLIN( 657)							while((_g360 < _g361)){
HXLINE( 657)								_g360 = (_g360 + 1);
HXDLIN( 657)								int i12 = (_g360 - 1);
HXDLIN( 657)								if ((i12 == -1)) {
HXLINE( 657)									copyKeys12->remove(i12);
            								}
            							}
            						}
HXDLIN( 657)						switch((int)(::Control_obj::UI_UP_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action336 = this->_ui_up;
HXDLIN( 657)									int state336 = 1;
HXDLIN( 657)									int _g362 = 0;
HXDLIN( 657)									while((_g362 < copyKeys12->length)){
HXLINE( 657)										int key336 = copyKeys12->__get(_g362);
HXDLIN( 657)										_g362 = (_g362 + 1);
HXDLIN( 657)										if ((key336 != -1)) {
HXLINE( 657)											action336->addKey(key336,state336);
            										}
            									}
            								}
HXDLIN( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action337 = this->_ui_upP;
HXDLIN( 657)									int state337 = 2;
HXDLIN( 657)									int _g363 = 0;
HXDLIN( 657)									while((_g363 < copyKeys12->length)){
HXLINE( 657)										int key337 = copyKeys12->__get(_g363);
HXDLIN( 657)										_g363 = (_g363 + 1);
HXDLIN( 657)										if ((key337 != -1)) {
HXLINE( 657)											action337->addKey(key337,state337);
            										}
            									}
            								}
HXDLIN( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action338 = this->_ui_upR;
HXDLIN( 657)									int state338 = -1;
HXDLIN( 657)									int _g364 = 0;
HXDLIN( 657)									while((_g364 < copyKeys12->length)){
HXLINE( 657)										int key338 = copyKeys12->__get(_g364);
HXDLIN( 657)										_g364 = (_g364 + 1);
HXDLIN( 657)										if ((key338 != -1)) {
HXLINE( 657)											action338->addKey(key338,state338);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action339 = this->_ui_left;
HXDLIN( 657)									int state339 = 1;
HXDLIN( 657)									int _g365 = 0;
HXDLIN( 657)									while((_g365 < copyKeys12->length)){
HXLINE( 657)										int key339 = copyKeys12->__get(_g365);
HXDLIN( 657)										_g365 = (_g365 + 1);
HXDLIN( 657)										if ((key339 != -1)) {
HXLINE( 657)											action339->addKey(key339,state339);
            										}
            									}
            								}
HXDLIN( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action340 = this->_ui_leftP;
HXDLIN( 657)									int state340 = 2;
HXDLIN( 657)									int _g366 = 0;
HXDLIN( 657)									while((_g366 < copyKeys12->length)){
HXLINE( 657)										int key340 = copyKeys12->__get(_g366);
HXDLIN( 657)										_g366 = (_g366 + 1);
HXDLIN( 657)										if ((key340 != -1)) {
HXLINE( 657)											action340->addKey(key340,state340);
            										}
            									}
            								}
HXDLIN( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action341 = this->_ui_leftR;
HXDLIN( 657)									int state341 = -1;
HXDLIN( 657)									int _g367 = 0;
HXDLIN( 657)									while((_g367 < copyKeys12->length)){
HXLINE( 657)										int key341 = copyKeys12->__get(_g367);
HXDLIN( 657)										_g367 = (_g367 + 1);
HXDLIN( 657)										if ((key341 != -1)) {
HXLINE( 657)											action341->addKey(key341,state341);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action342 = this->_ui_right;
HXDLIN( 657)									int state342 = 1;
HXDLIN( 657)									int _g368 = 0;
HXDLIN( 657)									while((_g368 < copyKeys12->length)){
HXLINE( 657)										int key342 = copyKeys12->__get(_g368);
HXDLIN( 657)										_g368 = (_g368 + 1);
HXDLIN( 657)										if ((key342 != -1)) {
HXLINE( 657)											action342->addKey(key342,state342);
            										}
            									}
            								}
HXDLIN( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action343 = this->_ui_rightP;
HXDLIN( 657)									int state343 = 2;
HXDLIN( 657)									int _g369 = 0;
HXDLIN( 657)									while((_g369 < copyKeys12->length)){
HXLINE( 657)										int key343 = copyKeys12->__get(_g369);
HXDLIN( 657)										_g369 = (_g369 + 1);
HXDLIN( 657)										if ((key343 != -1)) {
HXLINE( 657)											action343->addKey(key343,state343);
            										}
            									}
            								}
HXDLIN( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action344 = this->_ui_rightR;
HXDLIN( 657)									int state344 = -1;
HXDLIN( 657)									int _g370 = 0;
HXDLIN( 657)									while((_g370 < copyKeys12->length)){
HXLINE( 657)										int key344 = copyKeys12->__get(_g370);
HXDLIN( 657)										_g370 = (_g370 + 1);
HXDLIN( 657)										if ((key344 != -1)) {
HXLINE( 657)											action344->addKey(key344,state344);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action345 = this->_ui_down;
HXDLIN( 657)									int state345 = 1;
HXDLIN( 657)									int _g371 = 0;
HXDLIN( 657)									while((_g371 < copyKeys12->length)){
HXLINE( 657)										int key345 = copyKeys12->__get(_g371);
HXDLIN( 657)										_g371 = (_g371 + 1);
HXDLIN( 657)										if ((key345 != -1)) {
HXLINE( 657)											action345->addKey(key345,state345);
            										}
            									}
            								}
HXDLIN( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action346 = this->_ui_downP;
HXDLIN( 657)									int state346 = 2;
HXDLIN( 657)									int _g372 = 0;
HXDLIN( 657)									while((_g372 < copyKeys12->length)){
HXLINE( 657)										int key346 = copyKeys12->__get(_g372);
HXDLIN( 657)										_g372 = (_g372 + 1);
HXDLIN( 657)										if ((key346 != -1)) {
HXLINE( 657)											action346->addKey(key346,state346);
            										}
            									}
            								}
HXDLIN( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action347 = this->_ui_downR;
HXDLIN( 657)									int state347 = -1;
HXDLIN( 657)									int _g373 = 0;
HXDLIN( 657)									while((_g373 < copyKeys12->length)){
HXLINE( 657)										int key347 = copyKeys12->__get(_g373);
HXDLIN( 657)										_g373 = (_g373 + 1);
HXDLIN( 657)										if ((key347 != -1)) {
HXLINE( 657)											action347->addKey(key347,state347);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action348 = this->_note_up;
HXDLIN( 657)									int state348 = 1;
HXDLIN( 657)									int _g374 = 0;
HXDLIN( 657)									while((_g374 < copyKeys12->length)){
HXLINE( 657)										int key348 = copyKeys12->__get(_g374);
HXDLIN( 657)										_g374 = (_g374 + 1);
HXDLIN( 657)										if ((key348 != -1)) {
HXLINE( 657)											action348->addKey(key348,state348);
            										}
            									}
            								}
HXDLIN( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action349 = this->_note_upP;
HXDLIN( 657)									int state349 = 2;
HXDLIN( 657)									int _g375 = 0;
HXDLIN( 657)									while((_g375 < copyKeys12->length)){
HXLINE( 657)										int key349 = copyKeys12->__get(_g375);
HXDLIN( 657)										_g375 = (_g375 + 1);
HXDLIN( 657)										if ((key349 != -1)) {
HXLINE( 657)											action349->addKey(key349,state349);
            										}
            									}
            								}
HXDLIN( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action350 = this->_note_upR;
HXDLIN( 657)									int state350 = -1;
HXDLIN( 657)									int _g376 = 0;
HXDLIN( 657)									while((_g376 < copyKeys12->length)){
HXLINE( 657)										int key350 = copyKeys12->__get(_g376);
HXDLIN( 657)										_g376 = (_g376 + 1);
HXDLIN( 657)										if ((key350 != -1)) {
HXLINE( 657)											action350->addKey(key350,state350);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action351 = this->_note_left;
HXDLIN( 657)									int state351 = 1;
HXDLIN( 657)									int _g377 = 0;
HXDLIN( 657)									while((_g377 < copyKeys12->length)){
HXLINE( 657)										int key351 = copyKeys12->__get(_g377);
HXDLIN( 657)										_g377 = (_g377 + 1);
HXDLIN( 657)										if ((key351 != -1)) {
HXLINE( 657)											action351->addKey(key351,state351);
            										}
            									}
            								}
HXDLIN( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action352 = this->_note_leftP;
HXDLIN( 657)									int state352 = 2;
HXDLIN( 657)									int _g378 = 0;
HXDLIN( 657)									while((_g378 < copyKeys12->length)){
HXLINE( 657)										int key352 = copyKeys12->__get(_g378);
HXDLIN( 657)										_g378 = (_g378 + 1);
HXDLIN( 657)										if ((key352 != -1)) {
HXLINE( 657)											action352->addKey(key352,state352);
            										}
            									}
            								}
HXDLIN( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action353 = this->_note_leftR;
HXDLIN( 657)									int state353 = -1;
HXDLIN( 657)									int _g379 = 0;
HXDLIN( 657)									while((_g379 < copyKeys12->length)){
HXLINE( 657)										int key353 = copyKeys12->__get(_g379);
HXDLIN( 657)										_g379 = (_g379 + 1);
HXDLIN( 657)										if ((key353 != -1)) {
HXLINE( 657)											action353->addKey(key353,state353);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action354 = this->_note_right;
HXDLIN( 657)									int state354 = 1;
HXDLIN( 657)									int _g380 = 0;
HXDLIN( 657)									while((_g380 < copyKeys12->length)){
HXLINE( 657)										int key354 = copyKeys12->__get(_g380);
HXDLIN( 657)										_g380 = (_g380 + 1);
HXDLIN( 657)										if ((key354 != -1)) {
HXLINE( 657)											action354->addKey(key354,state354);
            										}
            									}
            								}
HXDLIN( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action355 = this->_note_rightP;
HXDLIN( 657)									int state355 = 2;
HXDLIN( 657)									int _g381 = 0;
HXDLIN( 657)									while((_g381 < copyKeys12->length)){
HXLINE( 657)										int key355 = copyKeys12->__get(_g381);
HXDLIN( 657)										_g381 = (_g381 + 1);
HXDLIN( 657)										if ((key355 != -1)) {
HXLINE( 657)											action355->addKey(key355,state355);
            										}
            									}
            								}
HXDLIN( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action356 = this->_note_rightR;
HXDLIN( 657)									int state356 = -1;
HXDLIN( 657)									int _g382 = 0;
HXDLIN( 657)									while((_g382 < copyKeys12->length)){
HXLINE( 657)										int key356 = copyKeys12->__get(_g382);
HXDLIN( 657)										_g382 = (_g382 + 1);
HXDLIN( 657)										if ((key356 != -1)) {
HXLINE( 657)											action356->addKey(key356,state356);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action357 = this->_note_down;
HXDLIN( 657)									int state357 = 1;
HXDLIN( 657)									int _g383 = 0;
HXDLIN( 657)									while((_g383 < copyKeys12->length)){
HXLINE( 657)										int key357 = copyKeys12->__get(_g383);
HXDLIN( 657)										_g383 = (_g383 + 1);
HXDLIN( 657)										if ((key357 != -1)) {
HXLINE( 657)											action357->addKey(key357,state357);
            										}
            									}
            								}
HXDLIN( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action358 = this->_note_downP;
HXDLIN( 657)									int state358 = 2;
HXDLIN( 657)									int _g384 = 0;
HXDLIN( 657)									while((_g384 < copyKeys12->length)){
HXLINE( 657)										int key358 = copyKeys12->__get(_g384);
HXDLIN( 657)										_g384 = (_g384 + 1);
HXDLIN( 657)										if ((key358 != -1)) {
HXLINE( 657)											action358->addKey(key358,state358);
            										}
            									}
            								}
HXDLIN( 657)								{
HXLINE( 657)									 ::flixel::input::actions::FlxActionDigital action359 = this->_note_downR;
HXDLIN( 657)									int state359 = -1;
HXDLIN( 657)									int _g385 = 0;
HXDLIN( 657)									while((_g385 < copyKeys12->length)){
HXLINE( 657)										int key359 = copyKeys12->__get(_g385);
HXDLIN( 657)										_g385 = (_g385 + 1);
HXDLIN( 657)										if ((key359 != -1)) {
HXLINE( 657)											action359->addKey(key359,state359);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 657)								 ::flixel::input::actions::FlxActionDigital action360 = this->_reset;
HXDLIN( 657)								int state360 = 2;
HXDLIN( 657)								int _g386 = 0;
HXDLIN( 657)								while((_g386 < copyKeys12->length)){
HXLINE( 657)									int key360 = copyKeys12->__get(_g386);
HXDLIN( 657)									_g386 = (_g386 + 1);
HXDLIN( 657)									if ((key360 != -1)) {
HXLINE( 657)										action360->addKey(key360,state360);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 657)								 ::flixel::input::actions::FlxActionDigital action361 = this->_accept;
HXDLIN( 657)								int state361 = 2;
HXDLIN( 657)								int _g387 = 0;
HXDLIN( 657)								while((_g387 < copyKeys12->length)){
HXLINE( 657)									int key361 = copyKeys12->__get(_g387);
HXDLIN( 657)									_g387 = (_g387 + 1);
HXDLIN( 657)									if ((key361 != -1)) {
HXLINE( 657)										action361->addKey(key361,state361);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 657)								 ::flixel::input::actions::FlxActionDigital action362 = this->_back;
HXDLIN( 657)								int state362 = 2;
HXDLIN( 657)								int _g388 = 0;
HXDLIN( 657)								while((_g388 < copyKeys12->length)){
HXLINE( 657)									int key362 = copyKeys12->__get(_g388);
HXDLIN( 657)									_g388 = (_g388 + 1);
HXDLIN( 657)									if ((key362 != -1)) {
HXLINE( 657)										action362->addKey(key362,state362);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 657)								 ::flixel::input::actions::FlxActionDigital action363 = this->_pause;
HXDLIN( 657)								int state363 = 2;
HXDLIN( 657)								int _g389 = 0;
HXDLIN( 657)								while((_g389 < copyKeys12->length)){
HXLINE( 657)									int key363 = copyKeys12->__get(_g389);
HXDLIN( 657)									_g389 = (_g389 + 1);
HXDLIN( 657)									if ((key363 != -1)) {
HXLINE( 657)										action363->addKey(key363,state363);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 658)					{
HXLINE( 658)						::Array< int > copyKeys13 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1121,1)->copy();
HXDLIN( 658)						{
HXLINE( 658)							int _g390 = 0;
HXDLIN( 658)							int _g391 = copyKeys13->length;
HXDLIN( 658)							while((_g390 < _g391)){
HXLINE( 658)								_g390 = (_g390 + 1);
HXDLIN( 658)								int i13 = (_g390 - 1);
HXDLIN( 658)								if ((i13 == -1)) {
HXLINE( 658)									copyKeys13->remove(i13);
            								}
            							}
            						}
HXDLIN( 658)						switch((int)(::Control_obj::UI_DOWN_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action364 = this->_ui_up;
HXDLIN( 658)									int state364 = 1;
HXDLIN( 658)									int _g392 = 0;
HXDLIN( 658)									while((_g392 < copyKeys13->length)){
HXLINE( 658)										int key364 = copyKeys13->__get(_g392);
HXDLIN( 658)										_g392 = (_g392 + 1);
HXDLIN( 658)										if ((key364 != -1)) {
HXLINE( 658)											action364->addKey(key364,state364);
            										}
            									}
            								}
HXDLIN( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action365 = this->_ui_upP;
HXDLIN( 658)									int state365 = 2;
HXDLIN( 658)									int _g393 = 0;
HXDLIN( 658)									while((_g393 < copyKeys13->length)){
HXLINE( 658)										int key365 = copyKeys13->__get(_g393);
HXDLIN( 658)										_g393 = (_g393 + 1);
HXDLIN( 658)										if ((key365 != -1)) {
HXLINE( 658)											action365->addKey(key365,state365);
            										}
            									}
            								}
HXDLIN( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action366 = this->_ui_upR;
HXDLIN( 658)									int state366 = -1;
HXDLIN( 658)									int _g394 = 0;
HXDLIN( 658)									while((_g394 < copyKeys13->length)){
HXLINE( 658)										int key366 = copyKeys13->__get(_g394);
HXDLIN( 658)										_g394 = (_g394 + 1);
HXDLIN( 658)										if ((key366 != -1)) {
HXLINE( 658)											action366->addKey(key366,state366);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action367 = this->_ui_left;
HXDLIN( 658)									int state367 = 1;
HXDLIN( 658)									int _g395 = 0;
HXDLIN( 658)									while((_g395 < copyKeys13->length)){
HXLINE( 658)										int key367 = copyKeys13->__get(_g395);
HXDLIN( 658)										_g395 = (_g395 + 1);
HXDLIN( 658)										if ((key367 != -1)) {
HXLINE( 658)											action367->addKey(key367,state367);
            										}
            									}
            								}
HXDLIN( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action368 = this->_ui_leftP;
HXDLIN( 658)									int state368 = 2;
HXDLIN( 658)									int _g396 = 0;
HXDLIN( 658)									while((_g396 < copyKeys13->length)){
HXLINE( 658)										int key368 = copyKeys13->__get(_g396);
HXDLIN( 658)										_g396 = (_g396 + 1);
HXDLIN( 658)										if ((key368 != -1)) {
HXLINE( 658)											action368->addKey(key368,state368);
            										}
            									}
            								}
HXDLIN( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action369 = this->_ui_leftR;
HXDLIN( 658)									int state369 = -1;
HXDLIN( 658)									int _g397 = 0;
HXDLIN( 658)									while((_g397 < copyKeys13->length)){
HXLINE( 658)										int key369 = copyKeys13->__get(_g397);
HXDLIN( 658)										_g397 = (_g397 + 1);
HXDLIN( 658)										if ((key369 != -1)) {
HXLINE( 658)											action369->addKey(key369,state369);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action370 = this->_ui_right;
HXDLIN( 658)									int state370 = 1;
HXDLIN( 658)									int _g398 = 0;
HXDLIN( 658)									while((_g398 < copyKeys13->length)){
HXLINE( 658)										int key370 = copyKeys13->__get(_g398);
HXDLIN( 658)										_g398 = (_g398 + 1);
HXDLIN( 658)										if ((key370 != -1)) {
HXLINE( 658)											action370->addKey(key370,state370);
            										}
            									}
            								}
HXDLIN( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action371 = this->_ui_rightP;
HXDLIN( 658)									int state371 = 2;
HXDLIN( 658)									int _g399 = 0;
HXDLIN( 658)									while((_g399 < copyKeys13->length)){
HXLINE( 658)										int key371 = copyKeys13->__get(_g399);
HXDLIN( 658)										_g399 = (_g399 + 1);
HXDLIN( 658)										if ((key371 != -1)) {
HXLINE( 658)											action371->addKey(key371,state371);
            										}
            									}
            								}
HXDLIN( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action372 = this->_ui_rightR;
HXDLIN( 658)									int state372 = -1;
HXDLIN( 658)									int _g400 = 0;
HXDLIN( 658)									while((_g400 < copyKeys13->length)){
HXLINE( 658)										int key372 = copyKeys13->__get(_g400);
HXDLIN( 658)										_g400 = (_g400 + 1);
HXDLIN( 658)										if ((key372 != -1)) {
HXLINE( 658)											action372->addKey(key372,state372);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action373 = this->_ui_down;
HXDLIN( 658)									int state373 = 1;
HXDLIN( 658)									int _g401 = 0;
HXDLIN( 658)									while((_g401 < copyKeys13->length)){
HXLINE( 658)										int key373 = copyKeys13->__get(_g401);
HXDLIN( 658)										_g401 = (_g401 + 1);
HXDLIN( 658)										if ((key373 != -1)) {
HXLINE( 658)											action373->addKey(key373,state373);
            										}
            									}
            								}
HXDLIN( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action374 = this->_ui_downP;
HXDLIN( 658)									int state374 = 2;
HXDLIN( 658)									int _g402 = 0;
HXDLIN( 658)									while((_g402 < copyKeys13->length)){
HXLINE( 658)										int key374 = copyKeys13->__get(_g402);
HXDLIN( 658)										_g402 = (_g402 + 1);
HXDLIN( 658)										if ((key374 != -1)) {
HXLINE( 658)											action374->addKey(key374,state374);
            										}
            									}
            								}
HXDLIN( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action375 = this->_ui_downR;
HXDLIN( 658)									int state375 = -1;
HXDLIN( 658)									int _g403 = 0;
HXDLIN( 658)									while((_g403 < copyKeys13->length)){
HXLINE( 658)										int key375 = copyKeys13->__get(_g403);
HXDLIN( 658)										_g403 = (_g403 + 1);
HXDLIN( 658)										if ((key375 != -1)) {
HXLINE( 658)											action375->addKey(key375,state375);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action376 = this->_note_up;
HXDLIN( 658)									int state376 = 1;
HXDLIN( 658)									int _g404 = 0;
HXDLIN( 658)									while((_g404 < copyKeys13->length)){
HXLINE( 658)										int key376 = copyKeys13->__get(_g404);
HXDLIN( 658)										_g404 = (_g404 + 1);
HXDLIN( 658)										if ((key376 != -1)) {
HXLINE( 658)											action376->addKey(key376,state376);
            										}
            									}
            								}
HXDLIN( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action377 = this->_note_upP;
HXDLIN( 658)									int state377 = 2;
HXDLIN( 658)									int _g405 = 0;
HXDLIN( 658)									while((_g405 < copyKeys13->length)){
HXLINE( 658)										int key377 = copyKeys13->__get(_g405);
HXDLIN( 658)										_g405 = (_g405 + 1);
HXDLIN( 658)										if ((key377 != -1)) {
HXLINE( 658)											action377->addKey(key377,state377);
            										}
            									}
            								}
HXDLIN( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action378 = this->_note_upR;
HXDLIN( 658)									int state378 = -1;
HXDLIN( 658)									int _g406 = 0;
HXDLIN( 658)									while((_g406 < copyKeys13->length)){
HXLINE( 658)										int key378 = copyKeys13->__get(_g406);
HXDLIN( 658)										_g406 = (_g406 + 1);
HXDLIN( 658)										if ((key378 != -1)) {
HXLINE( 658)											action378->addKey(key378,state378);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action379 = this->_note_left;
HXDLIN( 658)									int state379 = 1;
HXDLIN( 658)									int _g407 = 0;
HXDLIN( 658)									while((_g407 < copyKeys13->length)){
HXLINE( 658)										int key379 = copyKeys13->__get(_g407);
HXDLIN( 658)										_g407 = (_g407 + 1);
HXDLIN( 658)										if ((key379 != -1)) {
HXLINE( 658)											action379->addKey(key379,state379);
            										}
            									}
            								}
HXDLIN( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action380 = this->_note_leftP;
HXDLIN( 658)									int state380 = 2;
HXDLIN( 658)									int _g408 = 0;
HXDLIN( 658)									while((_g408 < copyKeys13->length)){
HXLINE( 658)										int key380 = copyKeys13->__get(_g408);
HXDLIN( 658)										_g408 = (_g408 + 1);
HXDLIN( 658)										if ((key380 != -1)) {
HXLINE( 658)											action380->addKey(key380,state380);
            										}
            									}
            								}
HXDLIN( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action381 = this->_note_leftR;
HXDLIN( 658)									int state381 = -1;
HXDLIN( 658)									int _g409 = 0;
HXDLIN( 658)									while((_g409 < copyKeys13->length)){
HXLINE( 658)										int key381 = copyKeys13->__get(_g409);
HXDLIN( 658)										_g409 = (_g409 + 1);
HXDLIN( 658)										if ((key381 != -1)) {
HXLINE( 658)											action381->addKey(key381,state381);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action382 = this->_note_right;
HXDLIN( 658)									int state382 = 1;
HXDLIN( 658)									int _g410 = 0;
HXDLIN( 658)									while((_g410 < copyKeys13->length)){
HXLINE( 658)										int key382 = copyKeys13->__get(_g410);
HXDLIN( 658)										_g410 = (_g410 + 1);
HXDLIN( 658)										if ((key382 != -1)) {
HXLINE( 658)											action382->addKey(key382,state382);
            										}
            									}
            								}
HXDLIN( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action383 = this->_note_rightP;
HXDLIN( 658)									int state383 = 2;
HXDLIN( 658)									int _g411 = 0;
HXDLIN( 658)									while((_g411 < copyKeys13->length)){
HXLINE( 658)										int key383 = copyKeys13->__get(_g411);
HXDLIN( 658)										_g411 = (_g411 + 1);
HXDLIN( 658)										if ((key383 != -1)) {
HXLINE( 658)											action383->addKey(key383,state383);
            										}
            									}
            								}
HXDLIN( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action384 = this->_note_rightR;
HXDLIN( 658)									int state384 = -1;
HXDLIN( 658)									int _g412 = 0;
HXDLIN( 658)									while((_g412 < copyKeys13->length)){
HXLINE( 658)										int key384 = copyKeys13->__get(_g412);
HXDLIN( 658)										_g412 = (_g412 + 1);
HXDLIN( 658)										if ((key384 != -1)) {
HXLINE( 658)											action384->addKey(key384,state384);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action385 = this->_note_down;
HXDLIN( 658)									int state385 = 1;
HXDLIN( 658)									int _g413 = 0;
HXDLIN( 658)									while((_g413 < copyKeys13->length)){
HXLINE( 658)										int key385 = copyKeys13->__get(_g413);
HXDLIN( 658)										_g413 = (_g413 + 1);
HXDLIN( 658)										if ((key385 != -1)) {
HXLINE( 658)											action385->addKey(key385,state385);
            										}
            									}
            								}
HXDLIN( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action386 = this->_note_downP;
HXDLIN( 658)									int state386 = 2;
HXDLIN( 658)									int _g414 = 0;
HXDLIN( 658)									while((_g414 < copyKeys13->length)){
HXLINE( 658)										int key386 = copyKeys13->__get(_g414);
HXDLIN( 658)										_g414 = (_g414 + 1);
HXDLIN( 658)										if ((key386 != -1)) {
HXLINE( 658)											action386->addKey(key386,state386);
            										}
            									}
            								}
HXDLIN( 658)								{
HXLINE( 658)									 ::flixel::input::actions::FlxActionDigital action387 = this->_note_downR;
HXDLIN( 658)									int state387 = -1;
HXDLIN( 658)									int _g415 = 0;
HXDLIN( 658)									while((_g415 < copyKeys13->length)){
HXLINE( 658)										int key387 = copyKeys13->__get(_g415);
HXDLIN( 658)										_g415 = (_g415 + 1);
HXDLIN( 658)										if ((key387 != -1)) {
HXLINE( 658)											action387->addKey(key387,state387);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 658)								 ::flixel::input::actions::FlxActionDigital action388 = this->_reset;
HXDLIN( 658)								int state388 = 2;
HXDLIN( 658)								int _g416 = 0;
HXDLIN( 658)								while((_g416 < copyKeys13->length)){
HXLINE( 658)									int key388 = copyKeys13->__get(_g416);
HXDLIN( 658)									_g416 = (_g416 + 1);
HXDLIN( 658)									if ((key388 != -1)) {
HXLINE( 658)										action388->addKey(key388,state388);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 658)								 ::flixel::input::actions::FlxActionDigital action389 = this->_accept;
HXDLIN( 658)								int state389 = 2;
HXDLIN( 658)								int _g417 = 0;
HXDLIN( 658)								while((_g417 < copyKeys13->length)){
HXLINE( 658)									int key389 = copyKeys13->__get(_g417);
HXDLIN( 658)									_g417 = (_g417 + 1);
HXDLIN( 658)									if ((key389 != -1)) {
HXLINE( 658)										action389->addKey(key389,state389);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 658)								 ::flixel::input::actions::FlxActionDigital action390 = this->_back;
HXDLIN( 658)								int state390 = 2;
HXDLIN( 658)								int _g418 = 0;
HXDLIN( 658)								while((_g418 < copyKeys13->length)){
HXLINE( 658)									int key390 = copyKeys13->__get(_g418);
HXDLIN( 658)									_g418 = (_g418 + 1);
HXDLIN( 658)									if ((key390 != -1)) {
HXLINE( 658)										action390->addKey(key390,state390);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 658)								 ::flixel::input::actions::FlxActionDigital action391 = this->_pause;
HXDLIN( 658)								int state391 = 2;
HXDLIN( 658)								int _g419 = 0;
HXDLIN( 658)								while((_g419 < copyKeys13->length)){
HXLINE( 658)									int key391 = copyKeys13->__get(_g419);
HXDLIN( 658)									_g419 = (_g419 + 1);
HXDLIN( 658)									if ((key391 != -1)) {
HXLINE( 658)										action391->addKey(key391,state391);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 659)					{
HXLINE( 659)						::Array< int > copyKeys14 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1122,1)->copy();
HXDLIN( 659)						{
HXLINE( 659)							int _g420 = 0;
HXDLIN( 659)							int _g421 = copyKeys14->length;
HXDLIN( 659)							while((_g420 < _g421)){
HXLINE( 659)								_g420 = (_g420 + 1);
HXDLIN( 659)								int i14 = (_g420 - 1);
HXDLIN( 659)								if ((i14 == -1)) {
HXLINE( 659)									copyKeys14->remove(i14);
            								}
            							}
            						}
HXDLIN( 659)						switch((int)(::Control_obj::UI_LEFT_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action392 = this->_ui_up;
HXDLIN( 659)									int state392 = 1;
HXDLIN( 659)									int _g422 = 0;
HXDLIN( 659)									while((_g422 < copyKeys14->length)){
HXLINE( 659)										int key392 = copyKeys14->__get(_g422);
HXDLIN( 659)										_g422 = (_g422 + 1);
HXDLIN( 659)										if ((key392 != -1)) {
HXLINE( 659)											action392->addKey(key392,state392);
            										}
            									}
            								}
HXDLIN( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action393 = this->_ui_upP;
HXDLIN( 659)									int state393 = 2;
HXDLIN( 659)									int _g423 = 0;
HXDLIN( 659)									while((_g423 < copyKeys14->length)){
HXLINE( 659)										int key393 = copyKeys14->__get(_g423);
HXDLIN( 659)										_g423 = (_g423 + 1);
HXDLIN( 659)										if ((key393 != -1)) {
HXLINE( 659)											action393->addKey(key393,state393);
            										}
            									}
            								}
HXDLIN( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action394 = this->_ui_upR;
HXDLIN( 659)									int state394 = -1;
HXDLIN( 659)									int _g424 = 0;
HXDLIN( 659)									while((_g424 < copyKeys14->length)){
HXLINE( 659)										int key394 = copyKeys14->__get(_g424);
HXDLIN( 659)										_g424 = (_g424 + 1);
HXDLIN( 659)										if ((key394 != -1)) {
HXLINE( 659)											action394->addKey(key394,state394);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action395 = this->_ui_left;
HXDLIN( 659)									int state395 = 1;
HXDLIN( 659)									int _g425 = 0;
HXDLIN( 659)									while((_g425 < copyKeys14->length)){
HXLINE( 659)										int key395 = copyKeys14->__get(_g425);
HXDLIN( 659)										_g425 = (_g425 + 1);
HXDLIN( 659)										if ((key395 != -1)) {
HXLINE( 659)											action395->addKey(key395,state395);
            										}
            									}
            								}
HXDLIN( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action396 = this->_ui_leftP;
HXDLIN( 659)									int state396 = 2;
HXDLIN( 659)									int _g426 = 0;
HXDLIN( 659)									while((_g426 < copyKeys14->length)){
HXLINE( 659)										int key396 = copyKeys14->__get(_g426);
HXDLIN( 659)										_g426 = (_g426 + 1);
HXDLIN( 659)										if ((key396 != -1)) {
HXLINE( 659)											action396->addKey(key396,state396);
            										}
            									}
            								}
HXDLIN( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action397 = this->_ui_leftR;
HXDLIN( 659)									int state397 = -1;
HXDLIN( 659)									int _g427 = 0;
HXDLIN( 659)									while((_g427 < copyKeys14->length)){
HXLINE( 659)										int key397 = copyKeys14->__get(_g427);
HXDLIN( 659)										_g427 = (_g427 + 1);
HXDLIN( 659)										if ((key397 != -1)) {
HXLINE( 659)											action397->addKey(key397,state397);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action398 = this->_ui_right;
HXDLIN( 659)									int state398 = 1;
HXDLIN( 659)									int _g428 = 0;
HXDLIN( 659)									while((_g428 < copyKeys14->length)){
HXLINE( 659)										int key398 = copyKeys14->__get(_g428);
HXDLIN( 659)										_g428 = (_g428 + 1);
HXDLIN( 659)										if ((key398 != -1)) {
HXLINE( 659)											action398->addKey(key398,state398);
            										}
            									}
            								}
HXDLIN( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action399 = this->_ui_rightP;
HXDLIN( 659)									int state399 = 2;
HXDLIN( 659)									int _g429 = 0;
HXDLIN( 659)									while((_g429 < copyKeys14->length)){
HXLINE( 659)										int key399 = copyKeys14->__get(_g429);
HXDLIN( 659)										_g429 = (_g429 + 1);
HXDLIN( 659)										if ((key399 != -1)) {
HXLINE( 659)											action399->addKey(key399,state399);
            										}
            									}
            								}
HXDLIN( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action400 = this->_ui_rightR;
HXDLIN( 659)									int state400 = -1;
HXDLIN( 659)									int _g430 = 0;
HXDLIN( 659)									while((_g430 < copyKeys14->length)){
HXLINE( 659)										int key400 = copyKeys14->__get(_g430);
HXDLIN( 659)										_g430 = (_g430 + 1);
HXDLIN( 659)										if ((key400 != -1)) {
HXLINE( 659)											action400->addKey(key400,state400);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action401 = this->_ui_down;
HXDLIN( 659)									int state401 = 1;
HXDLIN( 659)									int _g431 = 0;
HXDLIN( 659)									while((_g431 < copyKeys14->length)){
HXLINE( 659)										int key401 = copyKeys14->__get(_g431);
HXDLIN( 659)										_g431 = (_g431 + 1);
HXDLIN( 659)										if ((key401 != -1)) {
HXLINE( 659)											action401->addKey(key401,state401);
            										}
            									}
            								}
HXDLIN( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action402 = this->_ui_downP;
HXDLIN( 659)									int state402 = 2;
HXDLIN( 659)									int _g432 = 0;
HXDLIN( 659)									while((_g432 < copyKeys14->length)){
HXLINE( 659)										int key402 = copyKeys14->__get(_g432);
HXDLIN( 659)										_g432 = (_g432 + 1);
HXDLIN( 659)										if ((key402 != -1)) {
HXLINE( 659)											action402->addKey(key402,state402);
            										}
            									}
            								}
HXDLIN( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action403 = this->_ui_downR;
HXDLIN( 659)									int state403 = -1;
HXDLIN( 659)									int _g433 = 0;
HXDLIN( 659)									while((_g433 < copyKeys14->length)){
HXLINE( 659)										int key403 = copyKeys14->__get(_g433);
HXDLIN( 659)										_g433 = (_g433 + 1);
HXDLIN( 659)										if ((key403 != -1)) {
HXLINE( 659)											action403->addKey(key403,state403);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action404 = this->_note_up;
HXDLIN( 659)									int state404 = 1;
HXDLIN( 659)									int _g434 = 0;
HXDLIN( 659)									while((_g434 < copyKeys14->length)){
HXLINE( 659)										int key404 = copyKeys14->__get(_g434);
HXDLIN( 659)										_g434 = (_g434 + 1);
HXDLIN( 659)										if ((key404 != -1)) {
HXLINE( 659)											action404->addKey(key404,state404);
            										}
            									}
            								}
HXDLIN( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action405 = this->_note_upP;
HXDLIN( 659)									int state405 = 2;
HXDLIN( 659)									int _g435 = 0;
HXDLIN( 659)									while((_g435 < copyKeys14->length)){
HXLINE( 659)										int key405 = copyKeys14->__get(_g435);
HXDLIN( 659)										_g435 = (_g435 + 1);
HXDLIN( 659)										if ((key405 != -1)) {
HXLINE( 659)											action405->addKey(key405,state405);
            										}
            									}
            								}
HXDLIN( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action406 = this->_note_upR;
HXDLIN( 659)									int state406 = -1;
HXDLIN( 659)									int _g436 = 0;
HXDLIN( 659)									while((_g436 < copyKeys14->length)){
HXLINE( 659)										int key406 = copyKeys14->__get(_g436);
HXDLIN( 659)										_g436 = (_g436 + 1);
HXDLIN( 659)										if ((key406 != -1)) {
HXLINE( 659)											action406->addKey(key406,state406);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action407 = this->_note_left;
HXDLIN( 659)									int state407 = 1;
HXDLIN( 659)									int _g437 = 0;
HXDLIN( 659)									while((_g437 < copyKeys14->length)){
HXLINE( 659)										int key407 = copyKeys14->__get(_g437);
HXDLIN( 659)										_g437 = (_g437 + 1);
HXDLIN( 659)										if ((key407 != -1)) {
HXLINE( 659)											action407->addKey(key407,state407);
            										}
            									}
            								}
HXDLIN( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action408 = this->_note_leftP;
HXDLIN( 659)									int state408 = 2;
HXDLIN( 659)									int _g438 = 0;
HXDLIN( 659)									while((_g438 < copyKeys14->length)){
HXLINE( 659)										int key408 = copyKeys14->__get(_g438);
HXDLIN( 659)										_g438 = (_g438 + 1);
HXDLIN( 659)										if ((key408 != -1)) {
HXLINE( 659)											action408->addKey(key408,state408);
            										}
            									}
            								}
HXDLIN( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action409 = this->_note_leftR;
HXDLIN( 659)									int state409 = -1;
HXDLIN( 659)									int _g439 = 0;
HXDLIN( 659)									while((_g439 < copyKeys14->length)){
HXLINE( 659)										int key409 = copyKeys14->__get(_g439);
HXDLIN( 659)										_g439 = (_g439 + 1);
HXDLIN( 659)										if ((key409 != -1)) {
HXLINE( 659)											action409->addKey(key409,state409);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action410 = this->_note_right;
HXDLIN( 659)									int state410 = 1;
HXDLIN( 659)									int _g440 = 0;
HXDLIN( 659)									while((_g440 < copyKeys14->length)){
HXLINE( 659)										int key410 = copyKeys14->__get(_g440);
HXDLIN( 659)										_g440 = (_g440 + 1);
HXDLIN( 659)										if ((key410 != -1)) {
HXLINE( 659)											action410->addKey(key410,state410);
            										}
            									}
            								}
HXDLIN( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action411 = this->_note_rightP;
HXDLIN( 659)									int state411 = 2;
HXDLIN( 659)									int _g441 = 0;
HXDLIN( 659)									while((_g441 < copyKeys14->length)){
HXLINE( 659)										int key411 = copyKeys14->__get(_g441);
HXDLIN( 659)										_g441 = (_g441 + 1);
HXDLIN( 659)										if ((key411 != -1)) {
HXLINE( 659)											action411->addKey(key411,state411);
            										}
            									}
            								}
HXDLIN( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action412 = this->_note_rightR;
HXDLIN( 659)									int state412 = -1;
HXDLIN( 659)									int _g442 = 0;
HXDLIN( 659)									while((_g442 < copyKeys14->length)){
HXLINE( 659)										int key412 = copyKeys14->__get(_g442);
HXDLIN( 659)										_g442 = (_g442 + 1);
HXDLIN( 659)										if ((key412 != -1)) {
HXLINE( 659)											action412->addKey(key412,state412);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action413 = this->_note_down;
HXDLIN( 659)									int state413 = 1;
HXDLIN( 659)									int _g443 = 0;
HXDLIN( 659)									while((_g443 < copyKeys14->length)){
HXLINE( 659)										int key413 = copyKeys14->__get(_g443);
HXDLIN( 659)										_g443 = (_g443 + 1);
HXDLIN( 659)										if ((key413 != -1)) {
HXLINE( 659)											action413->addKey(key413,state413);
            										}
            									}
            								}
HXDLIN( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action414 = this->_note_downP;
HXDLIN( 659)									int state414 = 2;
HXDLIN( 659)									int _g444 = 0;
HXDLIN( 659)									while((_g444 < copyKeys14->length)){
HXLINE( 659)										int key414 = copyKeys14->__get(_g444);
HXDLIN( 659)										_g444 = (_g444 + 1);
HXDLIN( 659)										if ((key414 != -1)) {
HXLINE( 659)											action414->addKey(key414,state414);
            										}
            									}
            								}
HXDLIN( 659)								{
HXLINE( 659)									 ::flixel::input::actions::FlxActionDigital action415 = this->_note_downR;
HXDLIN( 659)									int state415 = -1;
HXDLIN( 659)									int _g445 = 0;
HXDLIN( 659)									while((_g445 < copyKeys14->length)){
HXLINE( 659)										int key415 = copyKeys14->__get(_g445);
HXDLIN( 659)										_g445 = (_g445 + 1);
HXDLIN( 659)										if ((key415 != -1)) {
HXLINE( 659)											action415->addKey(key415,state415);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 659)								 ::flixel::input::actions::FlxActionDigital action416 = this->_reset;
HXDLIN( 659)								int state416 = 2;
HXDLIN( 659)								int _g446 = 0;
HXDLIN( 659)								while((_g446 < copyKeys14->length)){
HXLINE( 659)									int key416 = copyKeys14->__get(_g446);
HXDLIN( 659)									_g446 = (_g446 + 1);
HXDLIN( 659)									if ((key416 != -1)) {
HXLINE( 659)										action416->addKey(key416,state416);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 659)								 ::flixel::input::actions::FlxActionDigital action417 = this->_accept;
HXDLIN( 659)								int state417 = 2;
HXDLIN( 659)								int _g447 = 0;
HXDLIN( 659)								while((_g447 < copyKeys14->length)){
HXLINE( 659)									int key417 = copyKeys14->__get(_g447);
HXDLIN( 659)									_g447 = (_g447 + 1);
HXDLIN( 659)									if ((key417 != -1)) {
HXLINE( 659)										action417->addKey(key417,state417);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 659)								 ::flixel::input::actions::FlxActionDigital action418 = this->_back;
HXDLIN( 659)								int state418 = 2;
HXDLIN( 659)								int _g448 = 0;
HXDLIN( 659)								while((_g448 < copyKeys14->length)){
HXLINE( 659)									int key418 = copyKeys14->__get(_g448);
HXDLIN( 659)									_g448 = (_g448 + 1);
HXDLIN( 659)									if ((key418 != -1)) {
HXLINE( 659)										action418->addKey(key418,state418);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 659)								 ::flixel::input::actions::FlxActionDigital action419 = this->_pause;
HXDLIN( 659)								int state419 = 2;
HXDLIN( 659)								int _g449 = 0;
HXDLIN( 659)								while((_g449 < copyKeys14->length)){
HXLINE( 659)									int key419 = copyKeys14->__get(_g449);
HXDLIN( 659)									_g449 = (_g449 + 1);
HXDLIN( 659)									if ((key419 != -1)) {
HXLINE( 659)										action419->addKey(key419,state419);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 660)					{
HXLINE( 660)						::Array< int > copyKeys15 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1123,1)->copy();
HXDLIN( 660)						{
HXLINE( 660)							int _g450 = 0;
HXDLIN( 660)							int _g451 = copyKeys15->length;
HXDLIN( 660)							while((_g450 < _g451)){
HXLINE( 660)								_g450 = (_g450 + 1);
HXDLIN( 660)								int i15 = (_g450 - 1);
HXDLIN( 660)								if ((i15 == -1)) {
HXLINE( 660)									copyKeys15->remove(i15);
            								}
            							}
            						}
HXDLIN( 660)						switch((int)(::Control_obj::UI_RIGHT_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action420 = this->_ui_up;
HXDLIN( 660)									int state420 = 1;
HXDLIN( 660)									int _g452 = 0;
HXDLIN( 660)									while((_g452 < copyKeys15->length)){
HXLINE( 660)										int key420 = copyKeys15->__get(_g452);
HXDLIN( 660)										_g452 = (_g452 + 1);
HXDLIN( 660)										if ((key420 != -1)) {
HXLINE( 660)											action420->addKey(key420,state420);
            										}
            									}
            								}
HXDLIN( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action421 = this->_ui_upP;
HXDLIN( 660)									int state421 = 2;
HXDLIN( 660)									int _g453 = 0;
HXDLIN( 660)									while((_g453 < copyKeys15->length)){
HXLINE( 660)										int key421 = copyKeys15->__get(_g453);
HXDLIN( 660)										_g453 = (_g453 + 1);
HXDLIN( 660)										if ((key421 != -1)) {
HXLINE( 660)											action421->addKey(key421,state421);
            										}
            									}
            								}
HXDLIN( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action422 = this->_ui_upR;
HXDLIN( 660)									int state422 = -1;
HXDLIN( 660)									int _g454 = 0;
HXDLIN( 660)									while((_g454 < copyKeys15->length)){
HXLINE( 660)										int key422 = copyKeys15->__get(_g454);
HXDLIN( 660)										_g454 = (_g454 + 1);
HXDLIN( 660)										if ((key422 != -1)) {
HXLINE( 660)											action422->addKey(key422,state422);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action423 = this->_ui_left;
HXDLIN( 660)									int state423 = 1;
HXDLIN( 660)									int _g455 = 0;
HXDLIN( 660)									while((_g455 < copyKeys15->length)){
HXLINE( 660)										int key423 = copyKeys15->__get(_g455);
HXDLIN( 660)										_g455 = (_g455 + 1);
HXDLIN( 660)										if ((key423 != -1)) {
HXLINE( 660)											action423->addKey(key423,state423);
            										}
            									}
            								}
HXDLIN( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action424 = this->_ui_leftP;
HXDLIN( 660)									int state424 = 2;
HXDLIN( 660)									int _g456 = 0;
HXDLIN( 660)									while((_g456 < copyKeys15->length)){
HXLINE( 660)										int key424 = copyKeys15->__get(_g456);
HXDLIN( 660)										_g456 = (_g456 + 1);
HXDLIN( 660)										if ((key424 != -1)) {
HXLINE( 660)											action424->addKey(key424,state424);
            										}
            									}
            								}
HXDLIN( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action425 = this->_ui_leftR;
HXDLIN( 660)									int state425 = -1;
HXDLIN( 660)									int _g457 = 0;
HXDLIN( 660)									while((_g457 < copyKeys15->length)){
HXLINE( 660)										int key425 = copyKeys15->__get(_g457);
HXDLIN( 660)										_g457 = (_g457 + 1);
HXDLIN( 660)										if ((key425 != -1)) {
HXLINE( 660)											action425->addKey(key425,state425);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action426 = this->_ui_right;
HXDLIN( 660)									int state426 = 1;
HXDLIN( 660)									int _g458 = 0;
HXDLIN( 660)									while((_g458 < copyKeys15->length)){
HXLINE( 660)										int key426 = copyKeys15->__get(_g458);
HXDLIN( 660)										_g458 = (_g458 + 1);
HXDLIN( 660)										if ((key426 != -1)) {
HXLINE( 660)											action426->addKey(key426,state426);
            										}
            									}
            								}
HXDLIN( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action427 = this->_ui_rightP;
HXDLIN( 660)									int state427 = 2;
HXDLIN( 660)									int _g459 = 0;
HXDLIN( 660)									while((_g459 < copyKeys15->length)){
HXLINE( 660)										int key427 = copyKeys15->__get(_g459);
HXDLIN( 660)										_g459 = (_g459 + 1);
HXDLIN( 660)										if ((key427 != -1)) {
HXLINE( 660)											action427->addKey(key427,state427);
            										}
            									}
            								}
HXDLIN( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action428 = this->_ui_rightR;
HXDLIN( 660)									int state428 = -1;
HXDLIN( 660)									int _g460 = 0;
HXDLIN( 660)									while((_g460 < copyKeys15->length)){
HXLINE( 660)										int key428 = copyKeys15->__get(_g460);
HXDLIN( 660)										_g460 = (_g460 + 1);
HXDLIN( 660)										if ((key428 != -1)) {
HXLINE( 660)											action428->addKey(key428,state428);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action429 = this->_ui_down;
HXDLIN( 660)									int state429 = 1;
HXDLIN( 660)									int _g461 = 0;
HXDLIN( 660)									while((_g461 < copyKeys15->length)){
HXLINE( 660)										int key429 = copyKeys15->__get(_g461);
HXDLIN( 660)										_g461 = (_g461 + 1);
HXDLIN( 660)										if ((key429 != -1)) {
HXLINE( 660)											action429->addKey(key429,state429);
            										}
            									}
            								}
HXDLIN( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action430 = this->_ui_downP;
HXDLIN( 660)									int state430 = 2;
HXDLIN( 660)									int _g462 = 0;
HXDLIN( 660)									while((_g462 < copyKeys15->length)){
HXLINE( 660)										int key430 = copyKeys15->__get(_g462);
HXDLIN( 660)										_g462 = (_g462 + 1);
HXDLIN( 660)										if ((key430 != -1)) {
HXLINE( 660)											action430->addKey(key430,state430);
            										}
            									}
            								}
HXDLIN( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action431 = this->_ui_downR;
HXDLIN( 660)									int state431 = -1;
HXDLIN( 660)									int _g463 = 0;
HXDLIN( 660)									while((_g463 < copyKeys15->length)){
HXLINE( 660)										int key431 = copyKeys15->__get(_g463);
HXDLIN( 660)										_g463 = (_g463 + 1);
HXDLIN( 660)										if ((key431 != -1)) {
HXLINE( 660)											action431->addKey(key431,state431);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action432 = this->_note_up;
HXDLIN( 660)									int state432 = 1;
HXDLIN( 660)									int _g464 = 0;
HXDLIN( 660)									while((_g464 < copyKeys15->length)){
HXLINE( 660)										int key432 = copyKeys15->__get(_g464);
HXDLIN( 660)										_g464 = (_g464 + 1);
HXDLIN( 660)										if ((key432 != -1)) {
HXLINE( 660)											action432->addKey(key432,state432);
            										}
            									}
            								}
HXDLIN( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action433 = this->_note_upP;
HXDLIN( 660)									int state433 = 2;
HXDLIN( 660)									int _g465 = 0;
HXDLIN( 660)									while((_g465 < copyKeys15->length)){
HXLINE( 660)										int key433 = copyKeys15->__get(_g465);
HXDLIN( 660)										_g465 = (_g465 + 1);
HXDLIN( 660)										if ((key433 != -1)) {
HXLINE( 660)											action433->addKey(key433,state433);
            										}
            									}
            								}
HXDLIN( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action434 = this->_note_upR;
HXDLIN( 660)									int state434 = -1;
HXDLIN( 660)									int _g466 = 0;
HXDLIN( 660)									while((_g466 < copyKeys15->length)){
HXLINE( 660)										int key434 = copyKeys15->__get(_g466);
HXDLIN( 660)										_g466 = (_g466 + 1);
HXDLIN( 660)										if ((key434 != -1)) {
HXLINE( 660)											action434->addKey(key434,state434);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action435 = this->_note_left;
HXDLIN( 660)									int state435 = 1;
HXDLIN( 660)									int _g467 = 0;
HXDLIN( 660)									while((_g467 < copyKeys15->length)){
HXLINE( 660)										int key435 = copyKeys15->__get(_g467);
HXDLIN( 660)										_g467 = (_g467 + 1);
HXDLIN( 660)										if ((key435 != -1)) {
HXLINE( 660)											action435->addKey(key435,state435);
            										}
            									}
            								}
HXDLIN( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action436 = this->_note_leftP;
HXDLIN( 660)									int state436 = 2;
HXDLIN( 660)									int _g468 = 0;
HXDLIN( 660)									while((_g468 < copyKeys15->length)){
HXLINE( 660)										int key436 = copyKeys15->__get(_g468);
HXDLIN( 660)										_g468 = (_g468 + 1);
HXDLIN( 660)										if ((key436 != -1)) {
HXLINE( 660)											action436->addKey(key436,state436);
            										}
            									}
            								}
HXDLIN( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action437 = this->_note_leftR;
HXDLIN( 660)									int state437 = -1;
HXDLIN( 660)									int _g469 = 0;
HXDLIN( 660)									while((_g469 < copyKeys15->length)){
HXLINE( 660)										int key437 = copyKeys15->__get(_g469);
HXDLIN( 660)										_g469 = (_g469 + 1);
HXDLIN( 660)										if ((key437 != -1)) {
HXLINE( 660)											action437->addKey(key437,state437);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action438 = this->_note_right;
HXDLIN( 660)									int state438 = 1;
HXDLIN( 660)									int _g470 = 0;
HXDLIN( 660)									while((_g470 < copyKeys15->length)){
HXLINE( 660)										int key438 = copyKeys15->__get(_g470);
HXDLIN( 660)										_g470 = (_g470 + 1);
HXDLIN( 660)										if ((key438 != -1)) {
HXLINE( 660)											action438->addKey(key438,state438);
            										}
            									}
            								}
HXDLIN( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action439 = this->_note_rightP;
HXDLIN( 660)									int state439 = 2;
HXDLIN( 660)									int _g471 = 0;
HXDLIN( 660)									while((_g471 < copyKeys15->length)){
HXLINE( 660)										int key439 = copyKeys15->__get(_g471);
HXDLIN( 660)										_g471 = (_g471 + 1);
HXDLIN( 660)										if ((key439 != -1)) {
HXLINE( 660)											action439->addKey(key439,state439);
            										}
            									}
            								}
HXDLIN( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action440 = this->_note_rightR;
HXDLIN( 660)									int state440 = -1;
HXDLIN( 660)									int _g472 = 0;
HXDLIN( 660)									while((_g472 < copyKeys15->length)){
HXLINE( 660)										int key440 = copyKeys15->__get(_g472);
HXDLIN( 660)										_g472 = (_g472 + 1);
HXDLIN( 660)										if ((key440 != -1)) {
HXLINE( 660)											action440->addKey(key440,state440);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action441 = this->_note_down;
HXDLIN( 660)									int state441 = 1;
HXDLIN( 660)									int _g473 = 0;
HXDLIN( 660)									while((_g473 < copyKeys15->length)){
HXLINE( 660)										int key441 = copyKeys15->__get(_g473);
HXDLIN( 660)										_g473 = (_g473 + 1);
HXDLIN( 660)										if ((key441 != -1)) {
HXLINE( 660)											action441->addKey(key441,state441);
            										}
            									}
            								}
HXDLIN( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action442 = this->_note_downP;
HXDLIN( 660)									int state442 = 2;
HXDLIN( 660)									int _g474 = 0;
HXDLIN( 660)									while((_g474 < copyKeys15->length)){
HXLINE( 660)										int key442 = copyKeys15->__get(_g474);
HXDLIN( 660)										_g474 = (_g474 + 1);
HXDLIN( 660)										if ((key442 != -1)) {
HXLINE( 660)											action442->addKey(key442,state442);
            										}
            									}
            								}
HXDLIN( 660)								{
HXLINE( 660)									 ::flixel::input::actions::FlxActionDigital action443 = this->_note_downR;
HXDLIN( 660)									int state443 = -1;
HXDLIN( 660)									int _g475 = 0;
HXDLIN( 660)									while((_g475 < copyKeys15->length)){
HXLINE( 660)										int key443 = copyKeys15->__get(_g475);
HXDLIN( 660)										_g475 = (_g475 + 1);
HXDLIN( 660)										if ((key443 != -1)) {
HXLINE( 660)											action443->addKey(key443,state443);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 660)								 ::flixel::input::actions::FlxActionDigital action444 = this->_reset;
HXDLIN( 660)								int state444 = 2;
HXDLIN( 660)								int _g476 = 0;
HXDLIN( 660)								while((_g476 < copyKeys15->length)){
HXLINE( 660)									int key444 = copyKeys15->__get(_g476);
HXDLIN( 660)									_g476 = (_g476 + 1);
HXDLIN( 660)									if ((key444 != -1)) {
HXLINE( 660)										action444->addKey(key444,state444);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 660)								 ::flixel::input::actions::FlxActionDigital action445 = this->_accept;
HXDLIN( 660)								int state445 = 2;
HXDLIN( 660)								int _g477 = 0;
HXDLIN( 660)								while((_g477 < copyKeys15->length)){
HXLINE( 660)									int key445 = copyKeys15->__get(_g477);
HXDLIN( 660)									_g477 = (_g477 + 1);
HXDLIN( 660)									if ((key445 != -1)) {
HXLINE( 660)										action445->addKey(key445,state445);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 660)								 ::flixel::input::actions::FlxActionDigital action446 = this->_back;
HXDLIN( 660)								int state446 = 2;
HXDLIN( 660)								int _g478 = 0;
HXDLIN( 660)								while((_g478 < copyKeys15->length)){
HXLINE( 660)									int key446 = copyKeys15->__get(_g478);
HXDLIN( 660)									_g478 = (_g478 + 1);
HXDLIN( 660)									if ((key446 != -1)) {
HXLINE( 660)										action446->addKey(key446,state446);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 660)								 ::flixel::input::actions::FlxActionDigital action447 = this->_pause;
HXDLIN( 660)								int state447 = 2;
HXDLIN( 660)								int _g479 = 0;
HXDLIN( 660)								while((_g479 < copyKeys15->length)){
HXLINE( 660)									int key447 = copyKeys15->__get(_g479);
HXDLIN( 660)									_g479 = (_g479 + 1);
HXDLIN( 660)									if ((key447 != -1)) {
HXLINE( 660)										action447->addKey(key447,state447);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 661)					{
HXLINE( 661)						::Array< int > copyKeys16 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1124,1)->copy();
HXDLIN( 661)						{
HXLINE( 661)							int _g480 = 0;
HXDLIN( 661)							int _g481 = copyKeys16->length;
HXDLIN( 661)							while((_g480 < _g481)){
HXLINE( 661)								_g480 = (_g480 + 1);
HXDLIN( 661)								int i16 = (_g480 - 1);
HXDLIN( 661)								if ((i16 == -1)) {
HXLINE( 661)									copyKeys16->remove(i16);
            								}
            							}
            						}
HXDLIN( 661)						switch((int)(::Control_obj::NOTE_UP_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action448 = this->_ui_up;
HXDLIN( 661)									int state448 = 1;
HXDLIN( 661)									int _g482 = 0;
HXDLIN( 661)									while((_g482 < copyKeys16->length)){
HXLINE( 661)										int key448 = copyKeys16->__get(_g482);
HXDLIN( 661)										_g482 = (_g482 + 1);
HXDLIN( 661)										if ((key448 != -1)) {
HXLINE( 661)											action448->addKey(key448,state448);
            										}
            									}
            								}
HXDLIN( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action449 = this->_ui_upP;
HXDLIN( 661)									int state449 = 2;
HXDLIN( 661)									int _g483 = 0;
HXDLIN( 661)									while((_g483 < copyKeys16->length)){
HXLINE( 661)										int key449 = copyKeys16->__get(_g483);
HXDLIN( 661)										_g483 = (_g483 + 1);
HXDLIN( 661)										if ((key449 != -1)) {
HXLINE( 661)											action449->addKey(key449,state449);
            										}
            									}
            								}
HXDLIN( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action450 = this->_ui_upR;
HXDLIN( 661)									int state450 = -1;
HXDLIN( 661)									int _g484 = 0;
HXDLIN( 661)									while((_g484 < copyKeys16->length)){
HXLINE( 661)										int key450 = copyKeys16->__get(_g484);
HXDLIN( 661)										_g484 = (_g484 + 1);
HXDLIN( 661)										if ((key450 != -1)) {
HXLINE( 661)											action450->addKey(key450,state450);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action451 = this->_ui_left;
HXDLIN( 661)									int state451 = 1;
HXDLIN( 661)									int _g485 = 0;
HXDLIN( 661)									while((_g485 < copyKeys16->length)){
HXLINE( 661)										int key451 = copyKeys16->__get(_g485);
HXDLIN( 661)										_g485 = (_g485 + 1);
HXDLIN( 661)										if ((key451 != -1)) {
HXLINE( 661)											action451->addKey(key451,state451);
            										}
            									}
            								}
HXDLIN( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action452 = this->_ui_leftP;
HXDLIN( 661)									int state452 = 2;
HXDLIN( 661)									int _g486 = 0;
HXDLIN( 661)									while((_g486 < copyKeys16->length)){
HXLINE( 661)										int key452 = copyKeys16->__get(_g486);
HXDLIN( 661)										_g486 = (_g486 + 1);
HXDLIN( 661)										if ((key452 != -1)) {
HXLINE( 661)											action452->addKey(key452,state452);
            										}
            									}
            								}
HXDLIN( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action453 = this->_ui_leftR;
HXDLIN( 661)									int state453 = -1;
HXDLIN( 661)									int _g487 = 0;
HXDLIN( 661)									while((_g487 < copyKeys16->length)){
HXLINE( 661)										int key453 = copyKeys16->__get(_g487);
HXDLIN( 661)										_g487 = (_g487 + 1);
HXDLIN( 661)										if ((key453 != -1)) {
HXLINE( 661)											action453->addKey(key453,state453);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action454 = this->_ui_right;
HXDLIN( 661)									int state454 = 1;
HXDLIN( 661)									int _g488 = 0;
HXDLIN( 661)									while((_g488 < copyKeys16->length)){
HXLINE( 661)										int key454 = copyKeys16->__get(_g488);
HXDLIN( 661)										_g488 = (_g488 + 1);
HXDLIN( 661)										if ((key454 != -1)) {
HXLINE( 661)											action454->addKey(key454,state454);
            										}
            									}
            								}
HXDLIN( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action455 = this->_ui_rightP;
HXDLIN( 661)									int state455 = 2;
HXDLIN( 661)									int _g489 = 0;
HXDLIN( 661)									while((_g489 < copyKeys16->length)){
HXLINE( 661)										int key455 = copyKeys16->__get(_g489);
HXDLIN( 661)										_g489 = (_g489 + 1);
HXDLIN( 661)										if ((key455 != -1)) {
HXLINE( 661)											action455->addKey(key455,state455);
            										}
            									}
            								}
HXDLIN( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action456 = this->_ui_rightR;
HXDLIN( 661)									int state456 = -1;
HXDLIN( 661)									int _g490 = 0;
HXDLIN( 661)									while((_g490 < copyKeys16->length)){
HXLINE( 661)										int key456 = copyKeys16->__get(_g490);
HXDLIN( 661)										_g490 = (_g490 + 1);
HXDLIN( 661)										if ((key456 != -1)) {
HXLINE( 661)											action456->addKey(key456,state456);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action457 = this->_ui_down;
HXDLIN( 661)									int state457 = 1;
HXDLIN( 661)									int _g491 = 0;
HXDLIN( 661)									while((_g491 < copyKeys16->length)){
HXLINE( 661)										int key457 = copyKeys16->__get(_g491);
HXDLIN( 661)										_g491 = (_g491 + 1);
HXDLIN( 661)										if ((key457 != -1)) {
HXLINE( 661)											action457->addKey(key457,state457);
            										}
            									}
            								}
HXDLIN( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action458 = this->_ui_downP;
HXDLIN( 661)									int state458 = 2;
HXDLIN( 661)									int _g492 = 0;
HXDLIN( 661)									while((_g492 < copyKeys16->length)){
HXLINE( 661)										int key458 = copyKeys16->__get(_g492);
HXDLIN( 661)										_g492 = (_g492 + 1);
HXDLIN( 661)										if ((key458 != -1)) {
HXLINE( 661)											action458->addKey(key458,state458);
            										}
            									}
            								}
HXDLIN( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action459 = this->_ui_downR;
HXDLIN( 661)									int state459 = -1;
HXDLIN( 661)									int _g493 = 0;
HXDLIN( 661)									while((_g493 < copyKeys16->length)){
HXLINE( 661)										int key459 = copyKeys16->__get(_g493);
HXDLIN( 661)										_g493 = (_g493 + 1);
HXDLIN( 661)										if ((key459 != -1)) {
HXLINE( 661)											action459->addKey(key459,state459);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action460 = this->_note_up;
HXDLIN( 661)									int state460 = 1;
HXDLIN( 661)									int _g494 = 0;
HXDLIN( 661)									while((_g494 < copyKeys16->length)){
HXLINE( 661)										int key460 = copyKeys16->__get(_g494);
HXDLIN( 661)										_g494 = (_g494 + 1);
HXDLIN( 661)										if ((key460 != -1)) {
HXLINE( 661)											action460->addKey(key460,state460);
            										}
            									}
            								}
HXDLIN( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action461 = this->_note_upP;
HXDLIN( 661)									int state461 = 2;
HXDLIN( 661)									int _g495 = 0;
HXDLIN( 661)									while((_g495 < copyKeys16->length)){
HXLINE( 661)										int key461 = copyKeys16->__get(_g495);
HXDLIN( 661)										_g495 = (_g495 + 1);
HXDLIN( 661)										if ((key461 != -1)) {
HXLINE( 661)											action461->addKey(key461,state461);
            										}
            									}
            								}
HXDLIN( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action462 = this->_note_upR;
HXDLIN( 661)									int state462 = -1;
HXDLIN( 661)									int _g496 = 0;
HXDLIN( 661)									while((_g496 < copyKeys16->length)){
HXLINE( 661)										int key462 = copyKeys16->__get(_g496);
HXDLIN( 661)										_g496 = (_g496 + 1);
HXDLIN( 661)										if ((key462 != -1)) {
HXLINE( 661)											action462->addKey(key462,state462);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action463 = this->_note_left;
HXDLIN( 661)									int state463 = 1;
HXDLIN( 661)									int _g497 = 0;
HXDLIN( 661)									while((_g497 < copyKeys16->length)){
HXLINE( 661)										int key463 = copyKeys16->__get(_g497);
HXDLIN( 661)										_g497 = (_g497 + 1);
HXDLIN( 661)										if ((key463 != -1)) {
HXLINE( 661)											action463->addKey(key463,state463);
            										}
            									}
            								}
HXDLIN( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action464 = this->_note_leftP;
HXDLIN( 661)									int state464 = 2;
HXDLIN( 661)									int _g498 = 0;
HXDLIN( 661)									while((_g498 < copyKeys16->length)){
HXLINE( 661)										int key464 = copyKeys16->__get(_g498);
HXDLIN( 661)										_g498 = (_g498 + 1);
HXDLIN( 661)										if ((key464 != -1)) {
HXLINE( 661)											action464->addKey(key464,state464);
            										}
            									}
            								}
HXDLIN( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action465 = this->_note_leftR;
HXDLIN( 661)									int state465 = -1;
HXDLIN( 661)									int _g499 = 0;
HXDLIN( 661)									while((_g499 < copyKeys16->length)){
HXLINE( 661)										int key465 = copyKeys16->__get(_g499);
HXDLIN( 661)										_g499 = (_g499 + 1);
HXDLIN( 661)										if ((key465 != -1)) {
HXLINE( 661)											action465->addKey(key465,state465);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action466 = this->_note_right;
HXDLIN( 661)									int state466 = 1;
HXDLIN( 661)									int _g500 = 0;
HXDLIN( 661)									while((_g500 < copyKeys16->length)){
HXLINE( 661)										int key466 = copyKeys16->__get(_g500);
HXDLIN( 661)										_g500 = (_g500 + 1);
HXDLIN( 661)										if ((key466 != -1)) {
HXLINE( 661)											action466->addKey(key466,state466);
            										}
            									}
            								}
HXDLIN( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action467 = this->_note_rightP;
HXDLIN( 661)									int state467 = 2;
HXDLIN( 661)									int _g501 = 0;
HXDLIN( 661)									while((_g501 < copyKeys16->length)){
HXLINE( 661)										int key467 = copyKeys16->__get(_g501);
HXDLIN( 661)										_g501 = (_g501 + 1);
HXDLIN( 661)										if ((key467 != -1)) {
HXLINE( 661)											action467->addKey(key467,state467);
            										}
            									}
            								}
HXDLIN( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action468 = this->_note_rightR;
HXDLIN( 661)									int state468 = -1;
HXDLIN( 661)									int _g502 = 0;
HXDLIN( 661)									while((_g502 < copyKeys16->length)){
HXLINE( 661)										int key468 = copyKeys16->__get(_g502);
HXDLIN( 661)										_g502 = (_g502 + 1);
HXDLIN( 661)										if ((key468 != -1)) {
HXLINE( 661)											action468->addKey(key468,state468);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action469 = this->_note_down;
HXDLIN( 661)									int state469 = 1;
HXDLIN( 661)									int _g503 = 0;
HXDLIN( 661)									while((_g503 < copyKeys16->length)){
HXLINE( 661)										int key469 = copyKeys16->__get(_g503);
HXDLIN( 661)										_g503 = (_g503 + 1);
HXDLIN( 661)										if ((key469 != -1)) {
HXLINE( 661)											action469->addKey(key469,state469);
            										}
            									}
            								}
HXDLIN( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action470 = this->_note_downP;
HXDLIN( 661)									int state470 = 2;
HXDLIN( 661)									int _g504 = 0;
HXDLIN( 661)									while((_g504 < copyKeys16->length)){
HXLINE( 661)										int key470 = copyKeys16->__get(_g504);
HXDLIN( 661)										_g504 = (_g504 + 1);
HXDLIN( 661)										if ((key470 != -1)) {
HXLINE( 661)											action470->addKey(key470,state470);
            										}
            									}
            								}
HXDLIN( 661)								{
HXLINE( 661)									 ::flixel::input::actions::FlxActionDigital action471 = this->_note_downR;
HXDLIN( 661)									int state471 = -1;
HXDLIN( 661)									int _g505 = 0;
HXDLIN( 661)									while((_g505 < copyKeys16->length)){
HXLINE( 661)										int key471 = copyKeys16->__get(_g505);
HXDLIN( 661)										_g505 = (_g505 + 1);
HXDLIN( 661)										if ((key471 != -1)) {
HXLINE( 661)											action471->addKey(key471,state471);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 661)								 ::flixel::input::actions::FlxActionDigital action472 = this->_reset;
HXDLIN( 661)								int state472 = 2;
HXDLIN( 661)								int _g506 = 0;
HXDLIN( 661)								while((_g506 < copyKeys16->length)){
HXLINE( 661)									int key472 = copyKeys16->__get(_g506);
HXDLIN( 661)									_g506 = (_g506 + 1);
HXDLIN( 661)									if ((key472 != -1)) {
HXLINE( 661)										action472->addKey(key472,state472);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 661)								 ::flixel::input::actions::FlxActionDigital action473 = this->_accept;
HXDLIN( 661)								int state473 = 2;
HXDLIN( 661)								int _g507 = 0;
HXDLIN( 661)								while((_g507 < copyKeys16->length)){
HXLINE( 661)									int key473 = copyKeys16->__get(_g507);
HXDLIN( 661)									_g507 = (_g507 + 1);
HXDLIN( 661)									if ((key473 != -1)) {
HXLINE( 661)										action473->addKey(key473,state473);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 661)								 ::flixel::input::actions::FlxActionDigital action474 = this->_back;
HXDLIN( 661)								int state474 = 2;
HXDLIN( 661)								int _g508 = 0;
HXDLIN( 661)								while((_g508 < copyKeys16->length)){
HXLINE( 661)									int key474 = copyKeys16->__get(_g508);
HXDLIN( 661)									_g508 = (_g508 + 1);
HXDLIN( 661)									if ((key474 != -1)) {
HXLINE( 661)										action474->addKey(key474,state474);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 661)								 ::flixel::input::actions::FlxActionDigital action475 = this->_pause;
HXDLIN( 661)								int state475 = 2;
HXDLIN( 661)								int _g509 = 0;
HXDLIN( 661)								while((_g509 < copyKeys16->length)){
HXLINE( 661)									int key475 = copyKeys16->__get(_g509);
HXDLIN( 661)									_g509 = (_g509 + 1);
HXDLIN( 661)									if ((key475 != -1)) {
HXLINE( 661)										action475->addKey(key475,state475);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 662)					{
HXLINE( 662)						::Array< int > copyKeys17 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1125,1)->copy();
HXDLIN( 662)						{
HXLINE( 662)							int _g510 = 0;
HXDLIN( 662)							int _g511 = copyKeys17->length;
HXDLIN( 662)							while((_g510 < _g511)){
HXLINE( 662)								_g510 = (_g510 + 1);
HXDLIN( 662)								int i17 = (_g510 - 1);
HXDLIN( 662)								if ((i17 == -1)) {
HXLINE( 662)									copyKeys17->remove(i17);
            								}
            							}
            						}
HXDLIN( 662)						switch((int)(::Control_obj::NOTE_DOWN_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action476 = this->_ui_up;
HXDLIN( 662)									int state476 = 1;
HXDLIN( 662)									int _g512 = 0;
HXDLIN( 662)									while((_g512 < copyKeys17->length)){
HXLINE( 662)										int key476 = copyKeys17->__get(_g512);
HXDLIN( 662)										_g512 = (_g512 + 1);
HXDLIN( 662)										if ((key476 != -1)) {
HXLINE( 662)											action476->addKey(key476,state476);
            										}
            									}
            								}
HXDLIN( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action477 = this->_ui_upP;
HXDLIN( 662)									int state477 = 2;
HXDLIN( 662)									int _g513 = 0;
HXDLIN( 662)									while((_g513 < copyKeys17->length)){
HXLINE( 662)										int key477 = copyKeys17->__get(_g513);
HXDLIN( 662)										_g513 = (_g513 + 1);
HXDLIN( 662)										if ((key477 != -1)) {
HXLINE( 662)											action477->addKey(key477,state477);
            										}
            									}
            								}
HXDLIN( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action478 = this->_ui_upR;
HXDLIN( 662)									int state478 = -1;
HXDLIN( 662)									int _g514 = 0;
HXDLIN( 662)									while((_g514 < copyKeys17->length)){
HXLINE( 662)										int key478 = copyKeys17->__get(_g514);
HXDLIN( 662)										_g514 = (_g514 + 1);
HXDLIN( 662)										if ((key478 != -1)) {
HXLINE( 662)											action478->addKey(key478,state478);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action479 = this->_ui_left;
HXDLIN( 662)									int state479 = 1;
HXDLIN( 662)									int _g515 = 0;
HXDLIN( 662)									while((_g515 < copyKeys17->length)){
HXLINE( 662)										int key479 = copyKeys17->__get(_g515);
HXDLIN( 662)										_g515 = (_g515 + 1);
HXDLIN( 662)										if ((key479 != -1)) {
HXLINE( 662)											action479->addKey(key479,state479);
            										}
            									}
            								}
HXDLIN( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action480 = this->_ui_leftP;
HXDLIN( 662)									int state480 = 2;
HXDLIN( 662)									int _g516 = 0;
HXDLIN( 662)									while((_g516 < copyKeys17->length)){
HXLINE( 662)										int key480 = copyKeys17->__get(_g516);
HXDLIN( 662)										_g516 = (_g516 + 1);
HXDLIN( 662)										if ((key480 != -1)) {
HXLINE( 662)											action480->addKey(key480,state480);
            										}
            									}
            								}
HXDLIN( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action481 = this->_ui_leftR;
HXDLIN( 662)									int state481 = -1;
HXDLIN( 662)									int _g517 = 0;
HXDLIN( 662)									while((_g517 < copyKeys17->length)){
HXLINE( 662)										int key481 = copyKeys17->__get(_g517);
HXDLIN( 662)										_g517 = (_g517 + 1);
HXDLIN( 662)										if ((key481 != -1)) {
HXLINE( 662)											action481->addKey(key481,state481);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action482 = this->_ui_right;
HXDLIN( 662)									int state482 = 1;
HXDLIN( 662)									int _g518 = 0;
HXDLIN( 662)									while((_g518 < copyKeys17->length)){
HXLINE( 662)										int key482 = copyKeys17->__get(_g518);
HXDLIN( 662)										_g518 = (_g518 + 1);
HXDLIN( 662)										if ((key482 != -1)) {
HXLINE( 662)											action482->addKey(key482,state482);
            										}
            									}
            								}
HXDLIN( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action483 = this->_ui_rightP;
HXDLIN( 662)									int state483 = 2;
HXDLIN( 662)									int _g519 = 0;
HXDLIN( 662)									while((_g519 < copyKeys17->length)){
HXLINE( 662)										int key483 = copyKeys17->__get(_g519);
HXDLIN( 662)										_g519 = (_g519 + 1);
HXDLIN( 662)										if ((key483 != -1)) {
HXLINE( 662)											action483->addKey(key483,state483);
            										}
            									}
            								}
HXDLIN( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action484 = this->_ui_rightR;
HXDLIN( 662)									int state484 = -1;
HXDLIN( 662)									int _g520 = 0;
HXDLIN( 662)									while((_g520 < copyKeys17->length)){
HXLINE( 662)										int key484 = copyKeys17->__get(_g520);
HXDLIN( 662)										_g520 = (_g520 + 1);
HXDLIN( 662)										if ((key484 != -1)) {
HXLINE( 662)											action484->addKey(key484,state484);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action485 = this->_ui_down;
HXDLIN( 662)									int state485 = 1;
HXDLIN( 662)									int _g521 = 0;
HXDLIN( 662)									while((_g521 < copyKeys17->length)){
HXLINE( 662)										int key485 = copyKeys17->__get(_g521);
HXDLIN( 662)										_g521 = (_g521 + 1);
HXDLIN( 662)										if ((key485 != -1)) {
HXLINE( 662)											action485->addKey(key485,state485);
            										}
            									}
            								}
HXDLIN( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action486 = this->_ui_downP;
HXDLIN( 662)									int state486 = 2;
HXDLIN( 662)									int _g522 = 0;
HXDLIN( 662)									while((_g522 < copyKeys17->length)){
HXLINE( 662)										int key486 = copyKeys17->__get(_g522);
HXDLIN( 662)										_g522 = (_g522 + 1);
HXDLIN( 662)										if ((key486 != -1)) {
HXLINE( 662)											action486->addKey(key486,state486);
            										}
            									}
            								}
HXDLIN( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action487 = this->_ui_downR;
HXDLIN( 662)									int state487 = -1;
HXDLIN( 662)									int _g523 = 0;
HXDLIN( 662)									while((_g523 < copyKeys17->length)){
HXLINE( 662)										int key487 = copyKeys17->__get(_g523);
HXDLIN( 662)										_g523 = (_g523 + 1);
HXDLIN( 662)										if ((key487 != -1)) {
HXLINE( 662)											action487->addKey(key487,state487);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action488 = this->_note_up;
HXDLIN( 662)									int state488 = 1;
HXDLIN( 662)									int _g524 = 0;
HXDLIN( 662)									while((_g524 < copyKeys17->length)){
HXLINE( 662)										int key488 = copyKeys17->__get(_g524);
HXDLIN( 662)										_g524 = (_g524 + 1);
HXDLIN( 662)										if ((key488 != -1)) {
HXLINE( 662)											action488->addKey(key488,state488);
            										}
            									}
            								}
HXDLIN( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action489 = this->_note_upP;
HXDLIN( 662)									int state489 = 2;
HXDLIN( 662)									int _g525 = 0;
HXDLIN( 662)									while((_g525 < copyKeys17->length)){
HXLINE( 662)										int key489 = copyKeys17->__get(_g525);
HXDLIN( 662)										_g525 = (_g525 + 1);
HXDLIN( 662)										if ((key489 != -1)) {
HXLINE( 662)											action489->addKey(key489,state489);
            										}
            									}
            								}
HXDLIN( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action490 = this->_note_upR;
HXDLIN( 662)									int state490 = -1;
HXDLIN( 662)									int _g526 = 0;
HXDLIN( 662)									while((_g526 < copyKeys17->length)){
HXLINE( 662)										int key490 = copyKeys17->__get(_g526);
HXDLIN( 662)										_g526 = (_g526 + 1);
HXDLIN( 662)										if ((key490 != -1)) {
HXLINE( 662)											action490->addKey(key490,state490);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action491 = this->_note_left;
HXDLIN( 662)									int state491 = 1;
HXDLIN( 662)									int _g527 = 0;
HXDLIN( 662)									while((_g527 < copyKeys17->length)){
HXLINE( 662)										int key491 = copyKeys17->__get(_g527);
HXDLIN( 662)										_g527 = (_g527 + 1);
HXDLIN( 662)										if ((key491 != -1)) {
HXLINE( 662)											action491->addKey(key491,state491);
            										}
            									}
            								}
HXDLIN( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action492 = this->_note_leftP;
HXDLIN( 662)									int state492 = 2;
HXDLIN( 662)									int _g528 = 0;
HXDLIN( 662)									while((_g528 < copyKeys17->length)){
HXLINE( 662)										int key492 = copyKeys17->__get(_g528);
HXDLIN( 662)										_g528 = (_g528 + 1);
HXDLIN( 662)										if ((key492 != -1)) {
HXLINE( 662)											action492->addKey(key492,state492);
            										}
            									}
            								}
HXDLIN( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action493 = this->_note_leftR;
HXDLIN( 662)									int state493 = -1;
HXDLIN( 662)									int _g529 = 0;
HXDLIN( 662)									while((_g529 < copyKeys17->length)){
HXLINE( 662)										int key493 = copyKeys17->__get(_g529);
HXDLIN( 662)										_g529 = (_g529 + 1);
HXDLIN( 662)										if ((key493 != -1)) {
HXLINE( 662)											action493->addKey(key493,state493);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action494 = this->_note_right;
HXDLIN( 662)									int state494 = 1;
HXDLIN( 662)									int _g530 = 0;
HXDLIN( 662)									while((_g530 < copyKeys17->length)){
HXLINE( 662)										int key494 = copyKeys17->__get(_g530);
HXDLIN( 662)										_g530 = (_g530 + 1);
HXDLIN( 662)										if ((key494 != -1)) {
HXLINE( 662)											action494->addKey(key494,state494);
            										}
            									}
            								}
HXDLIN( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action495 = this->_note_rightP;
HXDLIN( 662)									int state495 = 2;
HXDLIN( 662)									int _g531 = 0;
HXDLIN( 662)									while((_g531 < copyKeys17->length)){
HXLINE( 662)										int key495 = copyKeys17->__get(_g531);
HXDLIN( 662)										_g531 = (_g531 + 1);
HXDLIN( 662)										if ((key495 != -1)) {
HXLINE( 662)											action495->addKey(key495,state495);
            										}
            									}
            								}
HXDLIN( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action496 = this->_note_rightR;
HXDLIN( 662)									int state496 = -1;
HXDLIN( 662)									int _g532 = 0;
HXDLIN( 662)									while((_g532 < copyKeys17->length)){
HXLINE( 662)										int key496 = copyKeys17->__get(_g532);
HXDLIN( 662)										_g532 = (_g532 + 1);
HXDLIN( 662)										if ((key496 != -1)) {
HXLINE( 662)											action496->addKey(key496,state496);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action497 = this->_note_down;
HXDLIN( 662)									int state497 = 1;
HXDLIN( 662)									int _g533 = 0;
HXDLIN( 662)									while((_g533 < copyKeys17->length)){
HXLINE( 662)										int key497 = copyKeys17->__get(_g533);
HXDLIN( 662)										_g533 = (_g533 + 1);
HXDLIN( 662)										if ((key497 != -1)) {
HXLINE( 662)											action497->addKey(key497,state497);
            										}
            									}
            								}
HXDLIN( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action498 = this->_note_downP;
HXDLIN( 662)									int state498 = 2;
HXDLIN( 662)									int _g534 = 0;
HXDLIN( 662)									while((_g534 < copyKeys17->length)){
HXLINE( 662)										int key498 = copyKeys17->__get(_g534);
HXDLIN( 662)										_g534 = (_g534 + 1);
HXDLIN( 662)										if ((key498 != -1)) {
HXLINE( 662)											action498->addKey(key498,state498);
            										}
            									}
            								}
HXDLIN( 662)								{
HXLINE( 662)									 ::flixel::input::actions::FlxActionDigital action499 = this->_note_downR;
HXDLIN( 662)									int state499 = -1;
HXDLIN( 662)									int _g535 = 0;
HXDLIN( 662)									while((_g535 < copyKeys17->length)){
HXLINE( 662)										int key499 = copyKeys17->__get(_g535);
HXDLIN( 662)										_g535 = (_g535 + 1);
HXDLIN( 662)										if ((key499 != -1)) {
HXLINE( 662)											action499->addKey(key499,state499);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 662)								 ::flixel::input::actions::FlxActionDigital action500 = this->_reset;
HXDLIN( 662)								int state500 = 2;
HXDLIN( 662)								int _g536 = 0;
HXDLIN( 662)								while((_g536 < copyKeys17->length)){
HXLINE( 662)									int key500 = copyKeys17->__get(_g536);
HXDLIN( 662)									_g536 = (_g536 + 1);
HXDLIN( 662)									if ((key500 != -1)) {
HXLINE( 662)										action500->addKey(key500,state500);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 662)								 ::flixel::input::actions::FlxActionDigital action501 = this->_accept;
HXDLIN( 662)								int state501 = 2;
HXDLIN( 662)								int _g537 = 0;
HXDLIN( 662)								while((_g537 < copyKeys17->length)){
HXLINE( 662)									int key501 = copyKeys17->__get(_g537);
HXDLIN( 662)									_g537 = (_g537 + 1);
HXDLIN( 662)									if ((key501 != -1)) {
HXLINE( 662)										action501->addKey(key501,state501);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 662)								 ::flixel::input::actions::FlxActionDigital action502 = this->_back;
HXDLIN( 662)								int state502 = 2;
HXDLIN( 662)								int _g538 = 0;
HXDLIN( 662)								while((_g538 < copyKeys17->length)){
HXLINE( 662)									int key502 = copyKeys17->__get(_g538);
HXDLIN( 662)									_g538 = (_g538 + 1);
HXDLIN( 662)									if ((key502 != -1)) {
HXLINE( 662)										action502->addKey(key502,state502);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 662)								 ::flixel::input::actions::FlxActionDigital action503 = this->_pause;
HXDLIN( 662)								int state503 = 2;
HXDLIN( 662)								int _g539 = 0;
HXDLIN( 662)								while((_g539 < copyKeys17->length)){
HXLINE( 662)									int key503 = copyKeys17->__get(_g539);
HXDLIN( 662)									_g539 = (_g539 + 1);
HXDLIN( 662)									if ((key503 != -1)) {
HXLINE( 662)										action503->addKey(key503,state503);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 663)					{
HXLINE( 663)						::Array< int > copyKeys18 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1126,1)->copy();
HXDLIN( 663)						{
HXLINE( 663)							int _g540 = 0;
HXDLIN( 663)							int _g541 = copyKeys18->length;
HXDLIN( 663)							while((_g540 < _g541)){
HXLINE( 663)								_g540 = (_g540 + 1);
HXDLIN( 663)								int i18 = (_g540 - 1);
HXDLIN( 663)								if ((i18 == -1)) {
HXLINE( 663)									copyKeys18->remove(i18);
            								}
            							}
            						}
HXDLIN( 663)						switch((int)(::Control_obj::NOTE_LEFT_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action504 = this->_ui_up;
HXDLIN( 663)									int state504 = 1;
HXDLIN( 663)									int _g542 = 0;
HXDLIN( 663)									while((_g542 < copyKeys18->length)){
HXLINE( 663)										int key504 = copyKeys18->__get(_g542);
HXDLIN( 663)										_g542 = (_g542 + 1);
HXDLIN( 663)										if ((key504 != -1)) {
HXLINE( 663)											action504->addKey(key504,state504);
            										}
            									}
            								}
HXDLIN( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action505 = this->_ui_upP;
HXDLIN( 663)									int state505 = 2;
HXDLIN( 663)									int _g543 = 0;
HXDLIN( 663)									while((_g543 < copyKeys18->length)){
HXLINE( 663)										int key505 = copyKeys18->__get(_g543);
HXDLIN( 663)										_g543 = (_g543 + 1);
HXDLIN( 663)										if ((key505 != -1)) {
HXLINE( 663)											action505->addKey(key505,state505);
            										}
            									}
            								}
HXDLIN( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action506 = this->_ui_upR;
HXDLIN( 663)									int state506 = -1;
HXDLIN( 663)									int _g544 = 0;
HXDLIN( 663)									while((_g544 < copyKeys18->length)){
HXLINE( 663)										int key506 = copyKeys18->__get(_g544);
HXDLIN( 663)										_g544 = (_g544 + 1);
HXDLIN( 663)										if ((key506 != -1)) {
HXLINE( 663)											action506->addKey(key506,state506);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action507 = this->_ui_left;
HXDLIN( 663)									int state507 = 1;
HXDLIN( 663)									int _g545 = 0;
HXDLIN( 663)									while((_g545 < copyKeys18->length)){
HXLINE( 663)										int key507 = copyKeys18->__get(_g545);
HXDLIN( 663)										_g545 = (_g545 + 1);
HXDLIN( 663)										if ((key507 != -1)) {
HXLINE( 663)											action507->addKey(key507,state507);
            										}
            									}
            								}
HXDLIN( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action508 = this->_ui_leftP;
HXDLIN( 663)									int state508 = 2;
HXDLIN( 663)									int _g546 = 0;
HXDLIN( 663)									while((_g546 < copyKeys18->length)){
HXLINE( 663)										int key508 = copyKeys18->__get(_g546);
HXDLIN( 663)										_g546 = (_g546 + 1);
HXDLIN( 663)										if ((key508 != -1)) {
HXLINE( 663)											action508->addKey(key508,state508);
            										}
            									}
            								}
HXDLIN( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action509 = this->_ui_leftR;
HXDLIN( 663)									int state509 = -1;
HXDLIN( 663)									int _g547 = 0;
HXDLIN( 663)									while((_g547 < copyKeys18->length)){
HXLINE( 663)										int key509 = copyKeys18->__get(_g547);
HXDLIN( 663)										_g547 = (_g547 + 1);
HXDLIN( 663)										if ((key509 != -1)) {
HXLINE( 663)											action509->addKey(key509,state509);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action510 = this->_ui_right;
HXDLIN( 663)									int state510 = 1;
HXDLIN( 663)									int _g548 = 0;
HXDLIN( 663)									while((_g548 < copyKeys18->length)){
HXLINE( 663)										int key510 = copyKeys18->__get(_g548);
HXDLIN( 663)										_g548 = (_g548 + 1);
HXDLIN( 663)										if ((key510 != -1)) {
HXLINE( 663)											action510->addKey(key510,state510);
            										}
            									}
            								}
HXDLIN( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action511 = this->_ui_rightP;
HXDLIN( 663)									int state511 = 2;
HXDLIN( 663)									int _g549 = 0;
HXDLIN( 663)									while((_g549 < copyKeys18->length)){
HXLINE( 663)										int key511 = copyKeys18->__get(_g549);
HXDLIN( 663)										_g549 = (_g549 + 1);
HXDLIN( 663)										if ((key511 != -1)) {
HXLINE( 663)											action511->addKey(key511,state511);
            										}
            									}
            								}
HXDLIN( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action512 = this->_ui_rightR;
HXDLIN( 663)									int state512 = -1;
HXDLIN( 663)									int _g550 = 0;
HXDLIN( 663)									while((_g550 < copyKeys18->length)){
HXLINE( 663)										int key512 = copyKeys18->__get(_g550);
HXDLIN( 663)										_g550 = (_g550 + 1);
HXDLIN( 663)										if ((key512 != -1)) {
HXLINE( 663)											action512->addKey(key512,state512);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action513 = this->_ui_down;
HXDLIN( 663)									int state513 = 1;
HXDLIN( 663)									int _g551 = 0;
HXDLIN( 663)									while((_g551 < copyKeys18->length)){
HXLINE( 663)										int key513 = copyKeys18->__get(_g551);
HXDLIN( 663)										_g551 = (_g551 + 1);
HXDLIN( 663)										if ((key513 != -1)) {
HXLINE( 663)											action513->addKey(key513,state513);
            										}
            									}
            								}
HXDLIN( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action514 = this->_ui_downP;
HXDLIN( 663)									int state514 = 2;
HXDLIN( 663)									int _g552 = 0;
HXDLIN( 663)									while((_g552 < copyKeys18->length)){
HXLINE( 663)										int key514 = copyKeys18->__get(_g552);
HXDLIN( 663)										_g552 = (_g552 + 1);
HXDLIN( 663)										if ((key514 != -1)) {
HXLINE( 663)											action514->addKey(key514,state514);
            										}
            									}
            								}
HXDLIN( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action515 = this->_ui_downR;
HXDLIN( 663)									int state515 = -1;
HXDLIN( 663)									int _g553 = 0;
HXDLIN( 663)									while((_g553 < copyKeys18->length)){
HXLINE( 663)										int key515 = copyKeys18->__get(_g553);
HXDLIN( 663)										_g553 = (_g553 + 1);
HXDLIN( 663)										if ((key515 != -1)) {
HXLINE( 663)											action515->addKey(key515,state515);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action516 = this->_note_up;
HXDLIN( 663)									int state516 = 1;
HXDLIN( 663)									int _g554 = 0;
HXDLIN( 663)									while((_g554 < copyKeys18->length)){
HXLINE( 663)										int key516 = copyKeys18->__get(_g554);
HXDLIN( 663)										_g554 = (_g554 + 1);
HXDLIN( 663)										if ((key516 != -1)) {
HXLINE( 663)											action516->addKey(key516,state516);
            										}
            									}
            								}
HXDLIN( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action517 = this->_note_upP;
HXDLIN( 663)									int state517 = 2;
HXDLIN( 663)									int _g555 = 0;
HXDLIN( 663)									while((_g555 < copyKeys18->length)){
HXLINE( 663)										int key517 = copyKeys18->__get(_g555);
HXDLIN( 663)										_g555 = (_g555 + 1);
HXDLIN( 663)										if ((key517 != -1)) {
HXLINE( 663)											action517->addKey(key517,state517);
            										}
            									}
            								}
HXDLIN( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action518 = this->_note_upR;
HXDLIN( 663)									int state518 = -1;
HXDLIN( 663)									int _g556 = 0;
HXDLIN( 663)									while((_g556 < copyKeys18->length)){
HXLINE( 663)										int key518 = copyKeys18->__get(_g556);
HXDLIN( 663)										_g556 = (_g556 + 1);
HXDLIN( 663)										if ((key518 != -1)) {
HXLINE( 663)											action518->addKey(key518,state518);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action519 = this->_note_left;
HXDLIN( 663)									int state519 = 1;
HXDLIN( 663)									int _g557 = 0;
HXDLIN( 663)									while((_g557 < copyKeys18->length)){
HXLINE( 663)										int key519 = copyKeys18->__get(_g557);
HXDLIN( 663)										_g557 = (_g557 + 1);
HXDLIN( 663)										if ((key519 != -1)) {
HXLINE( 663)											action519->addKey(key519,state519);
            										}
            									}
            								}
HXDLIN( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action520 = this->_note_leftP;
HXDLIN( 663)									int state520 = 2;
HXDLIN( 663)									int _g558 = 0;
HXDLIN( 663)									while((_g558 < copyKeys18->length)){
HXLINE( 663)										int key520 = copyKeys18->__get(_g558);
HXDLIN( 663)										_g558 = (_g558 + 1);
HXDLIN( 663)										if ((key520 != -1)) {
HXLINE( 663)											action520->addKey(key520,state520);
            										}
            									}
            								}
HXDLIN( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action521 = this->_note_leftR;
HXDLIN( 663)									int state521 = -1;
HXDLIN( 663)									int _g559 = 0;
HXDLIN( 663)									while((_g559 < copyKeys18->length)){
HXLINE( 663)										int key521 = copyKeys18->__get(_g559);
HXDLIN( 663)										_g559 = (_g559 + 1);
HXDLIN( 663)										if ((key521 != -1)) {
HXLINE( 663)											action521->addKey(key521,state521);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action522 = this->_note_right;
HXDLIN( 663)									int state522 = 1;
HXDLIN( 663)									int _g560 = 0;
HXDLIN( 663)									while((_g560 < copyKeys18->length)){
HXLINE( 663)										int key522 = copyKeys18->__get(_g560);
HXDLIN( 663)										_g560 = (_g560 + 1);
HXDLIN( 663)										if ((key522 != -1)) {
HXLINE( 663)											action522->addKey(key522,state522);
            										}
            									}
            								}
HXDLIN( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action523 = this->_note_rightP;
HXDLIN( 663)									int state523 = 2;
HXDLIN( 663)									int _g561 = 0;
HXDLIN( 663)									while((_g561 < copyKeys18->length)){
HXLINE( 663)										int key523 = copyKeys18->__get(_g561);
HXDLIN( 663)										_g561 = (_g561 + 1);
HXDLIN( 663)										if ((key523 != -1)) {
HXLINE( 663)											action523->addKey(key523,state523);
            										}
            									}
            								}
HXDLIN( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action524 = this->_note_rightR;
HXDLIN( 663)									int state524 = -1;
HXDLIN( 663)									int _g562 = 0;
HXDLIN( 663)									while((_g562 < copyKeys18->length)){
HXLINE( 663)										int key524 = copyKeys18->__get(_g562);
HXDLIN( 663)										_g562 = (_g562 + 1);
HXDLIN( 663)										if ((key524 != -1)) {
HXLINE( 663)											action524->addKey(key524,state524);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action525 = this->_note_down;
HXDLIN( 663)									int state525 = 1;
HXDLIN( 663)									int _g563 = 0;
HXDLIN( 663)									while((_g563 < copyKeys18->length)){
HXLINE( 663)										int key525 = copyKeys18->__get(_g563);
HXDLIN( 663)										_g563 = (_g563 + 1);
HXDLIN( 663)										if ((key525 != -1)) {
HXLINE( 663)											action525->addKey(key525,state525);
            										}
            									}
            								}
HXDLIN( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action526 = this->_note_downP;
HXDLIN( 663)									int state526 = 2;
HXDLIN( 663)									int _g564 = 0;
HXDLIN( 663)									while((_g564 < copyKeys18->length)){
HXLINE( 663)										int key526 = copyKeys18->__get(_g564);
HXDLIN( 663)										_g564 = (_g564 + 1);
HXDLIN( 663)										if ((key526 != -1)) {
HXLINE( 663)											action526->addKey(key526,state526);
            										}
            									}
            								}
HXDLIN( 663)								{
HXLINE( 663)									 ::flixel::input::actions::FlxActionDigital action527 = this->_note_downR;
HXDLIN( 663)									int state527 = -1;
HXDLIN( 663)									int _g565 = 0;
HXDLIN( 663)									while((_g565 < copyKeys18->length)){
HXLINE( 663)										int key527 = copyKeys18->__get(_g565);
HXDLIN( 663)										_g565 = (_g565 + 1);
HXDLIN( 663)										if ((key527 != -1)) {
HXLINE( 663)											action527->addKey(key527,state527);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 663)								 ::flixel::input::actions::FlxActionDigital action528 = this->_reset;
HXDLIN( 663)								int state528 = 2;
HXDLIN( 663)								int _g566 = 0;
HXDLIN( 663)								while((_g566 < copyKeys18->length)){
HXLINE( 663)									int key528 = copyKeys18->__get(_g566);
HXDLIN( 663)									_g566 = (_g566 + 1);
HXDLIN( 663)									if ((key528 != -1)) {
HXLINE( 663)										action528->addKey(key528,state528);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 663)								 ::flixel::input::actions::FlxActionDigital action529 = this->_accept;
HXDLIN( 663)								int state529 = 2;
HXDLIN( 663)								int _g567 = 0;
HXDLIN( 663)								while((_g567 < copyKeys18->length)){
HXLINE( 663)									int key529 = copyKeys18->__get(_g567);
HXDLIN( 663)									_g567 = (_g567 + 1);
HXDLIN( 663)									if ((key529 != -1)) {
HXLINE( 663)										action529->addKey(key529,state529);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 663)								 ::flixel::input::actions::FlxActionDigital action530 = this->_back;
HXDLIN( 663)								int state530 = 2;
HXDLIN( 663)								int _g568 = 0;
HXDLIN( 663)								while((_g568 < copyKeys18->length)){
HXLINE( 663)									int key530 = copyKeys18->__get(_g568);
HXDLIN( 663)									_g568 = (_g568 + 1);
HXDLIN( 663)									if ((key530 != -1)) {
HXLINE( 663)										action530->addKey(key530,state530);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 663)								 ::flixel::input::actions::FlxActionDigital action531 = this->_pause;
HXDLIN( 663)								int state531 = 2;
HXDLIN( 663)								int _g569 = 0;
HXDLIN( 663)								while((_g569 < copyKeys18->length)){
HXLINE( 663)									int key531 = copyKeys18->__get(_g569);
HXDLIN( 663)									_g569 = (_g569 + 1);
HXDLIN( 663)									if ((key531 != -1)) {
HXLINE( 663)										action531->addKey(key531,state531);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 664)					{
HXLINE( 664)						::Array< int > copyKeys19 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1127,1)->copy();
HXDLIN( 664)						{
HXLINE( 664)							int _g570 = 0;
HXDLIN( 664)							int _g571 = copyKeys19->length;
HXDLIN( 664)							while((_g570 < _g571)){
HXLINE( 664)								_g570 = (_g570 + 1);
HXDLIN( 664)								int i19 = (_g570 - 1);
HXDLIN( 664)								if ((i19 == -1)) {
HXLINE( 664)									copyKeys19->remove(i19);
            								}
            							}
            						}
HXDLIN( 664)						switch((int)(::Control_obj::NOTE_RIGHT_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action532 = this->_ui_up;
HXDLIN( 664)									int state532 = 1;
HXDLIN( 664)									int _g572 = 0;
HXDLIN( 664)									while((_g572 < copyKeys19->length)){
HXLINE( 664)										int key532 = copyKeys19->__get(_g572);
HXDLIN( 664)										_g572 = (_g572 + 1);
HXDLIN( 664)										if ((key532 != -1)) {
HXLINE( 664)											action532->addKey(key532,state532);
            										}
            									}
            								}
HXDLIN( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action533 = this->_ui_upP;
HXDLIN( 664)									int state533 = 2;
HXDLIN( 664)									int _g573 = 0;
HXDLIN( 664)									while((_g573 < copyKeys19->length)){
HXLINE( 664)										int key533 = copyKeys19->__get(_g573);
HXDLIN( 664)										_g573 = (_g573 + 1);
HXDLIN( 664)										if ((key533 != -1)) {
HXLINE( 664)											action533->addKey(key533,state533);
            										}
            									}
            								}
HXDLIN( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action534 = this->_ui_upR;
HXDLIN( 664)									int state534 = -1;
HXDLIN( 664)									int _g574 = 0;
HXDLIN( 664)									while((_g574 < copyKeys19->length)){
HXLINE( 664)										int key534 = copyKeys19->__get(_g574);
HXDLIN( 664)										_g574 = (_g574 + 1);
HXDLIN( 664)										if ((key534 != -1)) {
HXLINE( 664)											action534->addKey(key534,state534);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action535 = this->_ui_left;
HXDLIN( 664)									int state535 = 1;
HXDLIN( 664)									int _g575 = 0;
HXDLIN( 664)									while((_g575 < copyKeys19->length)){
HXLINE( 664)										int key535 = copyKeys19->__get(_g575);
HXDLIN( 664)										_g575 = (_g575 + 1);
HXDLIN( 664)										if ((key535 != -1)) {
HXLINE( 664)											action535->addKey(key535,state535);
            										}
            									}
            								}
HXDLIN( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action536 = this->_ui_leftP;
HXDLIN( 664)									int state536 = 2;
HXDLIN( 664)									int _g576 = 0;
HXDLIN( 664)									while((_g576 < copyKeys19->length)){
HXLINE( 664)										int key536 = copyKeys19->__get(_g576);
HXDLIN( 664)										_g576 = (_g576 + 1);
HXDLIN( 664)										if ((key536 != -1)) {
HXLINE( 664)											action536->addKey(key536,state536);
            										}
            									}
            								}
HXDLIN( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action537 = this->_ui_leftR;
HXDLIN( 664)									int state537 = -1;
HXDLIN( 664)									int _g577 = 0;
HXDLIN( 664)									while((_g577 < copyKeys19->length)){
HXLINE( 664)										int key537 = copyKeys19->__get(_g577);
HXDLIN( 664)										_g577 = (_g577 + 1);
HXDLIN( 664)										if ((key537 != -1)) {
HXLINE( 664)											action537->addKey(key537,state537);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action538 = this->_ui_right;
HXDLIN( 664)									int state538 = 1;
HXDLIN( 664)									int _g578 = 0;
HXDLIN( 664)									while((_g578 < copyKeys19->length)){
HXLINE( 664)										int key538 = copyKeys19->__get(_g578);
HXDLIN( 664)										_g578 = (_g578 + 1);
HXDLIN( 664)										if ((key538 != -1)) {
HXLINE( 664)											action538->addKey(key538,state538);
            										}
            									}
            								}
HXDLIN( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action539 = this->_ui_rightP;
HXDLIN( 664)									int state539 = 2;
HXDLIN( 664)									int _g579 = 0;
HXDLIN( 664)									while((_g579 < copyKeys19->length)){
HXLINE( 664)										int key539 = copyKeys19->__get(_g579);
HXDLIN( 664)										_g579 = (_g579 + 1);
HXDLIN( 664)										if ((key539 != -1)) {
HXLINE( 664)											action539->addKey(key539,state539);
            										}
            									}
            								}
HXDLIN( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action540 = this->_ui_rightR;
HXDLIN( 664)									int state540 = -1;
HXDLIN( 664)									int _g580 = 0;
HXDLIN( 664)									while((_g580 < copyKeys19->length)){
HXLINE( 664)										int key540 = copyKeys19->__get(_g580);
HXDLIN( 664)										_g580 = (_g580 + 1);
HXDLIN( 664)										if ((key540 != -1)) {
HXLINE( 664)											action540->addKey(key540,state540);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action541 = this->_ui_down;
HXDLIN( 664)									int state541 = 1;
HXDLIN( 664)									int _g581 = 0;
HXDLIN( 664)									while((_g581 < copyKeys19->length)){
HXLINE( 664)										int key541 = copyKeys19->__get(_g581);
HXDLIN( 664)										_g581 = (_g581 + 1);
HXDLIN( 664)										if ((key541 != -1)) {
HXLINE( 664)											action541->addKey(key541,state541);
            										}
            									}
            								}
HXDLIN( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action542 = this->_ui_downP;
HXDLIN( 664)									int state542 = 2;
HXDLIN( 664)									int _g582 = 0;
HXDLIN( 664)									while((_g582 < copyKeys19->length)){
HXLINE( 664)										int key542 = copyKeys19->__get(_g582);
HXDLIN( 664)										_g582 = (_g582 + 1);
HXDLIN( 664)										if ((key542 != -1)) {
HXLINE( 664)											action542->addKey(key542,state542);
            										}
            									}
            								}
HXDLIN( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action543 = this->_ui_downR;
HXDLIN( 664)									int state543 = -1;
HXDLIN( 664)									int _g583 = 0;
HXDLIN( 664)									while((_g583 < copyKeys19->length)){
HXLINE( 664)										int key543 = copyKeys19->__get(_g583);
HXDLIN( 664)										_g583 = (_g583 + 1);
HXDLIN( 664)										if ((key543 != -1)) {
HXLINE( 664)											action543->addKey(key543,state543);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action544 = this->_note_up;
HXDLIN( 664)									int state544 = 1;
HXDLIN( 664)									int _g584 = 0;
HXDLIN( 664)									while((_g584 < copyKeys19->length)){
HXLINE( 664)										int key544 = copyKeys19->__get(_g584);
HXDLIN( 664)										_g584 = (_g584 + 1);
HXDLIN( 664)										if ((key544 != -1)) {
HXLINE( 664)											action544->addKey(key544,state544);
            										}
            									}
            								}
HXDLIN( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action545 = this->_note_upP;
HXDLIN( 664)									int state545 = 2;
HXDLIN( 664)									int _g585 = 0;
HXDLIN( 664)									while((_g585 < copyKeys19->length)){
HXLINE( 664)										int key545 = copyKeys19->__get(_g585);
HXDLIN( 664)										_g585 = (_g585 + 1);
HXDLIN( 664)										if ((key545 != -1)) {
HXLINE( 664)											action545->addKey(key545,state545);
            										}
            									}
            								}
HXDLIN( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action546 = this->_note_upR;
HXDLIN( 664)									int state546 = -1;
HXDLIN( 664)									int _g586 = 0;
HXDLIN( 664)									while((_g586 < copyKeys19->length)){
HXLINE( 664)										int key546 = copyKeys19->__get(_g586);
HXDLIN( 664)										_g586 = (_g586 + 1);
HXDLIN( 664)										if ((key546 != -1)) {
HXLINE( 664)											action546->addKey(key546,state546);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action547 = this->_note_left;
HXDLIN( 664)									int state547 = 1;
HXDLIN( 664)									int _g587 = 0;
HXDLIN( 664)									while((_g587 < copyKeys19->length)){
HXLINE( 664)										int key547 = copyKeys19->__get(_g587);
HXDLIN( 664)										_g587 = (_g587 + 1);
HXDLIN( 664)										if ((key547 != -1)) {
HXLINE( 664)											action547->addKey(key547,state547);
            										}
            									}
            								}
HXDLIN( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action548 = this->_note_leftP;
HXDLIN( 664)									int state548 = 2;
HXDLIN( 664)									int _g588 = 0;
HXDLIN( 664)									while((_g588 < copyKeys19->length)){
HXLINE( 664)										int key548 = copyKeys19->__get(_g588);
HXDLIN( 664)										_g588 = (_g588 + 1);
HXDLIN( 664)										if ((key548 != -1)) {
HXLINE( 664)											action548->addKey(key548,state548);
            										}
            									}
            								}
HXDLIN( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action549 = this->_note_leftR;
HXDLIN( 664)									int state549 = -1;
HXDLIN( 664)									int _g589 = 0;
HXDLIN( 664)									while((_g589 < copyKeys19->length)){
HXLINE( 664)										int key549 = copyKeys19->__get(_g589);
HXDLIN( 664)										_g589 = (_g589 + 1);
HXDLIN( 664)										if ((key549 != -1)) {
HXLINE( 664)											action549->addKey(key549,state549);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action550 = this->_note_right;
HXDLIN( 664)									int state550 = 1;
HXDLIN( 664)									int _g590 = 0;
HXDLIN( 664)									while((_g590 < copyKeys19->length)){
HXLINE( 664)										int key550 = copyKeys19->__get(_g590);
HXDLIN( 664)										_g590 = (_g590 + 1);
HXDLIN( 664)										if ((key550 != -1)) {
HXLINE( 664)											action550->addKey(key550,state550);
            										}
            									}
            								}
HXDLIN( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action551 = this->_note_rightP;
HXDLIN( 664)									int state551 = 2;
HXDLIN( 664)									int _g591 = 0;
HXDLIN( 664)									while((_g591 < copyKeys19->length)){
HXLINE( 664)										int key551 = copyKeys19->__get(_g591);
HXDLIN( 664)										_g591 = (_g591 + 1);
HXDLIN( 664)										if ((key551 != -1)) {
HXLINE( 664)											action551->addKey(key551,state551);
            										}
            									}
            								}
HXDLIN( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action552 = this->_note_rightR;
HXDLIN( 664)									int state552 = -1;
HXDLIN( 664)									int _g592 = 0;
HXDLIN( 664)									while((_g592 < copyKeys19->length)){
HXLINE( 664)										int key552 = copyKeys19->__get(_g592);
HXDLIN( 664)										_g592 = (_g592 + 1);
HXDLIN( 664)										if ((key552 != -1)) {
HXLINE( 664)											action552->addKey(key552,state552);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action553 = this->_note_down;
HXDLIN( 664)									int state553 = 1;
HXDLIN( 664)									int _g593 = 0;
HXDLIN( 664)									while((_g593 < copyKeys19->length)){
HXLINE( 664)										int key553 = copyKeys19->__get(_g593);
HXDLIN( 664)										_g593 = (_g593 + 1);
HXDLIN( 664)										if ((key553 != -1)) {
HXLINE( 664)											action553->addKey(key553,state553);
            										}
            									}
            								}
HXDLIN( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action554 = this->_note_downP;
HXDLIN( 664)									int state554 = 2;
HXDLIN( 664)									int _g594 = 0;
HXDLIN( 664)									while((_g594 < copyKeys19->length)){
HXLINE( 664)										int key554 = copyKeys19->__get(_g594);
HXDLIN( 664)										_g594 = (_g594 + 1);
HXDLIN( 664)										if ((key554 != -1)) {
HXLINE( 664)											action554->addKey(key554,state554);
            										}
            									}
            								}
HXDLIN( 664)								{
HXLINE( 664)									 ::flixel::input::actions::FlxActionDigital action555 = this->_note_downR;
HXDLIN( 664)									int state555 = -1;
HXDLIN( 664)									int _g595 = 0;
HXDLIN( 664)									while((_g595 < copyKeys19->length)){
HXLINE( 664)										int key555 = copyKeys19->__get(_g595);
HXDLIN( 664)										_g595 = (_g595 + 1);
HXDLIN( 664)										if ((key555 != -1)) {
HXLINE( 664)											action555->addKey(key555,state555);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 664)								 ::flixel::input::actions::FlxActionDigital action556 = this->_reset;
HXDLIN( 664)								int state556 = 2;
HXDLIN( 664)								int _g596 = 0;
HXDLIN( 664)								while((_g596 < copyKeys19->length)){
HXLINE( 664)									int key556 = copyKeys19->__get(_g596);
HXDLIN( 664)									_g596 = (_g596 + 1);
HXDLIN( 664)									if ((key556 != -1)) {
HXLINE( 664)										action556->addKey(key556,state556);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 664)								 ::flixel::input::actions::FlxActionDigital action557 = this->_accept;
HXDLIN( 664)								int state557 = 2;
HXDLIN( 664)								int _g597 = 0;
HXDLIN( 664)								while((_g597 < copyKeys19->length)){
HXLINE( 664)									int key557 = copyKeys19->__get(_g597);
HXDLIN( 664)									_g597 = (_g597 + 1);
HXDLIN( 664)									if ((key557 != -1)) {
HXLINE( 664)										action557->addKey(key557,state557);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 664)								 ::flixel::input::actions::FlxActionDigital action558 = this->_back;
HXDLIN( 664)								int state558 = 2;
HXDLIN( 664)								int _g598 = 0;
HXDLIN( 664)								while((_g598 < copyKeys19->length)){
HXLINE( 664)									int key558 = copyKeys19->__get(_g598);
HXDLIN( 664)									_g598 = (_g598 + 1);
HXDLIN( 664)									if ((key558 != -1)) {
HXLINE( 664)										action558->addKey(key558,state558);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 664)								 ::flixel::input::actions::FlxActionDigital action559 = this->_pause;
HXDLIN( 664)								int state559 = 2;
HXDLIN( 664)								int _g599 = 0;
HXDLIN( 664)								while((_g599 < copyKeys19->length)){
HXLINE( 664)									int key559 = copyKeys19->__get(_g599);
HXDLIN( 664)									_g599 = (_g599 + 1);
HXDLIN( 664)									if ((key559 != -1)) {
HXLINE( 664)										action559->addKey(key559,state559);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 665)					{
HXLINE( 665)						::Array< int > copyKeys20 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1128,2)->copy();
HXDLIN( 665)						{
HXLINE( 665)							int _g600 = 0;
HXDLIN( 665)							int _g601 = copyKeys20->length;
HXDLIN( 665)							while((_g600 < _g601)){
HXLINE( 665)								_g600 = (_g600 + 1);
HXDLIN( 665)								int i20 = (_g600 - 1);
HXDLIN( 665)								if ((i20 == -1)) {
HXLINE( 665)									copyKeys20->remove(i20);
            								}
            							}
            						}
HXDLIN( 665)						switch((int)(::Control_obj::ACCEPT_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action560 = this->_ui_up;
HXDLIN( 665)									int state560 = 1;
HXDLIN( 665)									int _g602 = 0;
HXDLIN( 665)									while((_g602 < copyKeys20->length)){
HXLINE( 665)										int key560 = copyKeys20->__get(_g602);
HXDLIN( 665)										_g602 = (_g602 + 1);
HXDLIN( 665)										if ((key560 != -1)) {
HXLINE( 665)											action560->addKey(key560,state560);
            										}
            									}
            								}
HXDLIN( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action561 = this->_ui_upP;
HXDLIN( 665)									int state561 = 2;
HXDLIN( 665)									int _g603 = 0;
HXDLIN( 665)									while((_g603 < copyKeys20->length)){
HXLINE( 665)										int key561 = copyKeys20->__get(_g603);
HXDLIN( 665)										_g603 = (_g603 + 1);
HXDLIN( 665)										if ((key561 != -1)) {
HXLINE( 665)											action561->addKey(key561,state561);
            										}
            									}
            								}
HXDLIN( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action562 = this->_ui_upR;
HXDLIN( 665)									int state562 = -1;
HXDLIN( 665)									int _g604 = 0;
HXDLIN( 665)									while((_g604 < copyKeys20->length)){
HXLINE( 665)										int key562 = copyKeys20->__get(_g604);
HXDLIN( 665)										_g604 = (_g604 + 1);
HXDLIN( 665)										if ((key562 != -1)) {
HXLINE( 665)											action562->addKey(key562,state562);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action563 = this->_ui_left;
HXDLIN( 665)									int state563 = 1;
HXDLIN( 665)									int _g605 = 0;
HXDLIN( 665)									while((_g605 < copyKeys20->length)){
HXLINE( 665)										int key563 = copyKeys20->__get(_g605);
HXDLIN( 665)										_g605 = (_g605 + 1);
HXDLIN( 665)										if ((key563 != -1)) {
HXLINE( 665)											action563->addKey(key563,state563);
            										}
            									}
            								}
HXDLIN( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action564 = this->_ui_leftP;
HXDLIN( 665)									int state564 = 2;
HXDLIN( 665)									int _g606 = 0;
HXDLIN( 665)									while((_g606 < copyKeys20->length)){
HXLINE( 665)										int key564 = copyKeys20->__get(_g606);
HXDLIN( 665)										_g606 = (_g606 + 1);
HXDLIN( 665)										if ((key564 != -1)) {
HXLINE( 665)											action564->addKey(key564,state564);
            										}
            									}
            								}
HXDLIN( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action565 = this->_ui_leftR;
HXDLIN( 665)									int state565 = -1;
HXDLIN( 665)									int _g607 = 0;
HXDLIN( 665)									while((_g607 < copyKeys20->length)){
HXLINE( 665)										int key565 = copyKeys20->__get(_g607);
HXDLIN( 665)										_g607 = (_g607 + 1);
HXDLIN( 665)										if ((key565 != -1)) {
HXLINE( 665)											action565->addKey(key565,state565);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action566 = this->_ui_right;
HXDLIN( 665)									int state566 = 1;
HXDLIN( 665)									int _g608 = 0;
HXDLIN( 665)									while((_g608 < copyKeys20->length)){
HXLINE( 665)										int key566 = copyKeys20->__get(_g608);
HXDLIN( 665)										_g608 = (_g608 + 1);
HXDLIN( 665)										if ((key566 != -1)) {
HXLINE( 665)											action566->addKey(key566,state566);
            										}
            									}
            								}
HXDLIN( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action567 = this->_ui_rightP;
HXDLIN( 665)									int state567 = 2;
HXDLIN( 665)									int _g609 = 0;
HXDLIN( 665)									while((_g609 < copyKeys20->length)){
HXLINE( 665)										int key567 = copyKeys20->__get(_g609);
HXDLIN( 665)										_g609 = (_g609 + 1);
HXDLIN( 665)										if ((key567 != -1)) {
HXLINE( 665)											action567->addKey(key567,state567);
            										}
            									}
            								}
HXDLIN( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action568 = this->_ui_rightR;
HXDLIN( 665)									int state568 = -1;
HXDLIN( 665)									int _g610 = 0;
HXDLIN( 665)									while((_g610 < copyKeys20->length)){
HXLINE( 665)										int key568 = copyKeys20->__get(_g610);
HXDLIN( 665)										_g610 = (_g610 + 1);
HXDLIN( 665)										if ((key568 != -1)) {
HXLINE( 665)											action568->addKey(key568,state568);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action569 = this->_ui_down;
HXDLIN( 665)									int state569 = 1;
HXDLIN( 665)									int _g611 = 0;
HXDLIN( 665)									while((_g611 < copyKeys20->length)){
HXLINE( 665)										int key569 = copyKeys20->__get(_g611);
HXDLIN( 665)										_g611 = (_g611 + 1);
HXDLIN( 665)										if ((key569 != -1)) {
HXLINE( 665)											action569->addKey(key569,state569);
            										}
            									}
            								}
HXDLIN( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action570 = this->_ui_downP;
HXDLIN( 665)									int state570 = 2;
HXDLIN( 665)									int _g612 = 0;
HXDLIN( 665)									while((_g612 < copyKeys20->length)){
HXLINE( 665)										int key570 = copyKeys20->__get(_g612);
HXDLIN( 665)										_g612 = (_g612 + 1);
HXDLIN( 665)										if ((key570 != -1)) {
HXLINE( 665)											action570->addKey(key570,state570);
            										}
            									}
            								}
HXDLIN( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action571 = this->_ui_downR;
HXDLIN( 665)									int state571 = -1;
HXDLIN( 665)									int _g613 = 0;
HXDLIN( 665)									while((_g613 < copyKeys20->length)){
HXLINE( 665)										int key571 = copyKeys20->__get(_g613);
HXDLIN( 665)										_g613 = (_g613 + 1);
HXDLIN( 665)										if ((key571 != -1)) {
HXLINE( 665)											action571->addKey(key571,state571);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action572 = this->_note_up;
HXDLIN( 665)									int state572 = 1;
HXDLIN( 665)									int _g614 = 0;
HXDLIN( 665)									while((_g614 < copyKeys20->length)){
HXLINE( 665)										int key572 = copyKeys20->__get(_g614);
HXDLIN( 665)										_g614 = (_g614 + 1);
HXDLIN( 665)										if ((key572 != -1)) {
HXLINE( 665)											action572->addKey(key572,state572);
            										}
            									}
            								}
HXDLIN( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action573 = this->_note_upP;
HXDLIN( 665)									int state573 = 2;
HXDLIN( 665)									int _g615 = 0;
HXDLIN( 665)									while((_g615 < copyKeys20->length)){
HXLINE( 665)										int key573 = copyKeys20->__get(_g615);
HXDLIN( 665)										_g615 = (_g615 + 1);
HXDLIN( 665)										if ((key573 != -1)) {
HXLINE( 665)											action573->addKey(key573,state573);
            										}
            									}
            								}
HXDLIN( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action574 = this->_note_upR;
HXDLIN( 665)									int state574 = -1;
HXDLIN( 665)									int _g616 = 0;
HXDLIN( 665)									while((_g616 < copyKeys20->length)){
HXLINE( 665)										int key574 = copyKeys20->__get(_g616);
HXDLIN( 665)										_g616 = (_g616 + 1);
HXDLIN( 665)										if ((key574 != -1)) {
HXLINE( 665)											action574->addKey(key574,state574);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action575 = this->_note_left;
HXDLIN( 665)									int state575 = 1;
HXDLIN( 665)									int _g617 = 0;
HXDLIN( 665)									while((_g617 < copyKeys20->length)){
HXLINE( 665)										int key575 = copyKeys20->__get(_g617);
HXDLIN( 665)										_g617 = (_g617 + 1);
HXDLIN( 665)										if ((key575 != -1)) {
HXLINE( 665)											action575->addKey(key575,state575);
            										}
            									}
            								}
HXDLIN( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action576 = this->_note_leftP;
HXDLIN( 665)									int state576 = 2;
HXDLIN( 665)									int _g618 = 0;
HXDLIN( 665)									while((_g618 < copyKeys20->length)){
HXLINE( 665)										int key576 = copyKeys20->__get(_g618);
HXDLIN( 665)										_g618 = (_g618 + 1);
HXDLIN( 665)										if ((key576 != -1)) {
HXLINE( 665)											action576->addKey(key576,state576);
            										}
            									}
            								}
HXDLIN( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action577 = this->_note_leftR;
HXDLIN( 665)									int state577 = -1;
HXDLIN( 665)									int _g619 = 0;
HXDLIN( 665)									while((_g619 < copyKeys20->length)){
HXLINE( 665)										int key577 = copyKeys20->__get(_g619);
HXDLIN( 665)										_g619 = (_g619 + 1);
HXDLIN( 665)										if ((key577 != -1)) {
HXLINE( 665)											action577->addKey(key577,state577);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action578 = this->_note_right;
HXDLIN( 665)									int state578 = 1;
HXDLIN( 665)									int _g620 = 0;
HXDLIN( 665)									while((_g620 < copyKeys20->length)){
HXLINE( 665)										int key578 = copyKeys20->__get(_g620);
HXDLIN( 665)										_g620 = (_g620 + 1);
HXDLIN( 665)										if ((key578 != -1)) {
HXLINE( 665)											action578->addKey(key578,state578);
            										}
            									}
            								}
HXDLIN( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action579 = this->_note_rightP;
HXDLIN( 665)									int state579 = 2;
HXDLIN( 665)									int _g621 = 0;
HXDLIN( 665)									while((_g621 < copyKeys20->length)){
HXLINE( 665)										int key579 = copyKeys20->__get(_g621);
HXDLIN( 665)										_g621 = (_g621 + 1);
HXDLIN( 665)										if ((key579 != -1)) {
HXLINE( 665)											action579->addKey(key579,state579);
            										}
            									}
            								}
HXDLIN( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action580 = this->_note_rightR;
HXDLIN( 665)									int state580 = -1;
HXDLIN( 665)									int _g622 = 0;
HXDLIN( 665)									while((_g622 < copyKeys20->length)){
HXLINE( 665)										int key580 = copyKeys20->__get(_g622);
HXDLIN( 665)										_g622 = (_g622 + 1);
HXDLIN( 665)										if ((key580 != -1)) {
HXLINE( 665)											action580->addKey(key580,state580);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action581 = this->_note_down;
HXDLIN( 665)									int state581 = 1;
HXDLIN( 665)									int _g623 = 0;
HXDLIN( 665)									while((_g623 < copyKeys20->length)){
HXLINE( 665)										int key581 = copyKeys20->__get(_g623);
HXDLIN( 665)										_g623 = (_g623 + 1);
HXDLIN( 665)										if ((key581 != -1)) {
HXLINE( 665)											action581->addKey(key581,state581);
            										}
            									}
            								}
HXDLIN( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action582 = this->_note_downP;
HXDLIN( 665)									int state582 = 2;
HXDLIN( 665)									int _g624 = 0;
HXDLIN( 665)									while((_g624 < copyKeys20->length)){
HXLINE( 665)										int key582 = copyKeys20->__get(_g624);
HXDLIN( 665)										_g624 = (_g624 + 1);
HXDLIN( 665)										if ((key582 != -1)) {
HXLINE( 665)											action582->addKey(key582,state582);
            										}
            									}
            								}
HXDLIN( 665)								{
HXLINE( 665)									 ::flixel::input::actions::FlxActionDigital action583 = this->_note_downR;
HXDLIN( 665)									int state583 = -1;
HXDLIN( 665)									int _g625 = 0;
HXDLIN( 665)									while((_g625 < copyKeys20->length)){
HXLINE( 665)										int key583 = copyKeys20->__get(_g625);
HXDLIN( 665)										_g625 = (_g625 + 1);
HXDLIN( 665)										if ((key583 != -1)) {
HXLINE( 665)											action583->addKey(key583,state583);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 665)								 ::flixel::input::actions::FlxActionDigital action584 = this->_reset;
HXDLIN( 665)								int state584 = 2;
HXDLIN( 665)								int _g626 = 0;
HXDLIN( 665)								while((_g626 < copyKeys20->length)){
HXLINE( 665)									int key584 = copyKeys20->__get(_g626);
HXDLIN( 665)									_g626 = (_g626 + 1);
HXDLIN( 665)									if ((key584 != -1)) {
HXLINE( 665)										action584->addKey(key584,state584);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 665)								 ::flixel::input::actions::FlxActionDigital action585 = this->_accept;
HXDLIN( 665)								int state585 = 2;
HXDLIN( 665)								int _g627 = 0;
HXDLIN( 665)								while((_g627 < copyKeys20->length)){
HXLINE( 665)									int key585 = copyKeys20->__get(_g627);
HXDLIN( 665)									_g627 = (_g627 + 1);
HXDLIN( 665)									if ((key585 != -1)) {
HXLINE( 665)										action585->addKey(key585,state585);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 665)								 ::flixel::input::actions::FlxActionDigital action586 = this->_back;
HXDLIN( 665)								int state586 = 2;
HXDLIN( 665)								int _g628 = 0;
HXDLIN( 665)								while((_g628 < copyKeys20->length)){
HXLINE( 665)									int key586 = copyKeys20->__get(_g628);
HXDLIN( 665)									_g628 = (_g628 + 1);
HXDLIN( 665)									if ((key586 != -1)) {
HXLINE( 665)										action586->addKey(key586,state586);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 665)								 ::flixel::input::actions::FlxActionDigital action587 = this->_pause;
HXDLIN( 665)								int state587 = 2;
HXDLIN( 665)								int _g629 = 0;
HXDLIN( 665)								while((_g629 < copyKeys20->length)){
HXLINE( 665)									int key587 = copyKeys20->__get(_g629);
HXDLIN( 665)									_g629 = (_g629 + 1);
HXDLIN( 665)									if ((key587 != -1)) {
HXLINE( 665)										action587->addKey(key587,state587);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 666)					{
HXLINE( 666)						::Array< int > copyKeys21 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1129,2)->copy();
HXDLIN( 666)						{
HXLINE( 666)							int _g630 = 0;
HXDLIN( 666)							int _g631 = copyKeys21->length;
HXDLIN( 666)							while((_g630 < _g631)){
HXLINE( 666)								_g630 = (_g630 + 1);
HXDLIN( 666)								int i21 = (_g630 - 1);
HXDLIN( 666)								if ((i21 == -1)) {
HXLINE( 666)									copyKeys21->remove(i21);
            								}
            							}
            						}
HXDLIN( 666)						switch((int)(::Control_obj::BACK_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action588 = this->_ui_up;
HXDLIN( 666)									int state588 = 1;
HXDLIN( 666)									int _g632 = 0;
HXDLIN( 666)									while((_g632 < copyKeys21->length)){
HXLINE( 666)										int key588 = copyKeys21->__get(_g632);
HXDLIN( 666)										_g632 = (_g632 + 1);
HXDLIN( 666)										if ((key588 != -1)) {
HXLINE( 666)											action588->addKey(key588,state588);
            										}
            									}
            								}
HXDLIN( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action589 = this->_ui_upP;
HXDLIN( 666)									int state589 = 2;
HXDLIN( 666)									int _g633 = 0;
HXDLIN( 666)									while((_g633 < copyKeys21->length)){
HXLINE( 666)										int key589 = copyKeys21->__get(_g633);
HXDLIN( 666)										_g633 = (_g633 + 1);
HXDLIN( 666)										if ((key589 != -1)) {
HXLINE( 666)											action589->addKey(key589,state589);
            										}
            									}
            								}
HXDLIN( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action590 = this->_ui_upR;
HXDLIN( 666)									int state590 = -1;
HXDLIN( 666)									int _g634 = 0;
HXDLIN( 666)									while((_g634 < copyKeys21->length)){
HXLINE( 666)										int key590 = copyKeys21->__get(_g634);
HXDLIN( 666)										_g634 = (_g634 + 1);
HXDLIN( 666)										if ((key590 != -1)) {
HXLINE( 666)											action590->addKey(key590,state590);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action591 = this->_ui_left;
HXDLIN( 666)									int state591 = 1;
HXDLIN( 666)									int _g635 = 0;
HXDLIN( 666)									while((_g635 < copyKeys21->length)){
HXLINE( 666)										int key591 = copyKeys21->__get(_g635);
HXDLIN( 666)										_g635 = (_g635 + 1);
HXDLIN( 666)										if ((key591 != -1)) {
HXLINE( 666)											action591->addKey(key591,state591);
            										}
            									}
            								}
HXDLIN( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action592 = this->_ui_leftP;
HXDLIN( 666)									int state592 = 2;
HXDLIN( 666)									int _g636 = 0;
HXDLIN( 666)									while((_g636 < copyKeys21->length)){
HXLINE( 666)										int key592 = copyKeys21->__get(_g636);
HXDLIN( 666)										_g636 = (_g636 + 1);
HXDLIN( 666)										if ((key592 != -1)) {
HXLINE( 666)											action592->addKey(key592,state592);
            										}
            									}
            								}
HXDLIN( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action593 = this->_ui_leftR;
HXDLIN( 666)									int state593 = -1;
HXDLIN( 666)									int _g637 = 0;
HXDLIN( 666)									while((_g637 < copyKeys21->length)){
HXLINE( 666)										int key593 = copyKeys21->__get(_g637);
HXDLIN( 666)										_g637 = (_g637 + 1);
HXDLIN( 666)										if ((key593 != -1)) {
HXLINE( 666)											action593->addKey(key593,state593);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action594 = this->_ui_right;
HXDLIN( 666)									int state594 = 1;
HXDLIN( 666)									int _g638 = 0;
HXDLIN( 666)									while((_g638 < copyKeys21->length)){
HXLINE( 666)										int key594 = copyKeys21->__get(_g638);
HXDLIN( 666)										_g638 = (_g638 + 1);
HXDLIN( 666)										if ((key594 != -1)) {
HXLINE( 666)											action594->addKey(key594,state594);
            										}
            									}
            								}
HXDLIN( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action595 = this->_ui_rightP;
HXDLIN( 666)									int state595 = 2;
HXDLIN( 666)									int _g639 = 0;
HXDLIN( 666)									while((_g639 < copyKeys21->length)){
HXLINE( 666)										int key595 = copyKeys21->__get(_g639);
HXDLIN( 666)										_g639 = (_g639 + 1);
HXDLIN( 666)										if ((key595 != -1)) {
HXLINE( 666)											action595->addKey(key595,state595);
            										}
            									}
            								}
HXDLIN( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action596 = this->_ui_rightR;
HXDLIN( 666)									int state596 = -1;
HXDLIN( 666)									int _g640 = 0;
HXDLIN( 666)									while((_g640 < copyKeys21->length)){
HXLINE( 666)										int key596 = copyKeys21->__get(_g640);
HXDLIN( 666)										_g640 = (_g640 + 1);
HXDLIN( 666)										if ((key596 != -1)) {
HXLINE( 666)											action596->addKey(key596,state596);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action597 = this->_ui_down;
HXDLIN( 666)									int state597 = 1;
HXDLIN( 666)									int _g641 = 0;
HXDLIN( 666)									while((_g641 < copyKeys21->length)){
HXLINE( 666)										int key597 = copyKeys21->__get(_g641);
HXDLIN( 666)										_g641 = (_g641 + 1);
HXDLIN( 666)										if ((key597 != -1)) {
HXLINE( 666)											action597->addKey(key597,state597);
            										}
            									}
            								}
HXDLIN( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action598 = this->_ui_downP;
HXDLIN( 666)									int state598 = 2;
HXDLIN( 666)									int _g642 = 0;
HXDLIN( 666)									while((_g642 < copyKeys21->length)){
HXLINE( 666)										int key598 = copyKeys21->__get(_g642);
HXDLIN( 666)										_g642 = (_g642 + 1);
HXDLIN( 666)										if ((key598 != -1)) {
HXLINE( 666)											action598->addKey(key598,state598);
            										}
            									}
            								}
HXDLIN( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action599 = this->_ui_downR;
HXDLIN( 666)									int state599 = -1;
HXDLIN( 666)									int _g643 = 0;
HXDLIN( 666)									while((_g643 < copyKeys21->length)){
HXLINE( 666)										int key599 = copyKeys21->__get(_g643);
HXDLIN( 666)										_g643 = (_g643 + 1);
HXDLIN( 666)										if ((key599 != -1)) {
HXLINE( 666)											action599->addKey(key599,state599);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action600 = this->_note_up;
HXDLIN( 666)									int state600 = 1;
HXDLIN( 666)									int _g644 = 0;
HXDLIN( 666)									while((_g644 < copyKeys21->length)){
HXLINE( 666)										int key600 = copyKeys21->__get(_g644);
HXDLIN( 666)										_g644 = (_g644 + 1);
HXDLIN( 666)										if ((key600 != -1)) {
HXLINE( 666)											action600->addKey(key600,state600);
            										}
            									}
            								}
HXDLIN( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action601 = this->_note_upP;
HXDLIN( 666)									int state601 = 2;
HXDLIN( 666)									int _g645 = 0;
HXDLIN( 666)									while((_g645 < copyKeys21->length)){
HXLINE( 666)										int key601 = copyKeys21->__get(_g645);
HXDLIN( 666)										_g645 = (_g645 + 1);
HXDLIN( 666)										if ((key601 != -1)) {
HXLINE( 666)											action601->addKey(key601,state601);
            										}
            									}
            								}
HXDLIN( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action602 = this->_note_upR;
HXDLIN( 666)									int state602 = -1;
HXDLIN( 666)									int _g646 = 0;
HXDLIN( 666)									while((_g646 < copyKeys21->length)){
HXLINE( 666)										int key602 = copyKeys21->__get(_g646);
HXDLIN( 666)										_g646 = (_g646 + 1);
HXDLIN( 666)										if ((key602 != -1)) {
HXLINE( 666)											action602->addKey(key602,state602);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action603 = this->_note_left;
HXDLIN( 666)									int state603 = 1;
HXDLIN( 666)									int _g647 = 0;
HXDLIN( 666)									while((_g647 < copyKeys21->length)){
HXLINE( 666)										int key603 = copyKeys21->__get(_g647);
HXDLIN( 666)										_g647 = (_g647 + 1);
HXDLIN( 666)										if ((key603 != -1)) {
HXLINE( 666)											action603->addKey(key603,state603);
            										}
            									}
            								}
HXDLIN( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action604 = this->_note_leftP;
HXDLIN( 666)									int state604 = 2;
HXDLIN( 666)									int _g648 = 0;
HXDLIN( 666)									while((_g648 < copyKeys21->length)){
HXLINE( 666)										int key604 = copyKeys21->__get(_g648);
HXDLIN( 666)										_g648 = (_g648 + 1);
HXDLIN( 666)										if ((key604 != -1)) {
HXLINE( 666)											action604->addKey(key604,state604);
            										}
            									}
            								}
HXDLIN( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action605 = this->_note_leftR;
HXDLIN( 666)									int state605 = -1;
HXDLIN( 666)									int _g649 = 0;
HXDLIN( 666)									while((_g649 < copyKeys21->length)){
HXLINE( 666)										int key605 = copyKeys21->__get(_g649);
HXDLIN( 666)										_g649 = (_g649 + 1);
HXDLIN( 666)										if ((key605 != -1)) {
HXLINE( 666)											action605->addKey(key605,state605);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action606 = this->_note_right;
HXDLIN( 666)									int state606 = 1;
HXDLIN( 666)									int _g650 = 0;
HXDLIN( 666)									while((_g650 < copyKeys21->length)){
HXLINE( 666)										int key606 = copyKeys21->__get(_g650);
HXDLIN( 666)										_g650 = (_g650 + 1);
HXDLIN( 666)										if ((key606 != -1)) {
HXLINE( 666)											action606->addKey(key606,state606);
            										}
            									}
            								}
HXDLIN( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action607 = this->_note_rightP;
HXDLIN( 666)									int state607 = 2;
HXDLIN( 666)									int _g651 = 0;
HXDLIN( 666)									while((_g651 < copyKeys21->length)){
HXLINE( 666)										int key607 = copyKeys21->__get(_g651);
HXDLIN( 666)										_g651 = (_g651 + 1);
HXDLIN( 666)										if ((key607 != -1)) {
HXLINE( 666)											action607->addKey(key607,state607);
            										}
            									}
            								}
HXDLIN( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action608 = this->_note_rightR;
HXDLIN( 666)									int state608 = -1;
HXDLIN( 666)									int _g652 = 0;
HXDLIN( 666)									while((_g652 < copyKeys21->length)){
HXLINE( 666)										int key608 = copyKeys21->__get(_g652);
HXDLIN( 666)										_g652 = (_g652 + 1);
HXDLIN( 666)										if ((key608 != -1)) {
HXLINE( 666)											action608->addKey(key608,state608);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action609 = this->_note_down;
HXDLIN( 666)									int state609 = 1;
HXDLIN( 666)									int _g653 = 0;
HXDLIN( 666)									while((_g653 < copyKeys21->length)){
HXLINE( 666)										int key609 = copyKeys21->__get(_g653);
HXDLIN( 666)										_g653 = (_g653 + 1);
HXDLIN( 666)										if ((key609 != -1)) {
HXLINE( 666)											action609->addKey(key609,state609);
            										}
            									}
            								}
HXDLIN( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action610 = this->_note_downP;
HXDLIN( 666)									int state610 = 2;
HXDLIN( 666)									int _g654 = 0;
HXDLIN( 666)									while((_g654 < copyKeys21->length)){
HXLINE( 666)										int key610 = copyKeys21->__get(_g654);
HXDLIN( 666)										_g654 = (_g654 + 1);
HXDLIN( 666)										if ((key610 != -1)) {
HXLINE( 666)											action610->addKey(key610,state610);
            										}
            									}
            								}
HXDLIN( 666)								{
HXLINE( 666)									 ::flixel::input::actions::FlxActionDigital action611 = this->_note_downR;
HXDLIN( 666)									int state611 = -1;
HXDLIN( 666)									int _g655 = 0;
HXDLIN( 666)									while((_g655 < copyKeys21->length)){
HXLINE( 666)										int key611 = copyKeys21->__get(_g655);
HXDLIN( 666)										_g655 = (_g655 + 1);
HXDLIN( 666)										if ((key611 != -1)) {
HXLINE( 666)											action611->addKey(key611,state611);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 666)								 ::flixel::input::actions::FlxActionDigital action612 = this->_reset;
HXDLIN( 666)								int state612 = 2;
HXDLIN( 666)								int _g656 = 0;
HXDLIN( 666)								while((_g656 < copyKeys21->length)){
HXLINE( 666)									int key612 = copyKeys21->__get(_g656);
HXDLIN( 666)									_g656 = (_g656 + 1);
HXDLIN( 666)									if ((key612 != -1)) {
HXLINE( 666)										action612->addKey(key612,state612);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 666)								 ::flixel::input::actions::FlxActionDigital action613 = this->_accept;
HXDLIN( 666)								int state613 = 2;
HXDLIN( 666)								int _g657 = 0;
HXDLIN( 666)								while((_g657 < copyKeys21->length)){
HXLINE( 666)									int key613 = copyKeys21->__get(_g657);
HXDLIN( 666)									_g657 = (_g657 + 1);
HXDLIN( 666)									if ((key613 != -1)) {
HXLINE( 666)										action613->addKey(key613,state613);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 666)								 ::flixel::input::actions::FlxActionDigital action614 = this->_back;
HXDLIN( 666)								int state614 = 2;
HXDLIN( 666)								int _g658 = 0;
HXDLIN( 666)								while((_g658 < copyKeys21->length)){
HXLINE( 666)									int key614 = copyKeys21->__get(_g658);
HXDLIN( 666)									_g658 = (_g658 + 1);
HXDLIN( 666)									if ((key614 != -1)) {
HXLINE( 666)										action614->addKey(key614,state614);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 666)								 ::flixel::input::actions::FlxActionDigital action615 = this->_pause;
HXDLIN( 666)								int state615 = 2;
HXDLIN( 666)								int _g659 = 0;
HXDLIN( 666)								while((_g659 < copyKeys21->length)){
HXLINE( 666)									int key615 = copyKeys21->__get(_g659);
HXDLIN( 666)									_g659 = (_g659 + 1);
HXDLIN( 666)									if ((key615 != -1)) {
HXLINE( 666)										action615->addKey(key615,state615);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 667)					{
HXLINE( 667)						::Array< int > copyKeys22 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1130,1)->copy();
HXDLIN( 667)						{
HXLINE( 667)							int _g660 = 0;
HXDLIN( 667)							int _g661 = copyKeys22->length;
HXDLIN( 667)							while((_g660 < _g661)){
HXLINE( 667)								_g660 = (_g660 + 1);
HXDLIN( 667)								int i22 = (_g660 - 1);
HXDLIN( 667)								if ((i22 == -1)) {
HXLINE( 667)									copyKeys22->remove(i22);
            								}
            							}
            						}
HXDLIN( 667)						switch((int)(::Control_obj::PAUSE_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action616 = this->_ui_up;
HXDLIN( 667)									int state616 = 1;
HXDLIN( 667)									int _g662 = 0;
HXDLIN( 667)									while((_g662 < copyKeys22->length)){
HXLINE( 667)										int key616 = copyKeys22->__get(_g662);
HXDLIN( 667)										_g662 = (_g662 + 1);
HXDLIN( 667)										if ((key616 != -1)) {
HXLINE( 667)											action616->addKey(key616,state616);
            										}
            									}
            								}
HXDLIN( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action617 = this->_ui_upP;
HXDLIN( 667)									int state617 = 2;
HXDLIN( 667)									int _g663 = 0;
HXDLIN( 667)									while((_g663 < copyKeys22->length)){
HXLINE( 667)										int key617 = copyKeys22->__get(_g663);
HXDLIN( 667)										_g663 = (_g663 + 1);
HXDLIN( 667)										if ((key617 != -1)) {
HXLINE( 667)											action617->addKey(key617,state617);
            										}
            									}
            								}
HXDLIN( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action618 = this->_ui_upR;
HXDLIN( 667)									int state618 = -1;
HXDLIN( 667)									int _g664 = 0;
HXDLIN( 667)									while((_g664 < copyKeys22->length)){
HXLINE( 667)										int key618 = copyKeys22->__get(_g664);
HXDLIN( 667)										_g664 = (_g664 + 1);
HXDLIN( 667)										if ((key618 != -1)) {
HXLINE( 667)											action618->addKey(key618,state618);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action619 = this->_ui_left;
HXDLIN( 667)									int state619 = 1;
HXDLIN( 667)									int _g665 = 0;
HXDLIN( 667)									while((_g665 < copyKeys22->length)){
HXLINE( 667)										int key619 = copyKeys22->__get(_g665);
HXDLIN( 667)										_g665 = (_g665 + 1);
HXDLIN( 667)										if ((key619 != -1)) {
HXLINE( 667)											action619->addKey(key619,state619);
            										}
            									}
            								}
HXDLIN( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action620 = this->_ui_leftP;
HXDLIN( 667)									int state620 = 2;
HXDLIN( 667)									int _g666 = 0;
HXDLIN( 667)									while((_g666 < copyKeys22->length)){
HXLINE( 667)										int key620 = copyKeys22->__get(_g666);
HXDLIN( 667)										_g666 = (_g666 + 1);
HXDLIN( 667)										if ((key620 != -1)) {
HXLINE( 667)											action620->addKey(key620,state620);
            										}
            									}
            								}
HXDLIN( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action621 = this->_ui_leftR;
HXDLIN( 667)									int state621 = -1;
HXDLIN( 667)									int _g667 = 0;
HXDLIN( 667)									while((_g667 < copyKeys22->length)){
HXLINE( 667)										int key621 = copyKeys22->__get(_g667);
HXDLIN( 667)										_g667 = (_g667 + 1);
HXDLIN( 667)										if ((key621 != -1)) {
HXLINE( 667)											action621->addKey(key621,state621);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action622 = this->_ui_right;
HXDLIN( 667)									int state622 = 1;
HXDLIN( 667)									int _g668 = 0;
HXDLIN( 667)									while((_g668 < copyKeys22->length)){
HXLINE( 667)										int key622 = copyKeys22->__get(_g668);
HXDLIN( 667)										_g668 = (_g668 + 1);
HXDLIN( 667)										if ((key622 != -1)) {
HXLINE( 667)											action622->addKey(key622,state622);
            										}
            									}
            								}
HXDLIN( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action623 = this->_ui_rightP;
HXDLIN( 667)									int state623 = 2;
HXDLIN( 667)									int _g669 = 0;
HXDLIN( 667)									while((_g669 < copyKeys22->length)){
HXLINE( 667)										int key623 = copyKeys22->__get(_g669);
HXDLIN( 667)										_g669 = (_g669 + 1);
HXDLIN( 667)										if ((key623 != -1)) {
HXLINE( 667)											action623->addKey(key623,state623);
            										}
            									}
            								}
HXDLIN( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action624 = this->_ui_rightR;
HXDLIN( 667)									int state624 = -1;
HXDLIN( 667)									int _g670 = 0;
HXDLIN( 667)									while((_g670 < copyKeys22->length)){
HXLINE( 667)										int key624 = copyKeys22->__get(_g670);
HXDLIN( 667)										_g670 = (_g670 + 1);
HXDLIN( 667)										if ((key624 != -1)) {
HXLINE( 667)											action624->addKey(key624,state624);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action625 = this->_ui_down;
HXDLIN( 667)									int state625 = 1;
HXDLIN( 667)									int _g671 = 0;
HXDLIN( 667)									while((_g671 < copyKeys22->length)){
HXLINE( 667)										int key625 = copyKeys22->__get(_g671);
HXDLIN( 667)										_g671 = (_g671 + 1);
HXDLIN( 667)										if ((key625 != -1)) {
HXLINE( 667)											action625->addKey(key625,state625);
            										}
            									}
            								}
HXDLIN( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action626 = this->_ui_downP;
HXDLIN( 667)									int state626 = 2;
HXDLIN( 667)									int _g672 = 0;
HXDLIN( 667)									while((_g672 < copyKeys22->length)){
HXLINE( 667)										int key626 = copyKeys22->__get(_g672);
HXDLIN( 667)										_g672 = (_g672 + 1);
HXDLIN( 667)										if ((key626 != -1)) {
HXLINE( 667)											action626->addKey(key626,state626);
            										}
            									}
            								}
HXDLIN( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action627 = this->_ui_downR;
HXDLIN( 667)									int state627 = -1;
HXDLIN( 667)									int _g673 = 0;
HXDLIN( 667)									while((_g673 < copyKeys22->length)){
HXLINE( 667)										int key627 = copyKeys22->__get(_g673);
HXDLIN( 667)										_g673 = (_g673 + 1);
HXDLIN( 667)										if ((key627 != -1)) {
HXLINE( 667)											action627->addKey(key627,state627);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action628 = this->_note_up;
HXDLIN( 667)									int state628 = 1;
HXDLIN( 667)									int _g674 = 0;
HXDLIN( 667)									while((_g674 < copyKeys22->length)){
HXLINE( 667)										int key628 = copyKeys22->__get(_g674);
HXDLIN( 667)										_g674 = (_g674 + 1);
HXDLIN( 667)										if ((key628 != -1)) {
HXLINE( 667)											action628->addKey(key628,state628);
            										}
            									}
            								}
HXDLIN( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action629 = this->_note_upP;
HXDLIN( 667)									int state629 = 2;
HXDLIN( 667)									int _g675 = 0;
HXDLIN( 667)									while((_g675 < copyKeys22->length)){
HXLINE( 667)										int key629 = copyKeys22->__get(_g675);
HXDLIN( 667)										_g675 = (_g675 + 1);
HXDLIN( 667)										if ((key629 != -1)) {
HXLINE( 667)											action629->addKey(key629,state629);
            										}
            									}
            								}
HXDLIN( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action630 = this->_note_upR;
HXDLIN( 667)									int state630 = -1;
HXDLIN( 667)									int _g676 = 0;
HXDLIN( 667)									while((_g676 < copyKeys22->length)){
HXLINE( 667)										int key630 = copyKeys22->__get(_g676);
HXDLIN( 667)										_g676 = (_g676 + 1);
HXDLIN( 667)										if ((key630 != -1)) {
HXLINE( 667)											action630->addKey(key630,state630);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action631 = this->_note_left;
HXDLIN( 667)									int state631 = 1;
HXDLIN( 667)									int _g677 = 0;
HXDLIN( 667)									while((_g677 < copyKeys22->length)){
HXLINE( 667)										int key631 = copyKeys22->__get(_g677);
HXDLIN( 667)										_g677 = (_g677 + 1);
HXDLIN( 667)										if ((key631 != -1)) {
HXLINE( 667)											action631->addKey(key631,state631);
            										}
            									}
            								}
HXDLIN( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action632 = this->_note_leftP;
HXDLIN( 667)									int state632 = 2;
HXDLIN( 667)									int _g678 = 0;
HXDLIN( 667)									while((_g678 < copyKeys22->length)){
HXLINE( 667)										int key632 = copyKeys22->__get(_g678);
HXDLIN( 667)										_g678 = (_g678 + 1);
HXDLIN( 667)										if ((key632 != -1)) {
HXLINE( 667)											action632->addKey(key632,state632);
            										}
            									}
            								}
HXDLIN( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action633 = this->_note_leftR;
HXDLIN( 667)									int state633 = -1;
HXDLIN( 667)									int _g679 = 0;
HXDLIN( 667)									while((_g679 < copyKeys22->length)){
HXLINE( 667)										int key633 = copyKeys22->__get(_g679);
HXDLIN( 667)										_g679 = (_g679 + 1);
HXDLIN( 667)										if ((key633 != -1)) {
HXLINE( 667)											action633->addKey(key633,state633);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action634 = this->_note_right;
HXDLIN( 667)									int state634 = 1;
HXDLIN( 667)									int _g680 = 0;
HXDLIN( 667)									while((_g680 < copyKeys22->length)){
HXLINE( 667)										int key634 = copyKeys22->__get(_g680);
HXDLIN( 667)										_g680 = (_g680 + 1);
HXDLIN( 667)										if ((key634 != -1)) {
HXLINE( 667)											action634->addKey(key634,state634);
            										}
            									}
            								}
HXDLIN( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action635 = this->_note_rightP;
HXDLIN( 667)									int state635 = 2;
HXDLIN( 667)									int _g681 = 0;
HXDLIN( 667)									while((_g681 < copyKeys22->length)){
HXLINE( 667)										int key635 = copyKeys22->__get(_g681);
HXDLIN( 667)										_g681 = (_g681 + 1);
HXDLIN( 667)										if ((key635 != -1)) {
HXLINE( 667)											action635->addKey(key635,state635);
            										}
            									}
            								}
HXDLIN( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action636 = this->_note_rightR;
HXDLIN( 667)									int state636 = -1;
HXDLIN( 667)									int _g682 = 0;
HXDLIN( 667)									while((_g682 < copyKeys22->length)){
HXLINE( 667)										int key636 = copyKeys22->__get(_g682);
HXDLIN( 667)										_g682 = (_g682 + 1);
HXDLIN( 667)										if ((key636 != -1)) {
HXLINE( 667)											action636->addKey(key636,state636);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action637 = this->_note_down;
HXDLIN( 667)									int state637 = 1;
HXDLIN( 667)									int _g683 = 0;
HXDLIN( 667)									while((_g683 < copyKeys22->length)){
HXLINE( 667)										int key637 = copyKeys22->__get(_g683);
HXDLIN( 667)										_g683 = (_g683 + 1);
HXDLIN( 667)										if ((key637 != -1)) {
HXLINE( 667)											action637->addKey(key637,state637);
            										}
            									}
            								}
HXDLIN( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action638 = this->_note_downP;
HXDLIN( 667)									int state638 = 2;
HXDLIN( 667)									int _g684 = 0;
HXDLIN( 667)									while((_g684 < copyKeys22->length)){
HXLINE( 667)										int key638 = copyKeys22->__get(_g684);
HXDLIN( 667)										_g684 = (_g684 + 1);
HXDLIN( 667)										if ((key638 != -1)) {
HXLINE( 667)											action638->addKey(key638,state638);
            										}
            									}
            								}
HXDLIN( 667)								{
HXLINE( 667)									 ::flixel::input::actions::FlxActionDigital action639 = this->_note_downR;
HXDLIN( 667)									int state639 = -1;
HXDLIN( 667)									int _g685 = 0;
HXDLIN( 667)									while((_g685 < copyKeys22->length)){
HXLINE( 667)										int key639 = copyKeys22->__get(_g685);
HXDLIN( 667)										_g685 = (_g685 + 1);
HXDLIN( 667)										if ((key639 != -1)) {
HXLINE( 667)											action639->addKey(key639,state639);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 667)								 ::flixel::input::actions::FlxActionDigital action640 = this->_reset;
HXDLIN( 667)								int state640 = 2;
HXDLIN( 667)								int _g686 = 0;
HXDLIN( 667)								while((_g686 < copyKeys22->length)){
HXLINE( 667)									int key640 = copyKeys22->__get(_g686);
HXDLIN( 667)									_g686 = (_g686 + 1);
HXDLIN( 667)									if ((key640 != -1)) {
HXLINE( 667)										action640->addKey(key640,state640);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 667)								 ::flixel::input::actions::FlxActionDigital action641 = this->_accept;
HXDLIN( 667)								int state641 = 2;
HXDLIN( 667)								int _g687 = 0;
HXDLIN( 667)								while((_g687 < copyKeys22->length)){
HXLINE( 667)									int key641 = copyKeys22->__get(_g687);
HXDLIN( 667)									_g687 = (_g687 + 1);
HXDLIN( 667)									if ((key641 != -1)) {
HXLINE( 667)										action641->addKey(key641,state641);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 667)								 ::flixel::input::actions::FlxActionDigital action642 = this->_back;
HXDLIN( 667)								int state642 = 2;
HXDLIN( 667)								int _g688 = 0;
HXDLIN( 667)								while((_g688 < copyKeys22->length)){
HXLINE( 667)									int key642 = copyKeys22->__get(_g688);
HXDLIN( 667)									_g688 = (_g688 + 1);
HXDLIN( 667)									if ((key642 != -1)) {
HXLINE( 667)										action642->addKey(key642,state642);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 667)								 ::flixel::input::actions::FlxActionDigital action643 = this->_pause;
HXDLIN( 667)								int state643 = 2;
HXDLIN( 667)								int _g689 = 0;
HXDLIN( 667)								while((_g689 < copyKeys22->length)){
HXLINE( 667)									int key643 = copyKeys22->__get(_g689);
HXDLIN( 667)									_g689 = (_g689 + 1);
HXDLIN( 667)									if ((key643 != -1)) {
HXLINE( 667)										action643->addKey(key643,state643);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 668)					{
HXLINE( 668)						::Array< int > copyKeys23 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1131,1)->copy();
HXDLIN( 668)						{
HXLINE( 668)							int _g690 = 0;
HXDLIN( 668)							int _g691 = copyKeys23->length;
HXDLIN( 668)							while((_g690 < _g691)){
HXLINE( 668)								_g690 = (_g690 + 1);
HXDLIN( 668)								int i23 = (_g690 - 1);
HXDLIN( 668)								if ((i23 == -1)) {
HXLINE( 668)									copyKeys23->remove(i23);
            								}
            							}
            						}
HXDLIN( 668)						switch((int)(::Control_obj::RESET_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action644 = this->_ui_up;
HXDLIN( 668)									int state644 = 1;
HXDLIN( 668)									int _g692 = 0;
HXDLIN( 668)									while((_g692 < copyKeys23->length)){
HXLINE( 668)										int key644 = copyKeys23->__get(_g692);
HXDLIN( 668)										_g692 = (_g692 + 1);
HXDLIN( 668)										if ((key644 != -1)) {
HXLINE( 668)											action644->addKey(key644,state644);
            										}
            									}
            								}
HXDLIN( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action645 = this->_ui_upP;
HXDLIN( 668)									int state645 = 2;
HXDLIN( 668)									int _g693 = 0;
HXDLIN( 668)									while((_g693 < copyKeys23->length)){
HXLINE( 668)										int key645 = copyKeys23->__get(_g693);
HXDLIN( 668)										_g693 = (_g693 + 1);
HXDLIN( 668)										if ((key645 != -1)) {
HXLINE( 668)											action645->addKey(key645,state645);
            										}
            									}
            								}
HXDLIN( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action646 = this->_ui_upR;
HXDLIN( 668)									int state646 = -1;
HXDLIN( 668)									int _g694 = 0;
HXDLIN( 668)									while((_g694 < copyKeys23->length)){
HXLINE( 668)										int key646 = copyKeys23->__get(_g694);
HXDLIN( 668)										_g694 = (_g694 + 1);
HXDLIN( 668)										if ((key646 != -1)) {
HXLINE( 668)											action646->addKey(key646,state646);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action647 = this->_ui_left;
HXDLIN( 668)									int state647 = 1;
HXDLIN( 668)									int _g695 = 0;
HXDLIN( 668)									while((_g695 < copyKeys23->length)){
HXLINE( 668)										int key647 = copyKeys23->__get(_g695);
HXDLIN( 668)										_g695 = (_g695 + 1);
HXDLIN( 668)										if ((key647 != -1)) {
HXLINE( 668)											action647->addKey(key647,state647);
            										}
            									}
            								}
HXDLIN( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action648 = this->_ui_leftP;
HXDLIN( 668)									int state648 = 2;
HXDLIN( 668)									int _g696 = 0;
HXDLIN( 668)									while((_g696 < copyKeys23->length)){
HXLINE( 668)										int key648 = copyKeys23->__get(_g696);
HXDLIN( 668)										_g696 = (_g696 + 1);
HXDLIN( 668)										if ((key648 != -1)) {
HXLINE( 668)											action648->addKey(key648,state648);
            										}
            									}
            								}
HXDLIN( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action649 = this->_ui_leftR;
HXDLIN( 668)									int state649 = -1;
HXDLIN( 668)									int _g697 = 0;
HXDLIN( 668)									while((_g697 < copyKeys23->length)){
HXLINE( 668)										int key649 = copyKeys23->__get(_g697);
HXDLIN( 668)										_g697 = (_g697 + 1);
HXDLIN( 668)										if ((key649 != -1)) {
HXLINE( 668)											action649->addKey(key649,state649);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action650 = this->_ui_right;
HXDLIN( 668)									int state650 = 1;
HXDLIN( 668)									int _g698 = 0;
HXDLIN( 668)									while((_g698 < copyKeys23->length)){
HXLINE( 668)										int key650 = copyKeys23->__get(_g698);
HXDLIN( 668)										_g698 = (_g698 + 1);
HXDLIN( 668)										if ((key650 != -1)) {
HXLINE( 668)											action650->addKey(key650,state650);
            										}
            									}
            								}
HXDLIN( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action651 = this->_ui_rightP;
HXDLIN( 668)									int state651 = 2;
HXDLIN( 668)									int _g699 = 0;
HXDLIN( 668)									while((_g699 < copyKeys23->length)){
HXLINE( 668)										int key651 = copyKeys23->__get(_g699);
HXDLIN( 668)										_g699 = (_g699 + 1);
HXDLIN( 668)										if ((key651 != -1)) {
HXLINE( 668)											action651->addKey(key651,state651);
            										}
            									}
            								}
HXDLIN( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action652 = this->_ui_rightR;
HXDLIN( 668)									int state652 = -1;
HXDLIN( 668)									int _g700 = 0;
HXDLIN( 668)									while((_g700 < copyKeys23->length)){
HXLINE( 668)										int key652 = copyKeys23->__get(_g700);
HXDLIN( 668)										_g700 = (_g700 + 1);
HXDLIN( 668)										if ((key652 != -1)) {
HXLINE( 668)											action652->addKey(key652,state652);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action653 = this->_ui_down;
HXDLIN( 668)									int state653 = 1;
HXDLIN( 668)									int _g701 = 0;
HXDLIN( 668)									while((_g701 < copyKeys23->length)){
HXLINE( 668)										int key653 = copyKeys23->__get(_g701);
HXDLIN( 668)										_g701 = (_g701 + 1);
HXDLIN( 668)										if ((key653 != -1)) {
HXLINE( 668)											action653->addKey(key653,state653);
            										}
            									}
            								}
HXDLIN( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action654 = this->_ui_downP;
HXDLIN( 668)									int state654 = 2;
HXDLIN( 668)									int _g702 = 0;
HXDLIN( 668)									while((_g702 < copyKeys23->length)){
HXLINE( 668)										int key654 = copyKeys23->__get(_g702);
HXDLIN( 668)										_g702 = (_g702 + 1);
HXDLIN( 668)										if ((key654 != -1)) {
HXLINE( 668)											action654->addKey(key654,state654);
            										}
            									}
            								}
HXDLIN( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action655 = this->_ui_downR;
HXDLIN( 668)									int state655 = -1;
HXDLIN( 668)									int _g703 = 0;
HXDLIN( 668)									while((_g703 < copyKeys23->length)){
HXLINE( 668)										int key655 = copyKeys23->__get(_g703);
HXDLIN( 668)										_g703 = (_g703 + 1);
HXDLIN( 668)										if ((key655 != -1)) {
HXLINE( 668)											action655->addKey(key655,state655);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action656 = this->_note_up;
HXDLIN( 668)									int state656 = 1;
HXDLIN( 668)									int _g704 = 0;
HXDLIN( 668)									while((_g704 < copyKeys23->length)){
HXLINE( 668)										int key656 = copyKeys23->__get(_g704);
HXDLIN( 668)										_g704 = (_g704 + 1);
HXDLIN( 668)										if ((key656 != -1)) {
HXLINE( 668)											action656->addKey(key656,state656);
            										}
            									}
            								}
HXDLIN( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action657 = this->_note_upP;
HXDLIN( 668)									int state657 = 2;
HXDLIN( 668)									int _g705 = 0;
HXDLIN( 668)									while((_g705 < copyKeys23->length)){
HXLINE( 668)										int key657 = copyKeys23->__get(_g705);
HXDLIN( 668)										_g705 = (_g705 + 1);
HXDLIN( 668)										if ((key657 != -1)) {
HXLINE( 668)											action657->addKey(key657,state657);
            										}
            									}
            								}
HXDLIN( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action658 = this->_note_upR;
HXDLIN( 668)									int state658 = -1;
HXDLIN( 668)									int _g706 = 0;
HXDLIN( 668)									while((_g706 < copyKeys23->length)){
HXLINE( 668)										int key658 = copyKeys23->__get(_g706);
HXDLIN( 668)										_g706 = (_g706 + 1);
HXDLIN( 668)										if ((key658 != -1)) {
HXLINE( 668)											action658->addKey(key658,state658);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action659 = this->_note_left;
HXDLIN( 668)									int state659 = 1;
HXDLIN( 668)									int _g707 = 0;
HXDLIN( 668)									while((_g707 < copyKeys23->length)){
HXLINE( 668)										int key659 = copyKeys23->__get(_g707);
HXDLIN( 668)										_g707 = (_g707 + 1);
HXDLIN( 668)										if ((key659 != -1)) {
HXLINE( 668)											action659->addKey(key659,state659);
            										}
            									}
            								}
HXDLIN( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action660 = this->_note_leftP;
HXDLIN( 668)									int state660 = 2;
HXDLIN( 668)									int _g708 = 0;
HXDLIN( 668)									while((_g708 < copyKeys23->length)){
HXLINE( 668)										int key660 = copyKeys23->__get(_g708);
HXDLIN( 668)										_g708 = (_g708 + 1);
HXDLIN( 668)										if ((key660 != -1)) {
HXLINE( 668)											action660->addKey(key660,state660);
            										}
            									}
            								}
HXDLIN( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action661 = this->_note_leftR;
HXDLIN( 668)									int state661 = -1;
HXDLIN( 668)									int _g709 = 0;
HXDLIN( 668)									while((_g709 < copyKeys23->length)){
HXLINE( 668)										int key661 = copyKeys23->__get(_g709);
HXDLIN( 668)										_g709 = (_g709 + 1);
HXDLIN( 668)										if ((key661 != -1)) {
HXLINE( 668)											action661->addKey(key661,state661);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action662 = this->_note_right;
HXDLIN( 668)									int state662 = 1;
HXDLIN( 668)									int _g710 = 0;
HXDLIN( 668)									while((_g710 < copyKeys23->length)){
HXLINE( 668)										int key662 = copyKeys23->__get(_g710);
HXDLIN( 668)										_g710 = (_g710 + 1);
HXDLIN( 668)										if ((key662 != -1)) {
HXLINE( 668)											action662->addKey(key662,state662);
            										}
            									}
            								}
HXDLIN( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action663 = this->_note_rightP;
HXDLIN( 668)									int state663 = 2;
HXDLIN( 668)									int _g711 = 0;
HXDLIN( 668)									while((_g711 < copyKeys23->length)){
HXLINE( 668)										int key663 = copyKeys23->__get(_g711);
HXDLIN( 668)										_g711 = (_g711 + 1);
HXDLIN( 668)										if ((key663 != -1)) {
HXLINE( 668)											action663->addKey(key663,state663);
            										}
            									}
            								}
HXDLIN( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action664 = this->_note_rightR;
HXDLIN( 668)									int state664 = -1;
HXDLIN( 668)									int _g712 = 0;
HXDLIN( 668)									while((_g712 < copyKeys23->length)){
HXLINE( 668)										int key664 = copyKeys23->__get(_g712);
HXDLIN( 668)										_g712 = (_g712 + 1);
HXDLIN( 668)										if ((key664 != -1)) {
HXLINE( 668)											action664->addKey(key664,state664);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action665 = this->_note_down;
HXDLIN( 668)									int state665 = 1;
HXDLIN( 668)									int _g713 = 0;
HXDLIN( 668)									while((_g713 < copyKeys23->length)){
HXLINE( 668)										int key665 = copyKeys23->__get(_g713);
HXDLIN( 668)										_g713 = (_g713 + 1);
HXDLIN( 668)										if ((key665 != -1)) {
HXLINE( 668)											action665->addKey(key665,state665);
            										}
            									}
            								}
HXDLIN( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action666 = this->_note_downP;
HXDLIN( 668)									int state666 = 2;
HXDLIN( 668)									int _g714 = 0;
HXDLIN( 668)									while((_g714 < copyKeys23->length)){
HXLINE( 668)										int key666 = copyKeys23->__get(_g714);
HXDLIN( 668)										_g714 = (_g714 + 1);
HXDLIN( 668)										if ((key666 != -1)) {
HXLINE( 668)											action666->addKey(key666,state666);
            										}
            									}
            								}
HXDLIN( 668)								{
HXLINE( 668)									 ::flixel::input::actions::FlxActionDigital action667 = this->_note_downR;
HXDLIN( 668)									int state667 = -1;
HXDLIN( 668)									int _g715 = 0;
HXDLIN( 668)									while((_g715 < copyKeys23->length)){
HXLINE( 668)										int key667 = copyKeys23->__get(_g715);
HXDLIN( 668)										_g715 = (_g715 + 1);
HXDLIN( 668)										if ((key667 != -1)) {
HXLINE( 668)											action667->addKey(key667,state667);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 668)								 ::flixel::input::actions::FlxActionDigital action668 = this->_reset;
HXDLIN( 668)								int state668 = 2;
HXDLIN( 668)								int _g716 = 0;
HXDLIN( 668)								while((_g716 < copyKeys23->length)){
HXLINE( 668)									int key668 = copyKeys23->__get(_g716);
HXDLIN( 668)									_g716 = (_g716 + 1);
HXDLIN( 668)									if ((key668 != -1)) {
HXLINE( 668)										action668->addKey(key668,state668);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 668)								 ::flixel::input::actions::FlxActionDigital action669 = this->_accept;
HXDLIN( 668)								int state669 = 2;
HXDLIN( 668)								int _g717 = 0;
HXDLIN( 668)								while((_g717 < copyKeys23->length)){
HXLINE( 668)									int key669 = copyKeys23->__get(_g717);
HXDLIN( 668)									_g717 = (_g717 + 1);
HXDLIN( 668)									if ((key669 != -1)) {
HXLINE( 668)										action669->addKey(key669,state669);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 668)								 ::flixel::input::actions::FlxActionDigital action670 = this->_back;
HXDLIN( 668)								int state670 = 2;
HXDLIN( 668)								int _g718 = 0;
HXDLIN( 668)								while((_g718 < copyKeys23->length)){
HXLINE( 668)									int key670 = copyKeys23->__get(_g718);
HXDLIN( 668)									_g718 = (_g718 + 1);
HXDLIN( 668)									if ((key670 != -1)) {
HXLINE( 668)										action670->addKey(key670,state670);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 668)								 ::flixel::input::actions::FlxActionDigital action671 = this->_pause;
HXDLIN( 668)								int state671 = 2;
HXDLIN( 668)								int _g719 = 0;
HXDLIN( 668)								while((_g719 < copyKeys23->length)){
HXLINE( 668)									int key671 = copyKeys23->__get(_g719);
HXDLIN( 668)									_g719 = (_g719 + 1);
HXDLIN( 668)									if ((key671 != -1)) {
HXLINE( 668)										action671->addKey(key671,state671);
            									}
            								}
            							}
            							break;
            						}
            					}
            				}
            				else {
HXLINE( 670)					{
HXLINE( 670)						::Array< int > copyKeys24 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1132,1)->copy();
HXDLIN( 670)						{
HXLINE( 670)							int _g720 = 0;
HXDLIN( 670)							int _g721 = copyKeys24->length;
HXDLIN( 670)							while((_g720 < _g721)){
HXLINE( 670)								_g720 = (_g720 + 1);
HXDLIN( 670)								int i24 = (_g720 - 1);
HXDLIN( 670)								if ((i24 == -1)) {
HXLINE( 670)									copyKeys24->remove(i24);
            								}
            							}
            						}
HXDLIN( 670)						switch((int)(::Control_obj::UI_UP_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action672 = this->_ui_up;
HXDLIN( 670)									int state672 = 1;
HXDLIN( 670)									int _g722 = 0;
HXDLIN( 670)									while((_g722 < copyKeys24->length)){
HXLINE( 670)										int key672 = copyKeys24->__get(_g722);
HXDLIN( 670)										_g722 = (_g722 + 1);
HXDLIN( 670)										if ((key672 != -1)) {
HXLINE( 670)											action672->addKey(key672,state672);
            										}
            									}
            								}
HXDLIN( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action673 = this->_ui_upP;
HXDLIN( 670)									int state673 = 2;
HXDLIN( 670)									int _g723 = 0;
HXDLIN( 670)									while((_g723 < copyKeys24->length)){
HXLINE( 670)										int key673 = copyKeys24->__get(_g723);
HXDLIN( 670)										_g723 = (_g723 + 1);
HXDLIN( 670)										if ((key673 != -1)) {
HXLINE( 670)											action673->addKey(key673,state673);
            										}
            									}
            								}
HXDLIN( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action674 = this->_ui_upR;
HXDLIN( 670)									int state674 = -1;
HXDLIN( 670)									int _g724 = 0;
HXDLIN( 670)									while((_g724 < copyKeys24->length)){
HXLINE( 670)										int key674 = copyKeys24->__get(_g724);
HXDLIN( 670)										_g724 = (_g724 + 1);
HXDLIN( 670)										if ((key674 != -1)) {
HXLINE( 670)											action674->addKey(key674,state674);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action675 = this->_ui_left;
HXDLIN( 670)									int state675 = 1;
HXDLIN( 670)									int _g725 = 0;
HXDLIN( 670)									while((_g725 < copyKeys24->length)){
HXLINE( 670)										int key675 = copyKeys24->__get(_g725);
HXDLIN( 670)										_g725 = (_g725 + 1);
HXDLIN( 670)										if ((key675 != -1)) {
HXLINE( 670)											action675->addKey(key675,state675);
            										}
            									}
            								}
HXDLIN( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action676 = this->_ui_leftP;
HXDLIN( 670)									int state676 = 2;
HXDLIN( 670)									int _g726 = 0;
HXDLIN( 670)									while((_g726 < copyKeys24->length)){
HXLINE( 670)										int key676 = copyKeys24->__get(_g726);
HXDLIN( 670)										_g726 = (_g726 + 1);
HXDLIN( 670)										if ((key676 != -1)) {
HXLINE( 670)											action676->addKey(key676,state676);
            										}
            									}
            								}
HXDLIN( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action677 = this->_ui_leftR;
HXDLIN( 670)									int state677 = -1;
HXDLIN( 670)									int _g727 = 0;
HXDLIN( 670)									while((_g727 < copyKeys24->length)){
HXLINE( 670)										int key677 = copyKeys24->__get(_g727);
HXDLIN( 670)										_g727 = (_g727 + 1);
HXDLIN( 670)										if ((key677 != -1)) {
HXLINE( 670)											action677->addKey(key677,state677);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action678 = this->_ui_right;
HXDLIN( 670)									int state678 = 1;
HXDLIN( 670)									int _g728 = 0;
HXDLIN( 670)									while((_g728 < copyKeys24->length)){
HXLINE( 670)										int key678 = copyKeys24->__get(_g728);
HXDLIN( 670)										_g728 = (_g728 + 1);
HXDLIN( 670)										if ((key678 != -1)) {
HXLINE( 670)											action678->addKey(key678,state678);
            										}
            									}
            								}
HXDLIN( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action679 = this->_ui_rightP;
HXDLIN( 670)									int state679 = 2;
HXDLIN( 670)									int _g729 = 0;
HXDLIN( 670)									while((_g729 < copyKeys24->length)){
HXLINE( 670)										int key679 = copyKeys24->__get(_g729);
HXDLIN( 670)										_g729 = (_g729 + 1);
HXDLIN( 670)										if ((key679 != -1)) {
HXLINE( 670)											action679->addKey(key679,state679);
            										}
            									}
            								}
HXDLIN( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action680 = this->_ui_rightR;
HXDLIN( 670)									int state680 = -1;
HXDLIN( 670)									int _g730 = 0;
HXDLIN( 670)									while((_g730 < copyKeys24->length)){
HXLINE( 670)										int key680 = copyKeys24->__get(_g730);
HXDLIN( 670)										_g730 = (_g730 + 1);
HXDLIN( 670)										if ((key680 != -1)) {
HXLINE( 670)											action680->addKey(key680,state680);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action681 = this->_ui_down;
HXDLIN( 670)									int state681 = 1;
HXDLIN( 670)									int _g731 = 0;
HXDLIN( 670)									while((_g731 < copyKeys24->length)){
HXLINE( 670)										int key681 = copyKeys24->__get(_g731);
HXDLIN( 670)										_g731 = (_g731 + 1);
HXDLIN( 670)										if ((key681 != -1)) {
HXLINE( 670)											action681->addKey(key681,state681);
            										}
            									}
            								}
HXDLIN( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action682 = this->_ui_downP;
HXDLIN( 670)									int state682 = 2;
HXDLIN( 670)									int _g732 = 0;
HXDLIN( 670)									while((_g732 < copyKeys24->length)){
HXLINE( 670)										int key682 = copyKeys24->__get(_g732);
HXDLIN( 670)										_g732 = (_g732 + 1);
HXDLIN( 670)										if ((key682 != -1)) {
HXLINE( 670)											action682->addKey(key682,state682);
            										}
            									}
            								}
HXDLIN( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action683 = this->_ui_downR;
HXDLIN( 670)									int state683 = -1;
HXDLIN( 670)									int _g733 = 0;
HXDLIN( 670)									while((_g733 < copyKeys24->length)){
HXLINE( 670)										int key683 = copyKeys24->__get(_g733);
HXDLIN( 670)										_g733 = (_g733 + 1);
HXDLIN( 670)										if ((key683 != -1)) {
HXLINE( 670)											action683->addKey(key683,state683);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action684 = this->_note_up;
HXDLIN( 670)									int state684 = 1;
HXDLIN( 670)									int _g734 = 0;
HXDLIN( 670)									while((_g734 < copyKeys24->length)){
HXLINE( 670)										int key684 = copyKeys24->__get(_g734);
HXDLIN( 670)										_g734 = (_g734 + 1);
HXDLIN( 670)										if ((key684 != -1)) {
HXLINE( 670)											action684->addKey(key684,state684);
            										}
            									}
            								}
HXDLIN( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action685 = this->_note_upP;
HXDLIN( 670)									int state685 = 2;
HXDLIN( 670)									int _g735 = 0;
HXDLIN( 670)									while((_g735 < copyKeys24->length)){
HXLINE( 670)										int key685 = copyKeys24->__get(_g735);
HXDLIN( 670)										_g735 = (_g735 + 1);
HXDLIN( 670)										if ((key685 != -1)) {
HXLINE( 670)											action685->addKey(key685,state685);
            										}
            									}
            								}
HXDLIN( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action686 = this->_note_upR;
HXDLIN( 670)									int state686 = -1;
HXDLIN( 670)									int _g736 = 0;
HXDLIN( 670)									while((_g736 < copyKeys24->length)){
HXLINE( 670)										int key686 = copyKeys24->__get(_g736);
HXDLIN( 670)										_g736 = (_g736 + 1);
HXDLIN( 670)										if ((key686 != -1)) {
HXLINE( 670)											action686->addKey(key686,state686);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action687 = this->_note_left;
HXDLIN( 670)									int state687 = 1;
HXDLIN( 670)									int _g737 = 0;
HXDLIN( 670)									while((_g737 < copyKeys24->length)){
HXLINE( 670)										int key687 = copyKeys24->__get(_g737);
HXDLIN( 670)										_g737 = (_g737 + 1);
HXDLIN( 670)										if ((key687 != -1)) {
HXLINE( 670)											action687->addKey(key687,state687);
            										}
            									}
            								}
HXDLIN( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action688 = this->_note_leftP;
HXDLIN( 670)									int state688 = 2;
HXDLIN( 670)									int _g738 = 0;
HXDLIN( 670)									while((_g738 < copyKeys24->length)){
HXLINE( 670)										int key688 = copyKeys24->__get(_g738);
HXDLIN( 670)										_g738 = (_g738 + 1);
HXDLIN( 670)										if ((key688 != -1)) {
HXLINE( 670)											action688->addKey(key688,state688);
            										}
            									}
            								}
HXDLIN( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action689 = this->_note_leftR;
HXDLIN( 670)									int state689 = -1;
HXDLIN( 670)									int _g739 = 0;
HXDLIN( 670)									while((_g739 < copyKeys24->length)){
HXLINE( 670)										int key689 = copyKeys24->__get(_g739);
HXDLIN( 670)										_g739 = (_g739 + 1);
HXDLIN( 670)										if ((key689 != -1)) {
HXLINE( 670)											action689->addKey(key689,state689);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action690 = this->_note_right;
HXDLIN( 670)									int state690 = 1;
HXDLIN( 670)									int _g740 = 0;
HXDLIN( 670)									while((_g740 < copyKeys24->length)){
HXLINE( 670)										int key690 = copyKeys24->__get(_g740);
HXDLIN( 670)										_g740 = (_g740 + 1);
HXDLIN( 670)										if ((key690 != -1)) {
HXLINE( 670)											action690->addKey(key690,state690);
            										}
            									}
            								}
HXDLIN( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action691 = this->_note_rightP;
HXDLIN( 670)									int state691 = 2;
HXDLIN( 670)									int _g741 = 0;
HXDLIN( 670)									while((_g741 < copyKeys24->length)){
HXLINE( 670)										int key691 = copyKeys24->__get(_g741);
HXDLIN( 670)										_g741 = (_g741 + 1);
HXDLIN( 670)										if ((key691 != -1)) {
HXLINE( 670)											action691->addKey(key691,state691);
            										}
            									}
            								}
HXDLIN( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action692 = this->_note_rightR;
HXDLIN( 670)									int state692 = -1;
HXDLIN( 670)									int _g742 = 0;
HXDLIN( 670)									while((_g742 < copyKeys24->length)){
HXLINE( 670)										int key692 = copyKeys24->__get(_g742);
HXDLIN( 670)										_g742 = (_g742 + 1);
HXDLIN( 670)										if ((key692 != -1)) {
HXLINE( 670)											action692->addKey(key692,state692);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action693 = this->_note_down;
HXDLIN( 670)									int state693 = 1;
HXDLIN( 670)									int _g743 = 0;
HXDLIN( 670)									while((_g743 < copyKeys24->length)){
HXLINE( 670)										int key693 = copyKeys24->__get(_g743);
HXDLIN( 670)										_g743 = (_g743 + 1);
HXDLIN( 670)										if ((key693 != -1)) {
HXLINE( 670)											action693->addKey(key693,state693);
            										}
            									}
            								}
HXDLIN( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action694 = this->_note_downP;
HXDLIN( 670)									int state694 = 2;
HXDLIN( 670)									int _g744 = 0;
HXDLIN( 670)									while((_g744 < copyKeys24->length)){
HXLINE( 670)										int key694 = copyKeys24->__get(_g744);
HXDLIN( 670)										_g744 = (_g744 + 1);
HXDLIN( 670)										if ((key694 != -1)) {
HXLINE( 670)											action694->addKey(key694,state694);
            										}
            									}
            								}
HXDLIN( 670)								{
HXLINE( 670)									 ::flixel::input::actions::FlxActionDigital action695 = this->_note_downR;
HXDLIN( 670)									int state695 = -1;
HXDLIN( 670)									int _g745 = 0;
HXDLIN( 670)									while((_g745 < copyKeys24->length)){
HXLINE( 670)										int key695 = copyKeys24->__get(_g745);
HXDLIN( 670)										_g745 = (_g745 + 1);
HXDLIN( 670)										if ((key695 != -1)) {
HXLINE( 670)											action695->addKey(key695,state695);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 670)								 ::flixel::input::actions::FlxActionDigital action696 = this->_reset;
HXDLIN( 670)								int state696 = 2;
HXDLIN( 670)								int _g746 = 0;
HXDLIN( 670)								while((_g746 < copyKeys24->length)){
HXLINE( 670)									int key696 = copyKeys24->__get(_g746);
HXDLIN( 670)									_g746 = (_g746 + 1);
HXDLIN( 670)									if ((key696 != -1)) {
HXLINE( 670)										action696->addKey(key696,state696);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 670)								 ::flixel::input::actions::FlxActionDigital action697 = this->_accept;
HXDLIN( 670)								int state697 = 2;
HXDLIN( 670)								int _g747 = 0;
HXDLIN( 670)								while((_g747 < copyKeys24->length)){
HXLINE( 670)									int key697 = copyKeys24->__get(_g747);
HXDLIN( 670)									_g747 = (_g747 + 1);
HXDLIN( 670)									if ((key697 != -1)) {
HXLINE( 670)										action697->addKey(key697,state697);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 670)								 ::flixel::input::actions::FlxActionDigital action698 = this->_back;
HXDLIN( 670)								int state698 = 2;
HXDLIN( 670)								int _g748 = 0;
HXDLIN( 670)								while((_g748 < copyKeys24->length)){
HXLINE( 670)									int key698 = copyKeys24->__get(_g748);
HXDLIN( 670)									_g748 = (_g748 + 1);
HXDLIN( 670)									if ((key698 != -1)) {
HXLINE( 670)										action698->addKey(key698,state698);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 670)								 ::flixel::input::actions::FlxActionDigital action699 = this->_pause;
HXDLIN( 670)								int state699 = 2;
HXDLIN( 670)								int _g749 = 0;
HXDLIN( 670)								while((_g749 < copyKeys24->length)){
HXLINE( 670)									int key699 = copyKeys24->__get(_g749);
HXDLIN( 670)									_g749 = (_g749 + 1);
HXDLIN( 670)									if ((key699 != -1)) {
HXLINE( 670)										action699->addKey(key699,state699);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 671)					{
HXLINE( 671)						::Array< int > copyKeys25 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1133,1)->copy();
HXDLIN( 671)						{
HXLINE( 671)							int _g750 = 0;
HXDLIN( 671)							int _g751 = copyKeys25->length;
HXDLIN( 671)							while((_g750 < _g751)){
HXLINE( 671)								_g750 = (_g750 + 1);
HXDLIN( 671)								int i25 = (_g750 - 1);
HXDLIN( 671)								if ((i25 == -1)) {
HXLINE( 671)									copyKeys25->remove(i25);
            								}
            							}
            						}
HXDLIN( 671)						switch((int)(::Control_obj::UI_DOWN_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action700 = this->_ui_up;
HXDLIN( 671)									int state700 = 1;
HXDLIN( 671)									int _g752 = 0;
HXDLIN( 671)									while((_g752 < copyKeys25->length)){
HXLINE( 671)										int key700 = copyKeys25->__get(_g752);
HXDLIN( 671)										_g752 = (_g752 + 1);
HXDLIN( 671)										if ((key700 != -1)) {
HXLINE( 671)											action700->addKey(key700,state700);
            										}
            									}
            								}
HXDLIN( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action701 = this->_ui_upP;
HXDLIN( 671)									int state701 = 2;
HXDLIN( 671)									int _g753 = 0;
HXDLIN( 671)									while((_g753 < copyKeys25->length)){
HXLINE( 671)										int key701 = copyKeys25->__get(_g753);
HXDLIN( 671)										_g753 = (_g753 + 1);
HXDLIN( 671)										if ((key701 != -1)) {
HXLINE( 671)											action701->addKey(key701,state701);
            										}
            									}
            								}
HXDLIN( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action702 = this->_ui_upR;
HXDLIN( 671)									int state702 = -1;
HXDLIN( 671)									int _g754 = 0;
HXDLIN( 671)									while((_g754 < copyKeys25->length)){
HXLINE( 671)										int key702 = copyKeys25->__get(_g754);
HXDLIN( 671)										_g754 = (_g754 + 1);
HXDLIN( 671)										if ((key702 != -1)) {
HXLINE( 671)											action702->addKey(key702,state702);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action703 = this->_ui_left;
HXDLIN( 671)									int state703 = 1;
HXDLIN( 671)									int _g755 = 0;
HXDLIN( 671)									while((_g755 < copyKeys25->length)){
HXLINE( 671)										int key703 = copyKeys25->__get(_g755);
HXDLIN( 671)										_g755 = (_g755 + 1);
HXDLIN( 671)										if ((key703 != -1)) {
HXLINE( 671)											action703->addKey(key703,state703);
            										}
            									}
            								}
HXDLIN( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action704 = this->_ui_leftP;
HXDLIN( 671)									int state704 = 2;
HXDLIN( 671)									int _g756 = 0;
HXDLIN( 671)									while((_g756 < copyKeys25->length)){
HXLINE( 671)										int key704 = copyKeys25->__get(_g756);
HXDLIN( 671)										_g756 = (_g756 + 1);
HXDLIN( 671)										if ((key704 != -1)) {
HXLINE( 671)											action704->addKey(key704,state704);
            										}
            									}
            								}
HXDLIN( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action705 = this->_ui_leftR;
HXDLIN( 671)									int state705 = -1;
HXDLIN( 671)									int _g757 = 0;
HXDLIN( 671)									while((_g757 < copyKeys25->length)){
HXLINE( 671)										int key705 = copyKeys25->__get(_g757);
HXDLIN( 671)										_g757 = (_g757 + 1);
HXDLIN( 671)										if ((key705 != -1)) {
HXLINE( 671)											action705->addKey(key705,state705);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action706 = this->_ui_right;
HXDLIN( 671)									int state706 = 1;
HXDLIN( 671)									int _g758 = 0;
HXDLIN( 671)									while((_g758 < copyKeys25->length)){
HXLINE( 671)										int key706 = copyKeys25->__get(_g758);
HXDLIN( 671)										_g758 = (_g758 + 1);
HXDLIN( 671)										if ((key706 != -1)) {
HXLINE( 671)											action706->addKey(key706,state706);
            										}
            									}
            								}
HXDLIN( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action707 = this->_ui_rightP;
HXDLIN( 671)									int state707 = 2;
HXDLIN( 671)									int _g759 = 0;
HXDLIN( 671)									while((_g759 < copyKeys25->length)){
HXLINE( 671)										int key707 = copyKeys25->__get(_g759);
HXDLIN( 671)										_g759 = (_g759 + 1);
HXDLIN( 671)										if ((key707 != -1)) {
HXLINE( 671)											action707->addKey(key707,state707);
            										}
            									}
            								}
HXDLIN( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action708 = this->_ui_rightR;
HXDLIN( 671)									int state708 = -1;
HXDLIN( 671)									int _g760 = 0;
HXDLIN( 671)									while((_g760 < copyKeys25->length)){
HXLINE( 671)										int key708 = copyKeys25->__get(_g760);
HXDLIN( 671)										_g760 = (_g760 + 1);
HXDLIN( 671)										if ((key708 != -1)) {
HXLINE( 671)											action708->addKey(key708,state708);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action709 = this->_ui_down;
HXDLIN( 671)									int state709 = 1;
HXDLIN( 671)									int _g761 = 0;
HXDLIN( 671)									while((_g761 < copyKeys25->length)){
HXLINE( 671)										int key709 = copyKeys25->__get(_g761);
HXDLIN( 671)										_g761 = (_g761 + 1);
HXDLIN( 671)										if ((key709 != -1)) {
HXLINE( 671)											action709->addKey(key709,state709);
            										}
            									}
            								}
HXDLIN( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action710 = this->_ui_downP;
HXDLIN( 671)									int state710 = 2;
HXDLIN( 671)									int _g762 = 0;
HXDLIN( 671)									while((_g762 < copyKeys25->length)){
HXLINE( 671)										int key710 = copyKeys25->__get(_g762);
HXDLIN( 671)										_g762 = (_g762 + 1);
HXDLIN( 671)										if ((key710 != -1)) {
HXLINE( 671)											action710->addKey(key710,state710);
            										}
            									}
            								}
HXDLIN( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action711 = this->_ui_downR;
HXDLIN( 671)									int state711 = -1;
HXDLIN( 671)									int _g763 = 0;
HXDLIN( 671)									while((_g763 < copyKeys25->length)){
HXLINE( 671)										int key711 = copyKeys25->__get(_g763);
HXDLIN( 671)										_g763 = (_g763 + 1);
HXDLIN( 671)										if ((key711 != -1)) {
HXLINE( 671)											action711->addKey(key711,state711);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action712 = this->_note_up;
HXDLIN( 671)									int state712 = 1;
HXDLIN( 671)									int _g764 = 0;
HXDLIN( 671)									while((_g764 < copyKeys25->length)){
HXLINE( 671)										int key712 = copyKeys25->__get(_g764);
HXDLIN( 671)										_g764 = (_g764 + 1);
HXDLIN( 671)										if ((key712 != -1)) {
HXLINE( 671)											action712->addKey(key712,state712);
            										}
            									}
            								}
HXDLIN( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action713 = this->_note_upP;
HXDLIN( 671)									int state713 = 2;
HXDLIN( 671)									int _g765 = 0;
HXDLIN( 671)									while((_g765 < copyKeys25->length)){
HXLINE( 671)										int key713 = copyKeys25->__get(_g765);
HXDLIN( 671)										_g765 = (_g765 + 1);
HXDLIN( 671)										if ((key713 != -1)) {
HXLINE( 671)											action713->addKey(key713,state713);
            										}
            									}
            								}
HXDLIN( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action714 = this->_note_upR;
HXDLIN( 671)									int state714 = -1;
HXDLIN( 671)									int _g766 = 0;
HXDLIN( 671)									while((_g766 < copyKeys25->length)){
HXLINE( 671)										int key714 = copyKeys25->__get(_g766);
HXDLIN( 671)										_g766 = (_g766 + 1);
HXDLIN( 671)										if ((key714 != -1)) {
HXLINE( 671)											action714->addKey(key714,state714);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action715 = this->_note_left;
HXDLIN( 671)									int state715 = 1;
HXDLIN( 671)									int _g767 = 0;
HXDLIN( 671)									while((_g767 < copyKeys25->length)){
HXLINE( 671)										int key715 = copyKeys25->__get(_g767);
HXDLIN( 671)										_g767 = (_g767 + 1);
HXDLIN( 671)										if ((key715 != -1)) {
HXLINE( 671)											action715->addKey(key715,state715);
            										}
            									}
            								}
HXDLIN( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action716 = this->_note_leftP;
HXDLIN( 671)									int state716 = 2;
HXDLIN( 671)									int _g768 = 0;
HXDLIN( 671)									while((_g768 < copyKeys25->length)){
HXLINE( 671)										int key716 = copyKeys25->__get(_g768);
HXDLIN( 671)										_g768 = (_g768 + 1);
HXDLIN( 671)										if ((key716 != -1)) {
HXLINE( 671)											action716->addKey(key716,state716);
            										}
            									}
            								}
HXDLIN( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action717 = this->_note_leftR;
HXDLIN( 671)									int state717 = -1;
HXDLIN( 671)									int _g769 = 0;
HXDLIN( 671)									while((_g769 < copyKeys25->length)){
HXLINE( 671)										int key717 = copyKeys25->__get(_g769);
HXDLIN( 671)										_g769 = (_g769 + 1);
HXDLIN( 671)										if ((key717 != -1)) {
HXLINE( 671)											action717->addKey(key717,state717);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action718 = this->_note_right;
HXDLIN( 671)									int state718 = 1;
HXDLIN( 671)									int _g770 = 0;
HXDLIN( 671)									while((_g770 < copyKeys25->length)){
HXLINE( 671)										int key718 = copyKeys25->__get(_g770);
HXDLIN( 671)										_g770 = (_g770 + 1);
HXDLIN( 671)										if ((key718 != -1)) {
HXLINE( 671)											action718->addKey(key718,state718);
            										}
            									}
            								}
HXDLIN( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action719 = this->_note_rightP;
HXDLIN( 671)									int state719 = 2;
HXDLIN( 671)									int _g771 = 0;
HXDLIN( 671)									while((_g771 < copyKeys25->length)){
HXLINE( 671)										int key719 = copyKeys25->__get(_g771);
HXDLIN( 671)										_g771 = (_g771 + 1);
HXDLIN( 671)										if ((key719 != -1)) {
HXLINE( 671)											action719->addKey(key719,state719);
            										}
            									}
            								}
HXDLIN( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action720 = this->_note_rightR;
HXDLIN( 671)									int state720 = -1;
HXDLIN( 671)									int _g772 = 0;
HXDLIN( 671)									while((_g772 < copyKeys25->length)){
HXLINE( 671)										int key720 = copyKeys25->__get(_g772);
HXDLIN( 671)										_g772 = (_g772 + 1);
HXDLIN( 671)										if ((key720 != -1)) {
HXLINE( 671)											action720->addKey(key720,state720);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action721 = this->_note_down;
HXDLIN( 671)									int state721 = 1;
HXDLIN( 671)									int _g773 = 0;
HXDLIN( 671)									while((_g773 < copyKeys25->length)){
HXLINE( 671)										int key721 = copyKeys25->__get(_g773);
HXDLIN( 671)										_g773 = (_g773 + 1);
HXDLIN( 671)										if ((key721 != -1)) {
HXLINE( 671)											action721->addKey(key721,state721);
            										}
            									}
            								}
HXDLIN( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action722 = this->_note_downP;
HXDLIN( 671)									int state722 = 2;
HXDLIN( 671)									int _g774 = 0;
HXDLIN( 671)									while((_g774 < copyKeys25->length)){
HXLINE( 671)										int key722 = copyKeys25->__get(_g774);
HXDLIN( 671)										_g774 = (_g774 + 1);
HXDLIN( 671)										if ((key722 != -1)) {
HXLINE( 671)											action722->addKey(key722,state722);
            										}
            									}
            								}
HXDLIN( 671)								{
HXLINE( 671)									 ::flixel::input::actions::FlxActionDigital action723 = this->_note_downR;
HXDLIN( 671)									int state723 = -1;
HXDLIN( 671)									int _g775 = 0;
HXDLIN( 671)									while((_g775 < copyKeys25->length)){
HXLINE( 671)										int key723 = copyKeys25->__get(_g775);
HXDLIN( 671)										_g775 = (_g775 + 1);
HXDLIN( 671)										if ((key723 != -1)) {
HXLINE( 671)											action723->addKey(key723,state723);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 671)								 ::flixel::input::actions::FlxActionDigital action724 = this->_reset;
HXDLIN( 671)								int state724 = 2;
HXDLIN( 671)								int _g776 = 0;
HXDLIN( 671)								while((_g776 < copyKeys25->length)){
HXLINE( 671)									int key724 = copyKeys25->__get(_g776);
HXDLIN( 671)									_g776 = (_g776 + 1);
HXDLIN( 671)									if ((key724 != -1)) {
HXLINE( 671)										action724->addKey(key724,state724);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 671)								 ::flixel::input::actions::FlxActionDigital action725 = this->_accept;
HXDLIN( 671)								int state725 = 2;
HXDLIN( 671)								int _g777 = 0;
HXDLIN( 671)								while((_g777 < copyKeys25->length)){
HXLINE( 671)									int key725 = copyKeys25->__get(_g777);
HXDLIN( 671)									_g777 = (_g777 + 1);
HXDLIN( 671)									if ((key725 != -1)) {
HXLINE( 671)										action725->addKey(key725,state725);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 671)								 ::flixel::input::actions::FlxActionDigital action726 = this->_back;
HXDLIN( 671)								int state726 = 2;
HXDLIN( 671)								int _g778 = 0;
HXDLIN( 671)								while((_g778 < copyKeys25->length)){
HXLINE( 671)									int key726 = copyKeys25->__get(_g778);
HXDLIN( 671)									_g778 = (_g778 + 1);
HXDLIN( 671)									if ((key726 != -1)) {
HXLINE( 671)										action726->addKey(key726,state726);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 671)								 ::flixel::input::actions::FlxActionDigital action727 = this->_pause;
HXDLIN( 671)								int state727 = 2;
HXDLIN( 671)								int _g779 = 0;
HXDLIN( 671)								while((_g779 < copyKeys25->length)){
HXLINE( 671)									int key727 = copyKeys25->__get(_g779);
HXDLIN( 671)									_g779 = (_g779 + 1);
HXDLIN( 671)									if ((key727 != -1)) {
HXLINE( 671)										action727->addKey(key727,state727);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 672)					{
HXLINE( 672)						::Array< int > copyKeys26 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1134,1)->copy();
HXDLIN( 672)						{
HXLINE( 672)							int _g780 = 0;
HXDLIN( 672)							int _g781 = copyKeys26->length;
HXDLIN( 672)							while((_g780 < _g781)){
HXLINE( 672)								_g780 = (_g780 + 1);
HXDLIN( 672)								int i26 = (_g780 - 1);
HXDLIN( 672)								if ((i26 == -1)) {
HXLINE( 672)									copyKeys26->remove(i26);
            								}
            							}
            						}
HXDLIN( 672)						switch((int)(::Control_obj::UI_LEFT_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action728 = this->_ui_up;
HXDLIN( 672)									int state728 = 1;
HXDLIN( 672)									int _g782 = 0;
HXDLIN( 672)									while((_g782 < copyKeys26->length)){
HXLINE( 672)										int key728 = copyKeys26->__get(_g782);
HXDLIN( 672)										_g782 = (_g782 + 1);
HXDLIN( 672)										if ((key728 != -1)) {
HXLINE( 672)											action728->addKey(key728,state728);
            										}
            									}
            								}
HXDLIN( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action729 = this->_ui_upP;
HXDLIN( 672)									int state729 = 2;
HXDLIN( 672)									int _g783 = 0;
HXDLIN( 672)									while((_g783 < copyKeys26->length)){
HXLINE( 672)										int key729 = copyKeys26->__get(_g783);
HXDLIN( 672)										_g783 = (_g783 + 1);
HXDLIN( 672)										if ((key729 != -1)) {
HXLINE( 672)											action729->addKey(key729,state729);
            										}
            									}
            								}
HXDLIN( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action730 = this->_ui_upR;
HXDLIN( 672)									int state730 = -1;
HXDLIN( 672)									int _g784 = 0;
HXDLIN( 672)									while((_g784 < copyKeys26->length)){
HXLINE( 672)										int key730 = copyKeys26->__get(_g784);
HXDLIN( 672)										_g784 = (_g784 + 1);
HXDLIN( 672)										if ((key730 != -1)) {
HXLINE( 672)											action730->addKey(key730,state730);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action731 = this->_ui_left;
HXDLIN( 672)									int state731 = 1;
HXDLIN( 672)									int _g785 = 0;
HXDLIN( 672)									while((_g785 < copyKeys26->length)){
HXLINE( 672)										int key731 = copyKeys26->__get(_g785);
HXDLIN( 672)										_g785 = (_g785 + 1);
HXDLIN( 672)										if ((key731 != -1)) {
HXLINE( 672)											action731->addKey(key731,state731);
            										}
            									}
            								}
HXDLIN( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action732 = this->_ui_leftP;
HXDLIN( 672)									int state732 = 2;
HXDLIN( 672)									int _g786 = 0;
HXDLIN( 672)									while((_g786 < copyKeys26->length)){
HXLINE( 672)										int key732 = copyKeys26->__get(_g786);
HXDLIN( 672)										_g786 = (_g786 + 1);
HXDLIN( 672)										if ((key732 != -1)) {
HXLINE( 672)											action732->addKey(key732,state732);
            										}
            									}
            								}
HXDLIN( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action733 = this->_ui_leftR;
HXDLIN( 672)									int state733 = -1;
HXDLIN( 672)									int _g787 = 0;
HXDLIN( 672)									while((_g787 < copyKeys26->length)){
HXLINE( 672)										int key733 = copyKeys26->__get(_g787);
HXDLIN( 672)										_g787 = (_g787 + 1);
HXDLIN( 672)										if ((key733 != -1)) {
HXLINE( 672)											action733->addKey(key733,state733);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action734 = this->_ui_right;
HXDLIN( 672)									int state734 = 1;
HXDLIN( 672)									int _g788 = 0;
HXDLIN( 672)									while((_g788 < copyKeys26->length)){
HXLINE( 672)										int key734 = copyKeys26->__get(_g788);
HXDLIN( 672)										_g788 = (_g788 + 1);
HXDLIN( 672)										if ((key734 != -1)) {
HXLINE( 672)											action734->addKey(key734,state734);
            										}
            									}
            								}
HXDLIN( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action735 = this->_ui_rightP;
HXDLIN( 672)									int state735 = 2;
HXDLIN( 672)									int _g789 = 0;
HXDLIN( 672)									while((_g789 < copyKeys26->length)){
HXLINE( 672)										int key735 = copyKeys26->__get(_g789);
HXDLIN( 672)										_g789 = (_g789 + 1);
HXDLIN( 672)										if ((key735 != -1)) {
HXLINE( 672)											action735->addKey(key735,state735);
            										}
            									}
            								}
HXDLIN( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action736 = this->_ui_rightR;
HXDLIN( 672)									int state736 = -1;
HXDLIN( 672)									int _g790 = 0;
HXDLIN( 672)									while((_g790 < copyKeys26->length)){
HXLINE( 672)										int key736 = copyKeys26->__get(_g790);
HXDLIN( 672)										_g790 = (_g790 + 1);
HXDLIN( 672)										if ((key736 != -1)) {
HXLINE( 672)											action736->addKey(key736,state736);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action737 = this->_ui_down;
HXDLIN( 672)									int state737 = 1;
HXDLIN( 672)									int _g791 = 0;
HXDLIN( 672)									while((_g791 < copyKeys26->length)){
HXLINE( 672)										int key737 = copyKeys26->__get(_g791);
HXDLIN( 672)										_g791 = (_g791 + 1);
HXDLIN( 672)										if ((key737 != -1)) {
HXLINE( 672)											action737->addKey(key737,state737);
            										}
            									}
            								}
HXDLIN( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action738 = this->_ui_downP;
HXDLIN( 672)									int state738 = 2;
HXDLIN( 672)									int _g792 = 0;
HXDLIN( 672)									while((_g792 < copyKeys26->length)){
HXLINE( 672)										int key738 = copyKeys26->__get(_g792);
HXDLIN( 672)										_g792 = (_g792 + 1);
HXDLIN( 672)										if ((key738 != -1)) {
HXLINE( 672)											action738->addKey(key738,state738);
            										}
            									}
            								}
HXDLIN( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action739 = this->_ui_downR;
HXDLIN( 672)									int state739 = -1;
HXDLIN( 672)									int _g793 = 0;
HXDLIN( 672)									while((_g793 < copyKeys26->length)){
HXLINE( 672)										int key739 = copyKeys26->__get(_g793);
HXDLIN( 672)										_g793 = (_g793 + 1);
HXDLIN( 672)										if ((key739 != -1)) {
HXLINE( 672)											action739->addKey(key739,state739);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action740 = this->_note_up;
HXDLIN( 672)									int state740 = 1;
HXDLIN( 672)									int _g794 = 0;
HXDLIN( 672)									while((_g794 < copyKeys26->length)){
HXLINE( 672)										int key740 = copyKeys26->__get(_g794);
HXDLIN( 672)										_g794 = (_g794 + 1);
HXDLIN( 672)										if ((key740 != -1)) {
HXLINE( 672)											action740->addKey(key740,state740);
            										}
            									}
            								}
HXDLIN( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action741 = this->_note_upP;
HXDLIN( 672)									int state741 = 2;
HXDLIN( 672)									int _g795 = 0;
HXDLIN( 672)									while((_g795 < copyKeys26->length)){
HXLINE( 672)										int key741 = copyKeys26->__get(_g795);
HXDLIN( 672)										_g795 = (_g795 + 1);
HXDLIN( 672)										if ((key741 != -1)) {
HXLINE( 672)											action741->addKey(key741,state741);
            										}
            									}
            								}
HXDLIN( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action742 = this->_note_upR;
HXDLIN( 672)									int state742 = -1;
HXDLIN( 672)									int _g796 = 0;
HXDLIN( 672)									while((_g796 < copyKeys26->length)){
HXLINE( 672)										int key742 = copyKeys26->__get(_g796);
HXDLIN( 672)										_g796 = (_g796 + 1);
HXDLIN( 672)										if ((key742 != -1)) {
HXLINE( 672)											action742->addKey(key742,state742);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action743 = this->_note_left;
HXDLIN( 672)									int state743 = 1;
HXDLIN( 672)									int _g797 = 0;
HXDLIN( 672)									while((_g797 < copyKeys26->length)){
HXLINE( 672)										int key743 = copyKeys26->__get(_g797);
HXDLIN( 672)										_g797 = (_g797 + 1);
HXDLIN( 672)										if ((key743 != -1)) {
HXLINE( 672)											action743->addKey(key743,state743);
            										}
            									}
            								}
HXDLIN( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action744 = this->_note_leftP;
HXDLIN( 672)									int state744 = 2;
HXDLIN( 672)									int _g798 = 0;
HXDLIN( 672)									while((_g798 < copyKeys26->length)){
HXLINE( 672)										int key744 = copyKeys26->__get(_g798);
HXDLIN( 672)										_g798 = (_g798 + 1);
HXDLIN( 672)										if ((key744 != -1)) {
HXLINE( 672)											action744->addKey(key744,state744);
            										}
            									}
            								}
HXDLIN( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action745 = this->_note_leftR;
HXDLIN( 672)									int state745 = -1;
HXDLIN( 672)									int _g799 = 0;
HXDLIN( 672)									while((_g799 < copyKeys26->length)){
HXLINE( 672)										int key745 = copyKeys26->__get(_g799);
HXDLIN( 672)										_g799 = (_g799 + 1);
HXDLIN( 672)										if ((key745 != -1)) {
HXLINE( 672)											action745->addKey(key745,state745);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action746 = this->_note_right;
HXDLIN( 672)									int state746 = 1;
HXDLIN( 672)									int _g800 = 0;
HXDLIN( 672)									while((_g800 < copyKeys26->length)){
HXLINE( 672)										int key746 = copyKeys26->__get(_g800);
HXDLIN( 672)										_g800 = (_g800 + 1);
HXDLIN( 672)										if ((key746 != -1)) {
HXLINE( 672)											action746->addKey(key746,state746);
            										}
            									}
            								}
HXDLIN( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action747 = this->_note_rightP;
HXDLIN( 672)									int state747 = 2;
HXDLIN( 672)									int _g801 = 0;
HXDLIN( 672)									while((_g801 < copyKeys26->length)){
HXLINE( 672)										int key747 = copyKeys26->__get(_g801);
HXDLIN( 672)										_g801 = (_g801 + 1);
HXDLIN( 672)										if ((key747 != -1)) {
HXLINE( 672)											action747->addKey(key747,state747);
            										}
            									}
            								}
HXDLIN( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action748 = this->_note_rightR;
HXDLIN( 672)									int state748 = -1;
HXDLIN( 672)									int _g802 = 0;
HXDLIN( 672)									while((_g802 < copyKeys26->length)){
HXLINE( 672)										int key748 = copyKeys26->__get(_g802);
HXDLIN( 672)										_g802 = (_g802 + 1);
HXDLIN( 672)										if ((key748 != -1)) {
HXLINE( 672)											action748->addKey(key748,state748);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action749 = this->_note_down;
HXDLIN( 672)									int state749 = 1;
HXDLIN( 672)									int _g803 = 0;
HXDLIN( 672)									while((_g803 < copyKeys26->length)){
HXLINE( 672)										int key749 = copyKeys26->__get(_g803);
HXDLIN( 672)										_g803 = (_g803 + 1);
HXDLIN( 672)										if ((key749 != -1)) {
HXLINE( 672)											action749->addKey(key749,state749);
            										}
            									}
            								}
HXDLIN( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action750 = this->_note_downP;
HXDLIN( 672)									int state750 = 2;
HXDLIN( 672)									int _g804 = 0;
HXDLIN( 672)									while((_g804 < copyKeys26->length)){
HXLINE( 672)										int key750 = copyKeys26->__get(_g804);
HXDLIN( 672)										_g804 = (_g804 + 1);
HXDLIN( 672)										if ((key750 != -1)) {
HXLINE( 672)											action750->addKey(key750,state750);
            										}
            									}
            								}
HXDLIN( 672)								{
HXLINE( 672)									 ::flixel::input::actions::FlxActionDigital action751 = this->_note_downR;
HXDLIN( 672)									int state751 = -1;
HXDLIN( 672)									int _g805 = 0;
HXDLIN( 672)									while((_g805 < copyKeys26->length)){
HXLINE( 672)										int key751 = copyKeys26->__get(_g805);
HXDLIN( 672)										_g805 = (_g805 + 1);
HXDLIN( 672)										if ((key751 != -1)) {
HXLINE( 672)											action751->addKey(key751,state751);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 672)								 ::flixel::input::actions::FlxActionDigital action752 = this->_reset;
HXDLIN( 672)								int state752 = 2;
HXDLIN( 672)								int _g806 = 0;
HXDLIN( 672)								while((_g806 < copyKeys26->length)){
HXLINE( 672)									int key752 = copyKeys26->__get(_g806);
HXDLIN( 672)									_g806 = (_g806 + 1);
HXDLIN( 672)									if ((key752 != -1)) {
HXLINE( 672)										action752->addKey(key752,state752);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 672)								 ::flixel::input::actions::FlxActionDigital action753 = this->_accept;
HXDLIN( 672)								int state753 = 2;
HXDLIN( 672)								int _g807 = 0;
HXDLIN( 672)								while((_g807 < copyKeys26->length)){
HXLINE( 672)									int key753 = copyKeys26->__get(_g807);
HXDLIN( 672)									_g807 = (_g807 + 1);
HXDLIN( 672)									if ((key753 != -1)) {
HXLINE( 672)										action753->addKey(key753,state753);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 672)								 ::flixel::input::actions::FlxActionDigital action754 = this->_back;
HXDLIN( 672)								int state754 = 2;
HXDLIN( 672)								int _g808 = 0;
HXDLIN( 672)								while((_g808 < copyKeys26->length)){
HXLINE( 672)									int key754 = copyKeys26->__get(_g808);
HXDLIN( 672)									_g808 = (_g808 + 1);
HXDLIN( 672)									if ((key754 != -1)) {
HXLINE( 672)										action754->addKey(key754,state754);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 672)								 ::flixel::input::actions::FlxActionDigital action755 = this->_pause;
HXDLIN( 672)								int state755 = 2;
HXDLIN( 672)								int _g809 = 0;
HXDLIN( 672)								while((_g809 < copyKeys26->length)){
HXLINE( 672)									int key755 = copyKeys26->__get(_g809);
HXDLIN( 672)									_g809 = (_g809 + 1);
HXDLIN( 672)									if ((key755 != -1)) {
HXLINE( 672)										action755->addKey(key755,state755);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 673)					{
HXLINE( 673)						::Array< int > copyKeys27 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1135,1)->copy();
HXDLIN( 673)						{
HXLINE( 673)							int _g810 = 0;
HXDLIN( 673)							int _g811 = copyKeys27->length;
HXDLIN( 673)							while((_g810 < _g811)){
HXLINE( 673)								_g810 = (_g810 + 1);
HXDLIN( 673)								int i27 = (_g810 - 1);
HXDLIN( 673)								if ((i27 == -1)) {
HXLINE( 673)									copyKeys27->remove(i27);
            								}
            							}
            						}
HXDLIN( 673)						switch((int)(::Control_obj::UI_RIGHT_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action756 = this->_ui_up;
HXDLIN( 673)									int state756 = 1;
HXDLIN( 673)									int _g812 = 0;
HXDLIN( 673)									while((_g812 < copyKeys27->length)){
HXLINE( 673)										int key756 = copyKeys27->__get(_g812);
HXDLIN( 673)										_g812 = (_g812 + 1);
HXDLIN( 673)										if ((key756 != -1)) {
HXLINE( 673)											action756->addKey(key756,state756);
            										}
            									}
            								}
HXDLIN( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action757 = this->_ui_upP;
HXDLIN( 673)									int state757 = 2;
HXDLIN( 673)									int _g813 = 0;
HXDLIN( 673)									while((_g813 < copyKeys27->length)){
HXLINE( 673)										int key757 = copyKeys27->__get(_g813);
HXDLIN( 673)										_g813 = (_g813 + 1);
HXDLIN( 673)										if ((key757 != -1)) {
HXLINE( 673)											action757->addKey(key757,state757);
            										}
            									}
            								}
HXDLIN( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action758 = this->_ui_upR;
HXDLIN( 673)									int state758 = -1;
HXDLIN( 673)									int _g814 = 0;
HXDLIN( 673)									while((_g814 < copyKeys27->length)){
HXLINE( 673)										int key758 = copyKeys27->__get(_g814);
HXDLIN( 673)										_g814 = (_g814 + 1);
HXDLIN( 673)										if ((key758 != -1)) {
HXLINE( 673)											action758->addKey(key758,state758);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action759 = this->_ui_left;
HXDLIN( 673)									int state759 = 1;
HXDLIN( 673)									int _g815 = 0;
HXDLIN( 673)									while((_g815 < copyKeys27->length)){
HXLINE( 673)										int key759 = copyKeys27->__get(_g815);
HXDLIN( 673)										_g815 = (_g815 + 1);
HXDLIN( 673)										if ((key759 != -1)) {
HXLINE( 673)											action759->addKey(key759,state759);
            										}
            									}
            								}
HXDLIN( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action760 = this->_ui_leftP;
HXDLIN( 673)									int state760 = 2;
HXDLIN( 673)									int _g816 = 0;
HXDLIN( 673)									while((_g816 < copyKeys27->length)){
HXLINE( 673)										int key760 = copyKeys27->__get(_g816);
HXDLIN( 673)										_g816 = (_g816 + 1);
HXDLIN( 673)										if ((key760 != -1)) {
HXLINE( 673)											action760->addKey(key760,state760);
            										}
            									}
            								}
HXDLIN( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action761 = this->_ui_leftR;
HXDLIN( 673)									int state761 = -1;
HXDLIN( 673)									int _g817 = 0;
HXDLIN( 673)									while((_g817 < copyKeys27->length)){
HXLINE( 673)										int key761 = copyKeys27->__get(_g817);
HXDLIN( 673)										_g817 = (_g817 + 1);
HXDLIN( 673)										if ((key761 != -1)) {
HXLINE( 673)											action761->addKey(key761,state761);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action762 = this->_ui_right;
HXDLIN( 673)									int state762 = 1;
HXDLIN( 673)									int _g818 = 0;
HXDLIN( 673)									while((_g818 < copyKeys27->length)){
HXLINE( 673)										int key762 = copyKeys27->__get(_g818);
HXDLIN( 673)										_g818 = (_g818 + 1);
HXDLIN( 673)										if ((key762 != -1)) {
HXLINE( 673)											action762->addKey(key762,state762);
            										}
            									}
            								}
HXDLIN( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action763 = this->_ui_rightP;
HXDLIN( 673)									int state763 = 2;
HXDLIN( 673)									int _g819 = 0;
HXDLIN( 673)									while((_g819 < copyKeys27->length)){
HXLINE( 673)										int key763 = copyKeys27->__get(_g819);
HXDLIN( 673)										_g819 = (_g819 + 1);
HXDLIN( 673)										if ((key763 != -1)) {
HXLINE( 673)											action763->addKey(key763,state763);
            										}
            									}
            								}
HXDLIN( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action764 = this->_ui_rightR;
HXDLIN( 673)									int state764 = -1;
HXDLIN( 673)									int _g820 = 0;
HXDLIN( 673)									while((_g820 < copyKeys27->length)){
HXLINE( 673)										int key764 = copyKeys27->__get(_g820);
HXDLIN( 673)										_g820 = (_g820 + 1);
HXDLIN( 673)										if ((key764 != -1)) {
HXLINE( 673)											action764->addKey(key764,state764);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action765 = this->_ui_down;
HXDLIN( 673)									int state765 = 1;
HXDLIN( 673)									int _g821 = 0;
HXDLIN( 673)									while((_g821 < copyKeys27->length)){
HXLINE( 673)										int key765 = copyKeys27->__get(_g821);
HXDLIN( 673)										_g821 = (_g821 + 1);
HXDLIN( 673)										if ((key765 != -1)) {
HXLINE( 673)											action765->addKey(key765,state765);
            										}
            									}
            								}
HXDLIN( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action766 = this->_ui_downP;
HXDLIN( 673)									int state766 = 2;
HXDLIN( 673)									int _g822 = 0;
HXDLIN( 673)									while((_g822 < copyKeys27->length)){
HXLINE( 673)										int key766 = copyKeys27->__get(_g822);
HXDLIN( 673)										_g822 = (_g822 + 1);
HXDLIN( 673)										if ((key766 != -1)) {
HXLINE( 673)											action766->addKey(key766,state766);
            										}
            									}
            								}
HXDLIN( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action767 = this->_ui_downR;
HXDLIN( 673)									int state767 = -1;
HXDLIN( 673)									int _g823 = 0;
HXDLIN( 673)									while((_g823 < copyKeys27->length)){
HXLINE( 673)										int key767 = copyKeys27->__get(_g823);
HXDLIN( 673)										_g823 = (_g823 + 1);
HXDLIN( 673)										if ((key767 != -1)) {
HXLINE( 673)											action767->addKey(key767,state767);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action768 = this->_note_up;
HXDLIN( 673)									int state768 = 1;
HXDLIN( 673)									int _g824 = 0;
HXDLIN( 673)									while((_g824 < copyKeys27->length)){
HXLINE( 673)										int key768 = copyKeys27->__get(_g824);
HXDLIN( 673)										_g824 = (_g824 + 1);
HXDLIN( 673)										if ((key768 != -1)) {
HXLINE( 673)											action768->addKey(key768,state768);
            										}
            									}
            								}
HXDLIN( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action769 = this->_note_upP;
HXDLIN( 673)									int state769 = 2;
HXDLIN( 673)									int _g825 = 0;
HXDLIN( 673)									while((_g825 < copyKeys27->length)){
HXLINE( 673)										int key769 = copyKeys27->__get(_g825);
HXDLIN( 673)										_g825 = (_g825 + 1);
HXDLIN( 673)										if ((key769 != -1)) {
HXLINE( 673)											action769->addKey(key769,state769);
            										}
            									}
            								}
HXDLIN( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action770 = this->_note_upR;
HXDLIN( 673)									int state770 = -1;
HXDLIN( 673)									int _g826 = 0;
HXDLIN( 673)									while((_g826 < copyKeys27->length)){
HXLINE( 673)										int key770 = copyKeys27->__get(_g826);
HXDLIN( 673)										_g826 = (_g826 + 1);
HXDLIN( 673)										if ((key770 != -1)) {
HXLINE( 673)											action770->addKey(key770,state770);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action771 = this->_note_left;
HXDLIN( 673)									int state771 = 1;
HXDLIN( 673)									int _g827 = 0;
HXDLIN( 673)									while((_g827 < copyKeys27->length)){
HXLINE( 673)										int key771 = copyKeys27->__get(_g827);
HXDLIN( 673)										_g827 = (_g827 + 1);
HXDLIN( 673)										if ((key771 != -1)) {
HXLINE( 673)											action771->addKey(key771,state771);
            										}
            									}
            								}
HXDLIN( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action772 = this->_note_leftP;
HXDLIN( 673)									int state772 = 2;
HXDLIN( 673)									int _g828 = 0;
HXDLIN( 673)									while((_g828 < copyKeys27->length)){
HXLINE( 673)										int key772 = copyKeys27->__get(_g828);
HXDLIN( 673)										_g828 = (_g828 + 1);
HXDLIN( 673)										if ((key772 != -1)) {
HXLINE( 673)											action772->addKey(key772,state772);
            										}
            									}
            								}
HXDLIN( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action773 = this->_note_leftR;
HXDLIN( 673)									int state773 = -1;
HXDLIN( 673)									int _g829 = 0;
HXDLIN( 673)									while((_g829 < copyKeys27->length)){
HXLINE( 673)										int key773 = copyKeys27->__get(_g829);
HXDLIN( 673)										_g829 = (_g829 + 1);
HXDLIN( 673)										if ((key773 != -1)) {
HXLINE( 673)											action773->addKey(key773,state773);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action774 = this->_note_right;
HXDLIN( 673)									int state774 = 1;
HXDLIN( 673)									int _g830 = 0;
HXDLIN( 673)									while((_g830 < copyKeys27->length)){
HXLINE( 673)										int key774 = copyKeys27->__get(_g830);
HXDLIN( 673)										_g830 = (_g830 + 1);
HXDLIN( 673)										if ((key774 != -1)) {
HXLINE( 673)											action774->addKey(key774,state774);
            										}
            									}
            								}
HXDLIN( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action775 = this->_note_rightP;
HXDLIN( 673)									int state775 = 2;
HXDLIN( 673)									int _g831 = 0;
HXDLIN( 673)									while((_g831 < copyKeys27->length)){
HXLINE( 673)										int key775 = copyKeys27->__get(_g831);
HXDLIN( 673)										_g831 = (_g831 + 1);
HXDLIN( 673)										if ((key775 != -1)) {
HXLINE( 673)											action775->addKey(key775,state775);
            										}
            									}
            								}
HXDLIN( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action776 = this->_note_rightR;
HXDLIN( 673)									int state776 = -1;
HXDLIN( 673)									int _g832 = 0;
HXDLIN( 673)									while((_g832 < copyKeys27->length)){
HXLINE( 673)										int key776 = copyKeys27->__get(_g832);
HXDLIN( 673)										_g832 = (_g832 + 1);
HXDLIN( 673)										if ((key776 != -1)) {
HXLINE( 673)											action776->addKey(key776,state776);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action777 = this->_note_down;
HXDLIN( 673)									int state777 = 1;
HXDLIN( 673)									int _g833 = 0;
HXDLIN( 673)									while((_g833 < copyKeys27->length)){
HXLINE( 673)										int key777 = copyKeys27->__get(_g833);
HXDLIN( 673)										_g833 = (_g833 + 1);
HXDLIN( 673)										if ((key777 != -1)) {
HXLINE( 673)											action777->addKey(key777,state777);
            										}
            									}
            								}
HXDLIN( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action778 = this->_note_downP;
HXDLIN( 673)									int state778 = 2;
HXDLIN( 673)									int _g834 = 0;
HXDLIN( 673)									while((_g834 < copyKeys27->length)){
HXLINE( 673)										int key778 = copyKeys27->__get(_g834);
HXDLIN( 673)										_g834 = (_g834 + 1);
HXDLIN( 673)										if ((key778 != -1)) {
HXLINE( 673)											action778->addKey(key778,state778);
            										}
            									}
            								}
HXDLIN( 673)								{
HXLINE( 673)									 ::flixel::input::actions::FlxActionDigital action779 = this->_note_downR;
HXDLIN( 673)									int state779 = -1;
HXDLIN( 673)									int _g835 = 0;
HXDLIN( 673)									while((_g835 < copyKeys27->length)){
HXLINE( 673)										int key779 = copyKeys27->__get(_g835);
HXDLIN( 673)										_g835 = (_g835 + 1);
HXDLIN( 673)										if ((key779 != -1)) {
HXLINE( 673)											action779->addKey(key779,state779);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 673)								 ::flixel::input::actions::FlxActionDigital action780 = this->_reset;
HXDLIN( 673)								int state780 = 2;
HXDLIN( 673)								int _g836 = 0;
HXDLIN( 673)								while((_g836 < copyKeys27->length)){
HXLINE( 673)									int key780 = copyKeys27->__get(_g836);
HXDLIN( 673)									_g836 = (_g836 + 1);
HXDLIN( 673)									if ((key780 != -1)) {
HXLINE( 673)										action780->addKey(key780,state780);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 673)								 ::flixel::input::actions::FlxActionDigital action781 = this->_accept;
HXDLIN( 673)								int state781 = 2;
HXDLIN( 673)								int _g837 = 0;
HXDLIN( 673)								while((_g837 < copyKeys27->length)){
HXLINE( 673)									int key781 = copyKeys27->__get(_g837);
HXDLIN( 673)									_g837 = (_g837 + 1);
HXDLIN( 673)									if ((key781 != -1)) {
HXLINE( 673)										action781->addKey(key781,state781);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 673)								 ::flixel::input::actions::FlxActionDigital action782 = this->_back;
HXDLIN( 673)								int state782 = 2;
HXDLIN( 673)								int _g838 = 0;
HXDLIN( 673)								while((_g838 < copyKeys27->length)){
HXLINE( 673)									int key782 = copyKeys27->__get(_g838);
HXDLIN( 673)									_g838 = (_g838 + 1);
HXDLIN( 673)									if ((key782 != -1)) {
HXLINE( 673)										action782->addKey(key782,state782);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 673)								 ::flixel::input::actions::FlxActionDigital action783 = this->_pause;
HXDLIN( 673)								int state783 = 2;
HXDLIN( 673)								int _g839 = 0;
HXDLIN( 673)								while((_g839 < copyKeys27->length)){
HXLINE( 673)									int key783 = copyKeys27->__get(_g839);
HXDLIN( 673)									_g839 = (_g839 + 1);
HXDLIN( 673)									if ((key783 != -1)) {
HXLINE( 673)										action783->addKey(key783,state783);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 674)					{
HXLINE( 674)						::Array< int > copyKeys28 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1136,1)->copy();
HXDLIN( 674)						{
HXLINE( 674)							int _g840 = 0;
HXDLIN( 674)							int _g841 = copyKeys28->length;
HXDLIN( 674)							while((_g840 < _g841)){
HXLINE( 674)								_g840 = (_g840 + 1);
HXDLIN( 674)								int i28 = (_g840 - 1);
HXDLIN( 674)								if ((i28 == -1)) {
HXLINE( 674)									copyKeys28->remove(i28);
            								}
            							}
            						}
HXDLIN( 674)						switch((int)(::Control_obj::NOTE_UP_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action784 = this->_ui_up;
HXDLIN( 674)									int state784 = 1;
HXDLIN( 674)									int _g842 = 0;
HXDLIN( 674)									while((_g842 < copyKeys28->length)){
HXLINE( 674)										int key784 = copyKeys28->__get(_g842);
HXDLIN( 674)										_g842 = (_g842 + 1);
HXDLIN( 674)										if ((key784 != -1)) {
HXLINE( 674)											action784->addKey(key784,state784);
            										}
            									}
            								}
HXDLIN( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action785 = this->_ui_upP;
HXDLIN( 674)									int state785 = 2;
HXDLIN( 674)									int _g843 = 0;
HXDLIN( 674)									while((_g843 < copyKeys28->length)){
HXLINE( 674)										int key785 = copyKeys28->__get(_g843);
HXDLIN( 674)										_g843 = (_g843 + 1);
HXDLIN( 674)										if ((key785 != -1)) {
HXLINE( 674)											action785->addKey(key785,state785);
            										}
            									}
            								}
HXDLIN( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action786 = this->_ui_upR;
HXDLIN( 674)									int state786 = -1;
HXDLIN( 674)									int _g844 = 0;
HXDLIN( 674)									while((_g844 < copyKeys28->length)){
HXLINE( 674)										int key786 = copyKeys28->__get(_g844);
HXDLIN( 674)										_g844 = (_g844 + 1);
HXDLIN( 674)										if ((key786 != -1)) {
HXLINE( 674)											action786->addKey(key786,state786);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action787 = this->_ui_left;
HXDLIN( 674)									int state787 = 1;
HXDLIN( 674)									int _g845 = 0;
HXDLIN( 674)									while((_g845 < copyKeys28->length)){
HXLINE( 674)										int key787 = copyKeys28->__get(_g845);
HXDLIN( 674)										_g845 = (_g845 + 1);
HXDLIN( 674)										if ((key787 != -1)) {
HXLINE( 674)											action787->addKey(key787,state787);
            										}
            									}
            								}
HXDLIN( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action788 = this->_ui_leftP;
HXDLIN( 674)									int state788 = 2;
HXDLIN( 674)									int _g846 = 0;
HXDLIN( 674)									while((_g846 < copyKeys28->length)){
HXLINE( 674)										int key788 = copyKeys28->__get(_g846);
HXDLIN( 674)										_g846 = (_g846 + 1);
HXDLIN( 674)										if ((key788 != -1)) {
HXLINE( 674)											action788->addKey(key788,state788);
            										}
            									}
            								}
HXDLIN( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action789 = this->_ui_leftR;
HXDLIN( 674)									int state789 = -1;
HXDLIN( 674)									int _g847 = 0;
HXDLIN( 674)									while((_g847 < copyKeys28->length)){
HXLINE( 674)										int key789 = copyKeys28->__get(_g847);
HXDLIN( 674)										_g847 = (_g847 + 1);
HXDLIN( 674)										if ((key789 != -1)) {
HXLINE( 674)											action789->addKey(key789,state789);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action790 = this->_ui_right;
HXDLIN( 674)									int state790 = 1;
HXDLIN( 674)									int _g848 = 0;
HXDLIN( 674)									while((_g848 < copyKeys28->length)){
HXLINE( 674)										int key790 = copyKeys28->__get(_g848);
HXDLIN( 674)										_g848 = (_g848 + 1);
HXDLIN( 674)										if ((key790 != -1)) {
HXLINE( 674)											action790->addKey(key790,state790);
            										}
            									}
            								}
HXDLIN( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action791 = this->_ui_rightP;
HXDLIN( 674)									int state791 = 2;
HXDLIN( 674)									int _g849 = 0;
HXDLIN( 674)									while((_g849 < copyKeys28->length)){
HXLINE( 674)										int key791 = copyKeys28->__get(_g849);
HXDLIN( 674)										_g849 = (_g849 + 1);
HXDLIN( 674)										if ((key791 != -1)) {
HXLINE( 674)											action791->addKey(key791,state791);
            										}
            									}
            								}
HXDLIN( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action792 = this->_ui_rightR;
HXDLIN( 674)									int state792 = -1;
HXDLIN( 674)									int _g850 = 0;
HXDLIN( 674)									while((_g850 < copyKeys28->length)){
HXLINE( 674)										int key792 = copyKeys28->__get(_g850);
HXDLIN( 674)										_g850 = (_g850 + 1);
HXDLIN( 674)										if ((key792 != -1)) {
HXLINE( 674)											action792->addKey(key792,state792);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action793 = this->_ui_down;
HXDLIN( 674)									int state793 = 1;
HXDLIN( 674)									int _g851 = 0;
HXDLIN( 674)									while((_g851 < copyKeys28->length)){
HXLINE( 674)										int key793 = copyKeys28->__get(_g851);
HXDLIN( 674)										_g851 = (_g851 + 1);
HXDLIN( 674)										if ((key793 != -1)) {
HXLINE( 674)											action793->addKey(key793,state793);
            										}
            									}
            								}
HXDLIN( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action794 = this->_ui_downP;
HXDLIN( 674)									int state794 = 2;
HXDLIN( 674)									int _g852 = 0;
HXDLIN( 674)									while((_g852 < copyKeys28->length)){
HXLINE( 674)										int key794 = copyKeys28->__get(_g852);
HXDLIN( 674)										_g852 = (_g852 + 1);
HXDLIN( 674)										if ((key794 != -1)) {
HXLINE( 674)											action794->addKey(key794,state794);
            										}
            									}
            								}
HXDLIN( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action795 = this->_ui_downR;
HXDLIN( 674)									int state795 = -1;
HXDLIN( 674)									int _g853 = 0;
HXDLIN( 674)									while((_g853 < copyKeys28->length)){
HXLINE( 674)										int key795 = copyKeys28->__get(_g853);
HXDLIN( 674)										_g853 = (_g853 + 1);
HXDLIN( 674)										if ((key795 != -1)) {
HXLINE( 674)											action795->addKey(key795,state795);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action796 = this->_note_up;
HXDLIN( 674)									int state796 = 1;
HXDLIN( 674)									int _g854 = 0;
HXDLIN( 674)									while((_g854 < copyKeys28->length)){
HXLINE( 674)										int key796 = copyKeys28->__get(_g854);
HXDLIN( 674)										_g854 = (_g854 + 1);
HXDLIN( 674)										if ((key796 != -1)) {
HXLINE( 674)											action796->addKey(key796,state796);
            										}
            									}
            								}
HXDLIN( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action797 = this->_note_upP;
HXDLIN( 674)									int state797 = 2;
HXDLIN( 674)									int _g855 = 0;
HXDLIN( 674)									while((_g855 < copyKeys28->length)){
HXLINE( 674)										int key797 = copyKeys28->__get(_g855);
HXDLIN( 674)										_g855 = (_g855 + 1);
HXDLIN( 674)										if ((key797 != -1)) {
HXLINE( 674)											action797->addKey(key797,state797);
            										}
            									}
            								}
HXDLIN( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action798 = this->_note_upR;
HXDLIN( 674)									int state798 = -1;
HXDLIN( 674)									int _g856 = 0;
HXDLIN( 674)									while((_g856 < copyKeys28->length)){
HXLINE( 674)										int key798 = copyKeys28->__get(_g856);
HXDLIN( 674)										_g856 = (_g856 + 1);
HXDLIN( 674)										if ((key798 != -1)) {
HXLINE( 674)											action798->addKey(key798,state798);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action799 = this->_note_left;
HXDLIN( 674)									int state799 = 1;
HXDLIN( 674)									int _g857 = 0;
HXDLIN( 674)									while((_g857 < copyKeys28->length)){
HXLINE( 674)										int key799 = copyKeys28->__get(_g857);
HXDLIN( 674)										_g857 = (_g857 + 1);
HXDLIN( 674)										if ((key799 != -1)) {
HXLINE( 674)											action799->addKey(key799,state799);
            										}
            									}
            								}
HXDLIN( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action800 = this->_note_leftP;
HXDLIN( 674)									int state800 = 2;
HXDLIN( 674)									int _g858 = 0;
HXDLIN( 674)									while((_g858 < copyKeys28->length)){
HXLINE( 674)										int key800 = copyKeys28->__get(_g858);
HXDLIN( 674)										_g858 = (_g858 + 1);
HXDLIN( 674)										if ((key800 != -1)) {
HXLINE( 674)											action800->addKey(key800,state800);
            										}
            									}
            								}
HXDLIN( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action801 = this->_note_leftR;
HXDLIN( 674)									int state801 = -1;
HXDLIN( 674)									int _g859 = 0;
HXDLIN( 674)									while((_g859 < copyKeys28->length)){
HXLINE( 674)										int key801 = copyKeys28->__get(_g859);
HXDLIN( 674)										_g859 = (_g859 + 1);
HXDLIN( 674)										if ((key801 != -1)) {
HXLINE( 674)											action801->addKey(key801,state801);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action802 = this->_note_right;
HXDLIN( 674)									int state802 = 1;
HXDLIN( 674)									int _g860 = 0;
HXDLIN( 674)									while((_g860 < copyKeys28->length)){
HXLINE( 674)										int key802 = copyKeys28->__get(_g860);
HXDLIN( 674)										_g860 = (_g860 + 1);
HXDLIN( 674)										if ((key802 != -1)) {
HXLINE( 674)											action802->addKey(key802,state802);
            										}
            									}
            								}
HXDLIN( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action803 = this->_note_rightP;
HXDLIN( 674)									int state803 = 2;
HXDLIN( 674)									int _g861 = 0;
HXDLIN( 674)									while((_g861 < copyKeys28->length)){
HXLINE( 674)										int key803 = copyKeys28->__get(_g861);
HXDLIN( 674)										_g861 = (_g861 + 1);
HXDLIN( 674)										if ((key803 != -1)) {
HXLINE( 674)											action803->addKey(key803,state803);
            										}
            									}
            								}
HXDLIN( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action804 = this->_note_rightR;
HXDLIN( 674)									int state804 = -1;
HXDLIN( 674)									int _g862 = 0;
HXDLIN( 674)									while((_g862 < copyKeys28->length)){
HXLINE( 674)										int key804 = copyKeys28->__get(_g862);
HXDLIN( 674)										_g862 = (_g862 + 1);
HXDLIN( 674)										if ((key804 != -1)) {
HXLINE( 674)											action804->addKey(key804,state804);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action805 = this->_note_down;
HXDLIN( 674)									int state805 = 1;
HXDLIN( 674)									int _g863 = 0;
HXDLIN( 674)									while((_g863 < copyKeys28->length)){
HXLINE( 674)										int key805 = copyKeys28->__get(_g863);
HXDLIN( 674)										_g863 = (_g863 + 1);
HXDLIN( 674)										if ((key805 != -1)) {
HXLINE( 674)											action805->addKey(key805,state805);
            										}
            									}
            								}
HXDLIN( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action806 = this->_note_downP;
HXDLIN( 674)									int state806 = 2;
HXDLIN( 674)									int _g864 = 0;
HXDLIN( 674)									while((_g864 < copyKeys28->length)){
HXLINE( 674)										int key806 = copyKeys28->__get(_g864);
HXDLIN( 674)										_g864 = (_g864 + 1);
HXDLIN( 674)										if ((key806 != -1)) {
HXLINE( 674)											action806->addKey(key806,state806);
            										}
            									}
            								}
HXDLIN( 674)								{
HXLINE( 674)									 ::flixel::input::actions::FlxActionDigital action807 = this->_note_downR;
HXDLIN( 674)									int state807 = -1;
HXDLIN( 674)									int _g865 = 0;
HXDLIN( 674)									while((_g865 < copyKeys28->length)){
HXLINE( 674)										int key807 = copyKeys28->__get(_g865);
HXDLIN( 674)										_g865 = (_g865 + 1);
HXDLIN( 674)										if ((key807 != -1)) {
HXLINE( 674)											action807->addKey(key807,state807);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 674)								 ::flixel::input::actions::FlxActionDigital action808 = this->_reset;
HXDLIN( 674)								int state808 = 2;
HXDLIN( 674)								int _g866 = 0;
HXDLIN( 674)								while((_g866 < copyKeys28->length)){
HXLINE( 674)									int key808 = copyKeys28->__get(_g866);
HXDLIN( 674)									_g866 = (_g866 + 1);
HXDLIN( 674)									if ((key808 != -1)) {
HXLINE( 674)										action808->addKey(key808,state808);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 674)								 ::flixel::input::actions::FlxActionDigital action809 = this->_accept;
HXDLIN( 674)								int state809 = 2;
HXDLIN( 674)								int _g867 = 0;
HXDLIN( 674)								while((_g867 < copyKeys28->length)){
HXLINE( 674)									int key809 = copyKeys28->__get(_g867);
HXDLIN( 674)									_g867 = (_g867 + 1);
HXDLIN( 674)									if ((key809 != -1)) {
HXLINE( 674)										action809->addKey(key809,state809);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 674)								 ::flixel::input::actions::FlxActionDigital action810 = this->_back;
HXDLIN( 674)								int state810 = 2;
HXDLIN( 674)								int _g868 = 0;
HXDLIN( 674)								while((_g868 < copyKeys28->length)){
HXLINE( 674)									int key810 = copyKeys28->__get(_g868);
HXDLIN( 674)									_g868 = (_g868 + 1);
HXDLIN( 674)									if ((key810 != -1)) {
HXLINE( 674)										action810->addKey(key810,state810);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 674)								 ::flixel::input::actions::FlxActionDigital action811 = this->_pause;
HXDLIN( 674)								int state811 = 2;
HXDLIN( 674)								int _g869 = 0;
HXDLIN( 674)								while((_g869 < copyKeys28->length)){
HXLINE( 674)									int key811 = copyKeys28->__get(_g869);
HXDLIN( 674)									_g869 = (_g869 + 1);
HXDLIN( 674)									if ((key811 != -1)) {
HXLINE( 674)										action811->addKey(key811,state811);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 675)					{
HXLINE( 675)						::Array< int > copyKeys29 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1137,1)->copy();
HXDLIN( 675)						{
HXLINE( 675)							int _g870 = 0;
HXDLIN( 675)							int _g871 = copyKeys29->length;
HXDLIN( 675)							while((_g870 < _g871)){
HXLINE( 675)								_g870 = (_g870 + 1);
HXDLIN( 675)								int i29 = (_g870 - 1);
HXDLIN( 675)								if ((i29 == -1)) {
HXLINE( 675)									copyKeys29->remove(i29);
            								}
            							}
            						}
HXDLIN( 675)						switch((int)(::Control_obj::NOTE_DOWN_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action812 = this->_ui_up;
HXDLIN( 675)									int state812 = 1;
HXDLIN( 675)									int _g872 = 0;
HXDLIN( 675)									while((_g872 < copyKeys29->length)){
HXLINE( 675)										int key812 = copyKeys29->__get(_g872);
HXDLIN( 675)										_g872 = (_g872 + 1);
HXDLIN( 675)										if ((key812 != -1)) {
HXLINE( 675)											action812->addKey(key812,state812);
            										}
            									}
            								}
HXDLIN( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action813 = this->_ui_upP;
HXDLIN( 675)									int state813 = 2;
HXDLIN( 675)									int _g873 = 0;
HXDLIN( 675)									while((_g873 < copyKeys29->length)){
HXLINE( 675)										int key813 = copyKeys29->__get(_g873);
HXDLIN( 675)										_g873 = (_g873 + 1);
HXDLIN( 675)										if ((key813 != -1)) {
HXLINE( 675)											action813->addKey(key813,state813);
            										}
            									}
            								}
HXDLIN( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action814 = this->_ui_upR;
HXDLIN( 675)									int state814 = -1;
HXDLIN( 675)									int _g874 = 0;
HXDLIN( 675)									while((_g874 < copyKeys29->length)){
HXLINE( 675)										int key814 = copyKeys29->__get(_g874);
HXDLIN( 675)										_g874 = (_g874 + 1);
HXDLIN( 675)										if ((key814 != -1)) {
HXLINE( 675)											action814->addKey(key814,state814);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action815 = this->_ui_left;
HXDLIN( 675)									int state815 = 1;
HXDLIN( 675)									int _g875 = 0;
HXDLIN( 675)									while((_g875 < copyKeys29->length)){
HXLINE( 675)										int key815 = copyKeys29->__get(_g875);
HXDLIN( 675)										_g875 = (_g875 + 1);
HXDLIN( 675)										if ((key815 != -1)) {
HXLINE( 675)											action815->addKey(key815,state815);
            										}
            									}
            								}
HXDLIN( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action816 = this->_ui_leftP;
HXDLIN( 675)									int state816 = 2;
HXDLIN( 675)									int _g876 = 0;
HXDLIN( 675)									while((_g876 < copyKeys29->length)){
HXLINE( 675)										int key816 = copyKeys29->__get(_g876);
HXDLIN( 675)										_g876 = (_g876 + 1);
HXDLIN( 675)										if ((key816 != -1)) {
HXLINE( 675)											action816->addKey(key816,state816);
            										}
            									}
            								}
HXDLIN( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action817 = this->_ui_leftR;
HXDLIN( 675)									int state817 = -1;
HXDLIN( 675)									int _g877 = 0;
HXDLIN( 675)									while((_g877 < copyKeys29->length)){
HXLINE( 675)										int key817 = copyKeys29->__get(_g877);
HXDLIN( 675)										_g877 = (_g877 + 1);
HXDLIN( 675)										if ((key817 != -1)) {
HXLINE( 675)											action817->addKey(key817,state817);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action818 = this->_ui_right;
HXDLIN( 675)									int state818 = 1;
HXDLIN( 675)									int _g878 = 0;
HXDLIN( 675)									while((_g878 < copyKeys29->length)){
HXLINE( 675)										int key818 = copyKeys29->__get(_g878);
HXDLIN( 675)										_g878 = (_g878 + 1);
HXDLIN( 675)										if ((key818 != -1)) {
HXLINE( 675)											action818->addKey(key818,state818);
            										}
            									}
            								}
HXDLIN( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action819 = this->_ui_rightP;
HXDLIN( 675)									int state819 = 2;
HXDLIN( 675)									int _g879 = 0;
HXDLIN( 675)									while((_g879 < copyKeys29->length)){
HXLINE( 675)										int key819 = copyKeys29->__get(_g879);
HXDLIN( 675)										_g879 = (_g879 + 1);
HXDLIN( 675)										if ((key819 != -1)) {
HXLINE( 675)											action819->addKey(key819,state819);
            										}
            									}
            								}
HXDLIN( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action820 = this->_ui_rightR;
HXDLIN( 675)									int state820 = -1;
HXDLIN( 675)									int _g880 = 0;
HXDLIN( 675)									while((_g880 < copyKeys29->length)){
HXLINE( 675)										int key820 = copyKeys29->__get(_g880);
HXDLIN( 675)										_g880 = (_g880 + 1);
HXDLIN( 675)										if ((key820 != -1)) {
HXLINE( 675)											action820->addKey(key820,state820);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action821 = this->_ui_down;
HXDLIN( 675)									int state821 = 1;
HXDLIN( 675)									int _g881 = 0;
HXDLIN( 675)									while((_g881 < copyKeys29->length)){
HXLINE( 675)										int key821 = copyKeys29->__get(_g881);
HXDLIN( 675)										_g881 = (_g881 + 1);
HXDLIN( 675)										if ((key821 != -1)) {
HXLINE( 675)											action821->addKey(key821,state821);
            										}
            									}
            								}
HXDLIN( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action822 = this->_ui_downP;
HXDLIN( 675)									int state822 = 2;
HXDLIN( 675)									int _g882 = 0;
HXDLIN( 675)									while((_g882 < copyKeys29->length)){
HXLINE( 675)										int key822 = copyKeys29->__get(_g882);
HXDLIN( 675)										_g882 = (_g882 + 1);
HXDLIN( 675)										if ((key822 != -1)) {
HXLINE( 675)											action822->addKey(key822,state822);
            										}
            									}
            								}
HXDLIN( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action823 = this->_ui_downR;
HXDLIN( 675)									int state823 = -1;
HXDLIN( 675)									int _g883 = 0;
HXDLIN( 675)									while((_g883 < copyKeys29->length)){
HXLINE( 675)										int key823 = copyKeys29->__get(_g883);
HXDLIN( 675)										_g883 = (_g883 + 1);
HXDLIN( 675)										if ((key823 != -1)) {
HXLINE( 675)											action823->addKey(key823,state823);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action824 = this->_note_up;
HXDLIN( 675)									int state824 = 1;
HXDLIN( 675)									int _g884 = 0;
HXDLIN( 675)									while((_g884 < copyKeys29->length)){
HXLINE( 675)										int key824 = copyKeys29->__get(_g884);
HXDLIN( 675)										_g884 = (_g884 + 1);
HXDLIN( 675)										if ((key824 != -1)) {
HXLINE( 675)											action824->addKey(key824,state824);
            										}
            									}
            								}
HXDLIN( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action825 = this->_note_upP;
HXDLIN( 675)									int state825 = 2;
HXDLIN( 675)									int _g885 = 0;
HXDLIN( 675)									while((_g885 < copyKeys29->length)){
HXLINE( 675)										int key825 = copyKeys29->__get(_g885);
HXDLIN( 675)										_g885 = (_g885 + 1);
HXDLIN( 675)										if ((key825 != -1)) {
HXLINE( 675)											action825->addKey(key825,state825);
            										}
            									}
            								}
HXDLIN( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action826 = this->_note_upR;
HXDLIN( 675)									int state826 = -1;
HXDLIN( 675)									int _g886 = 0;
HXDLIN( 675)									while((_g886 < copyKeys29->length)){
HXLINE( 675)										int key826 = copyKeys29->__get(_g886);
HXDLIN( 675)										_g886 = (_g886 + 1);
HXDLIN( 675)										if ((key826 != -1)) {
HXLINE( 675)											action826->addKey(key826,state826);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action827 = this->_note_left;
HXDLIN( 675)									int state827 = 1;
HXDLIN( 675)									int _g887 = 0;
HXDLIN( 675)									while((_g887 < copyKeys29->length)){
HXLINE( 675)										int key827 = copyKeys29->__get(_g887);
HXDLIN( 675)										_g887 = (_g887 + 1);
HXDLIN( 675)										if ((key827 != -1)) {
HXLINE( 675)											action827->addKey(key827,state827);
            										}
            									}
            								}
HXDLIN( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action828 = this->_note_leftP;
HXDLIN( 675)									int state828 = 2;
HXDLIN( 675)									int _g888 = 0;
HXDLIN( 675)									while((_g888 < copyKeys29->length)){
HXLINE( 675)										int key828 = copyKeys29->__get(_g888);
HXDLIN( 675)										_g888 = (_g888 + 1);
HXDLIN( 675)										if ((key828 != -1)) {
HXLINE( 675)											action828->addKey(key828,state828);
            										}
            									}
            								}
HXDLIN( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action829 = this->_note_leftR;
HXDLIN( 675)									int state829 = -1;
HXDLIN( 675)									int _g889 = 0;
HXDLIN( 675)									while((_g889 < copyKeys29->length)){
HXLINE( 675)										int key829 = copyKeys29->__get(_g889);
HXDLIN( 675)										_g889 = (_g889 + 1);
HXDLIN( 675)										if ((key829 != -1)) {
HXLINE( 675)											action829->addKey(key829,state829);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action830 = this->_note_right;
HXDLIN( 675)									int state830 = 1;
HXDLIN( 675)									int _g890 = 0;
HXDLIN( 675)									while((_g890 < copyKeys29->length)){
HXLINE( 675)										int key830 = copyKeys29->__get(_g890);
HXDLIN( 675)										_g890 = (_g890 + 1);
HXDLIN( 675)										if ((key830 != -1)) {
HXLINE( 675)											action830->addKey(key830,state830);
            										}
            									}
            								}
HXDLIN( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action831 = this->_note_rightP;
HXDLIN( 675)									int state831 = 2;
HXDLIN( 675)									int _g891 = 0;
HXDLIN( 675)									while((_g891 < copyKeys29->length)){
HXLINE( 675)										int key831 = copyKeys29->__get(_g891);
HXDLIN( 675)										_g891 = (_g891 + 1);
HXDLIN( 675)										if ((key831 != -1)) {
HXLINE( 675)											action831->addKey(key831,state831);
            										}
            									}
            								}
HXDLIN( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action832 = this->_note_rightR;
HXDLIN( 675)									int state832 = -1;
HXDLIN( 675)									int _g892 = 0;
HXDLIN( 675)									while((_g892 < copyKeys29->length)){
HXLINE( 675)										int key832 = copyKeys29->__get(_g892);
HXDLIN( 675)										_g892 = (_g892 + 1);
HXDLIN( 675)										if ((key832 != -1)) {
HXLINE( 675)											action832->addKey(key832,state832);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action833 = this->_note_down;
HXDLIN( 675)									int state833 = 1;
HXDLIN( 675)									int _g893 = 0;
HXDLIN( 675)									while((_g893 < copyKeys29->length)){
HXLINE( 675)										int key833 = copyKeys29->__get(_g893);
HXDLIN( 675)										_g893 = (_g893 + 1);
HXDLIN( 675)										if ((key833 != -1)) {
HXLINE( 675)											action833->addKey(key833,state833);
            										}
            									}
            								}
HXDLIN( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action834 = this->_note_downP;
HXDLIN( 675)									int state834 = 2;
HXDLIN( 675)									int _g894 = 0;
HXDLIN( 675)									while((_g894 < copyKeys29->length)){
HXLINE( 675)										int key834 = copyKeys29->__get(_g894);
HXDLIN( 675)										_g894 = (_g894 + 1);
HXDLIN( 675)										if ((key834 != -1)) {
HXLINE( 675)											action834->addKey(key834,state834);
            										}
            									}
            								}
HXDLIN( 675)								{
HXLINE( 675)									 ::flixel::input::actions::FlxActionDigital action835 = this->_note_downR;
HXDLIN( 675)									int state835 = -1;
HXDLIN( 675)									int _g895 = 0;
HXDLIN( 675)									while((_g895 < copyKeys29->length)){
HXLINE( 675)										int key835 = copyKeys29->__get(_g895);
HXDLIN( 675)										_g895 = (_g895 + 1);
HXDLIN( 675)										if ((key835 != -1)) {
HXLINE( 675)											action835->addKey(key835,state835);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 675)								 ::flixel::input::actions::FlxActionDigital action836 = this->_reset;
HXDLIN( 675)								int state836 = 2;
HXDLIN( 675)								int _g896 = 0;
HXDLIN( 675)								while((_g896 < copyKeys29->length)){
HXLINE( 675)									int key836 = copyKeys29->__get(_g896);
HXDLIN( 675)									_g896 = (_g896 + 1);
HXDLIN( 675)									if ((key836 != -1)) {
HXLINE( 675)										action836->addKey(key836,state836);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 675)								 ::flixel::input::actions::FlxActionDigital action837 = this->_accept;
HXDLIN( 675)								int state837 = 2;
HXDLIN( 675)								int _g897 = 0;
HXDLIN( 675)								while((_g897 < copyKeys29->length)){
HXLINE( 675)									int key837 = copyKeys29->__get(_g897);
HXDLIN( 675)									_g897 = (_g897 + 1);
HXDLIN( 675)									if ((key837 != -1)) {
HXLINE( 675)										action837->addKey(key837,state837);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 675)								 ::flixel::input::actions::FlxActionDigital action838 = this->_back;
HXDLIN( 675)								int state838 = 2;
HXDLIN( 675)								int _g898 = 0;
HXDLIN( 675)								while((_g898 < copyKeys29->length)){
HXLINE( 675)									int key838 = copyKeys29->__get(_g898);
HXDLIN( 675)									_g898 = (_g898 + 1);
HXDLIN( 675)									if ((key838 != -1)) {
HXLINE( 675)										action838->addKey(key838,state838);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 675)								 ::flixel::input::actions::FlxActionDigital action839 = this->_pause;
HXDLIN( 675)								int state839 = 2;
HXDLIN( 675)								int _g899 = 0;
HXDLIN( 675)								while((_g899 < copyKeys29->length)){
HXLINE( 675)									int key839 = copyKeys29->__get(_g899);
HXDLIN( 675)									_g899 = (_g899 + 1);
HXDLIN( 675)									if ((key839 != -1)) {
HXLINE( 675)										action839->addKey(key839,state839);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 676)					{
HXLINE( 676)						::Array< int > copyKeys30 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1138,1)->copy();
HXDLIN( 676)						{
HXLINE( 676)							int _g900 = 0;
HXDLIN( 676)							int _g901 = copyKeys30->length;
HXDLIN( 676)							while((_g900 < _g901)){
HXLINE( 676)								_g900 = (_g900 + 1);
HXDLIN( 676)								int i30 = (_g900 - 1);
HXDLIN( 676)								if ((i30 == -1)) {
HXLINE( 676)									copyKeys30->remove(i30);
            								}
            							}
            						}
HXDLIN( 676)						switch((int)(::Control_obj::NOTE_LEFT_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action840 = this->_ui_up;
HXDLIN( 676)									int state840 = 1;
HXDLIN( 676)									int _g902 = 0;
HXDLIN( 676)									while((_g902 < copyKeys30->length)){
HXLINE( 676)										int key840 = copyKeys30->__get(_g902);
HXDLIN( 676)										_g902 = (_g902 + 1);
HXDLIN( 676)										if ((key840 != -1)) {
HXLINE( 676)											action840->addKey(key840,state840);
            										}
            									}
            								}
HXDLIN( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action841 = this->_ui_upP;
HXDLIN( 676)									int state841 = 2;
HXDLIN( 676)									int _g903 = 0;
HXDLIN( 676)									while((_g903 < copyKeys30->length)){
HXLINE( 676)										int key841 = copyKeys30->__get(_g903);
HXDLIN( 676)										_g903 = (_g903 + 1);
HXDLIN( 676)										if ((key841 != -1)) {
HXLINE( 676)											action841->addKey(key841,state841);
            										}
            									}
            								}
HXDLIN( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action842 = this->_ui_upR;
HXDLIN( 676)									int state842 = -1;
HXDLIN( 676)									int _g904 = 0;
HXDLIN( 676)									while((_g904 < copyKeys30->length)){
HXLINE( 676)										int key842 = copyKeys30->__get(_g904);
HXDLIN( 676)										_g904 = (_g904 + 1);
HXDLIN( 676)										if ((key842 != -1)) {
HXLINE( 676)											action842->addKey(key842,state842);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action843 = this->_ui_left;
HXDLIN( 676)									int state843 = 1;
HXDLIN( 676)									int _g905 = 0;
HXDLIN( 676)									while((_g905 < copyKeys30->length)){
HXLINE( 676)										int key843 = copyKeys30->__get(_g905);
HXDLIN( 676)										_g905 = (_g905 + 1);
HXDLIN( 676)										if ((key843 != -1)) {
HXLINE( 676)											action843->addKey(key843,state843);
            										}
            									}
            								}
HXDLIN( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action844 = this->_ui_leftP;
HXDLIN( 676)									int state844 = 2;
HXDLIN( 676)									int _g906 = 0;
HXDLIN( 676)									while((_g906 < copyKeys30->length)){
HXLINE( 676)										int key844 = copyKeys30->__get(_g906);
HXDLIN( 676)										_g906 = (_g906 + 1);
HXDLIN( 676)										if ((key844 != -1)) {
HXLINE( 676)											action844->addKey(key844,state844);
            										}
            									}
            								}
HXDLIN( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action845 = this->_ui_leftR;
HXDLIN( 676)									int state845 = -1;
HXDLIN( 676)									int _g907 = 0;
HXDLIN( 676)									while((_g907 < copyKeys30->length)){
HXLINE( 676)										int key845 = copyKeys30->__get(_g907);
HXDLIN( 676)										_g907 = (_g907 + 1);
HXDLIN( 676)										if ((key845 != -1)) {
HXLINE( 676)											action845->addKey(key845,state845);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action846 = this->_ui_right;
HXDLIN( 676)									int state846 = 1;
HXDLIN( 676)									int _g908 = 0;
HXDLIN( 676)									while((_g908 < copyKeys30->length)){
HXLINE( 676)										int key846 = copyKeys30->__get(_g908);
HXDLIN( 676)										_g908 = (_g908 + 1);
HXDLIN( 676)										if ((key846 != -1)) {
HXLINE( 676)											action846->addKey(key846,state846);
            										}
            									}
            								}
HXDLIN( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action847 = this->_ui_rightP;
HXDLIN( 676)									int state847 = 2;
HXDLIN( 676)									int _g909 = 0;
HXDLIN( 676)									while((_g909 < copyKeys30->length)){
HXLINE( 676)										int key847 = copyKeys30->__get(_g909);
HXDLIN( 676)										_g909 = (_g909 + 1);
HXDLIN( 676)										if ((key847 != -1)) {
HXLINE( 676)											action847->addKey(key847,state847);
            										}
            									}
            								}
HXDLIN( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action848 = this->_ui_rightR;
HXDLIN( 676)									int state848 = -1;
HXDLIN( 676)									int _g910 = 0;
HXDLIN( 676)									while((_g910 < copyKeys30->length)){
HXLINE( 676)										int key848 = copyKeys30->__get(_g910);
HXDLIN( 676)										_g910 = (_g910 + 1);
HXDLIN( 676)										if ((key848 != -1)) {
HXLINE( 676)											action848->addKey(key848,state848);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action849 = this->_ui_down;
HXDLIN( 676)									int state849 = 1;
HXDLIN( 676)									int _g911 = 0;
HXDLIN( 676)									while((_g911 < copyKeys30->length)){
HXLINE( 676)										int key849 = copyKeys30->__get(_g911);
HXDLIN( 676)										_g911 = (_g911 + 1);
HXDLIN( 676)										if ((key849 != -1)) {
HXLINE( 676)											action849->addKey(key849,state849);
            										}
            									}
            								}
HXDLIN( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action850 = this->_ui_downP;
HXDLIN( 676)									int state850 = 2;
HXDLIN( 676)									int _g912 = 0;
HXDLIN( 676)									while((_g912 < copyKeys30->length)){
HXLINE( 676)										int key850 = copyKeys30->__get(_g912);
HXDLIN( 676)										_g912 = (_g912 + 1);
HXDLIN( 676)										if ((key850 != -1)) {
HXLINE( 676)											action850->addKey(key850,state850);
            										}
            									}
            								}
HXDLIN( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action851 = this->_ui_downR;
HXDLIN( 676)									int state851 = -1;
HXDLIN( 676)									int _g913 = 0;
HXDLIN( 676)									while((_g913 < copyKeys30->length)){
HXLINE( 676)										int key851 = copyKeys30->__get(_g913);
HXDLIN( 676)										_g913 = (_g913 + 1);
HXDLIN( 676)										if ((key851 != -1)) {
HXLINE( 676)											action851->addKey(key851,state851);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action852 = this->_note_up;
HXDLIN( 676)									int state852 = 1;
HXDLIN( 676)									int _g914 = 0;
HXDLIN( 676)									while((_g914 < copyKeys30->length)){
HXLINE( 676)										int key852 = copyKeys30->__get(_g914);
HXDLIN( 676)										_g914 = (_g914 + 1);
HXDLIN( 676)										if ((key852 != -1)) {
HXLINE( 676)											action852->addKey(key852,state852);
            										}
            									}
            								}
HXDLIN( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action853 = this->_note_upP;
HXDLIN( 676)									int state853 = 2;
HXDLIN( 676)									int _g915 = 0;
HXDLIN( 676)									while((_g915 < copyKeys30->length)){
HXLINE( 676)										int key853 = copyKeys30->__get(_g915);
HXDLIN( 676)										_g915 = (_g915 + 1);
HXDLIN( 676)										if ((key853 != -1)) {
HXLINE( 676)											action853->addKey(key853,state853);
            										}
            									}
            								}
HXDLIN( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action854 = this->_note_upR;
HXDLIN( 676)									int state854 = -1;
HXDLIN( 676)									int _g916 = 0;
HXDLIN( 676)									while((_g916 < copyKeys30->length)){
HXLINE( 676)										int key854 = copyKeys30->__get(_g916);
HXDLIN( 676)										_g916 = (_g916 + 1);
HXDLIN( 676)										if ((key854 != -1)) {
HXLINE( 676)											action854->addKey(key854,state854);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action855 = this->_note_left;
HXDLIN( 676)									int state855 = 1;
HXDLIN( 676)									int _g917 = 0;
HXDLIN( 676)									while((_g917 < copyKeys30->length)){
HXLINE( 676)										int key855 = copyKeys30->__get(_g917);
HXDLIN( 676)										_g917 = (_g917 + 1);
HXDLIN( 676)										if ((key855 != -1)) {
HXLINE( 676)											action855->addKey(key855,state855);
            										}
            									}
            								}
HXDLIN( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action856 = this->_note_leftP;
HXDLIN( 676)									int state856 = 2;
HXDLIN( 676)									int _g918 = 0;
HXDLIN( 676)									while((_g918 < copyKeys30->length)){
HXLINE( 676)										int key856 = copyKeys30->__get(_g918);
HXDLIN( 676)										_g918 = (_g918 + 1);
HXDLIN( 676)										if ((key856 != -1)) {
HXLINE( 676)											action856->addKey(key856,state856);
            										}
            									}
            								}
HXDLIN( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action857 = this->_note_leftR;
HXDLIN( 676)									int state857 = -1;
HXDLIN( 676)									int _g919 = 0;
HXDLIN( 676)									while((_g919 < copyKeys30->length)){
HXLINE( 676)										int key857 = copyKeys30->__get(_g919);
HXDLIN( 676)										_g919 = (_g919 + 1);
HXDLIN( 676)										if ((key857 != -1)) {
HXLINE( 676)											action857->addKey(key857,state857);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action858 = this->_note_right;
HXDLIN( 676)									int state858 = 1;
HXDLIN( 676)									int _g920 = 0;
HXDLIN( 676)									while((_g920 < copyKeys30->length)){
HXLINE( 676)										int key858 = copyKeys30->__get(_g920);
HXDLIN( 676)										_g920 = (_g920 + 1);
HXDLIN( 676)										if ((key858 != -1)) {
HXLINE( 676)											action858->addKey(key858,state858);
            										}
            									}
            								}
HXDLIN( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action859 = this->_note_rightP;
HXDLIN( 676)									int state859 = 2;
HXDLIN( 676)									int _g921 = 0;
HXDLIN( 676)									while((_g921 < copyKeys30->length)){
HXLINE( 676)										int key859 = copyKeys30->__get(_g921);
HXDLIN( 676)										_g921 = (_g921 + 1);
HXDLIN( 676)										if ((key859 != -1)) {
HXLINE( 676)											action859->addKey(key859,state859);
            										}
            									}
            								}
HXDLIN( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action860 = this->_note_rightR;
HXDLIN( 676)									int state860 = -1;
HXDLIN( 676)									int _g922 = 0;
HXDLIN( 676)									while((_g922 < copyKeys30->length)){
HXLINE( 676)										int key860 = copyKeys30->__get(_g922);
HXDLIN( 676)										_g922 = (_g922 + 1);
HXDLIN( 676)										if ((key860 != -1)) {
HXLINE( 676)											action860->addKey(key860,state860);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action861 = this->_note_down;
HXDLIN( 676)									int state861 = 1;
HXDLIN( 676)									int _g923 = 0;
HXDLIN( 676)									while((_g923 < copyKeys30->length)){
HXLINE( 676)										int key861 = copyKeys30->__get(_g923);
HXDLIN( 676)										_g923 = (_g923 + 1);
HXDLIN( 676)										if ((key861 != -1)) {
HXLINE( 676)											action861->addKey(key861,state861);
            										}
            									}
            								}
HXDLIN( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action862 = this->_note_downP;
HXDLIN( 676)									int state862 = 2;
HXDLIN( 676)									int _g924 = 0;
HXDLIN( 676)									while((_g924 < copyKeys30->length)){
HXLINE( 676)										int key862 = copyKeys30->__get(_g924);
HXDLIN( 676)										_g924 = (_g924 + 1);
HXDLIN( 676)										if ((key862 != -1)) {
HXLINE( 676)											action862->addKey(key862,state862);
            										}
            									}
            								}
HXDLIN( 676)								{
HXLINE( 676)									 ::flixel::input::actions::FlxActionDigital action863 = this->_note_downR;
HXDLIN( 676)									int state863 = -1;
HXDLIN( 676)									int _g925 = 0;
HXDLIN( 676)									while((_g925 < copyKeys30->length)){
HXLINE( 676)										int key863 = copyKeys30->__get(_g925);
HXDLIN( 676)										_g925 = (_g925 + 1);
HXDLIN( 676)										if ((key863 != -1)) {
HXLINE( 676)											action863->addKey(key863,state863);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 676)								 ::flixel::input::actions::FlxActionDigital action864 = this->_reset;
HXDLIN( 676)								int state864 = 2;
HXDLIN( 676)								int _g926 = 0;
HXDLIN( 676)								while((_g926 < copyKeys30->length)){
HXLINE( 676)									int key864 = copyKeys30->__get(_g926);
HXDLIN( 676)									_g926 = (_g926 + 1);
HXDLIN( 676)									if ((key864 != -1)) {
HXLINE( 676)										action864->addKey(key864,state864);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 676)								 ::flixel::input::actions::FlxActionDigital action865 = this->_accept;
HXDLIN( 676)								int state865 = 2;
HXDLIN( 676)								int _g927 = 0;
HXDLIN( 676)								while((_g927 < copyKeys30->length)){
HXLINE( 676)									int key865 = copyKeys30->__get(_g927);
HXDLIN( 676)									_g927 = (_g927 + 1);
HXDLIN( 676)									if ((key865 != -1)) {
HXLINE( 676)										action865->addKey(key865,state865);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 676)								 ::flixel::input::actions::FlxActionDigital action866 = this->_back;
HXDLIN( 676)								int state866 = 2;
HXDLIN( 676)								int _g928 = 0;
HXDLIN( 676)								while((_g928 < copyKeys30->length)){
HXLINE( 676)									int key866 = copyKeys30->__get(_g928);
HXDLIN( 676)									_g928 = (_g928 + 1);
HXDLIN( 676)									if ((key866 != -1)) {
HXLINE( 676)										action866->addKey(key866,state866);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 676)								 ::flixel::input::actions::FlxActionDigital action867 = this->_pause;
HXDLIN( 676)								int state867 = 2;
HXDLIN( 676)								int _g929 = 0;
HXDLIN( 676)								while((_g929 < copyKeys30->length)){
HXLINE( 676)									int key867 = copyKeys30->__get(_g929);
HXDLIN( 676)									_g929 = (_g929 + 1);
HXDLIN( 676)									if ((key867 != -1)) {
HXLINE( 676)										action867->addKey(key867,state867);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 677)					{
HXLINE( 677)						::Array< int > copyKeys31 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1139,1)->copy();
HXDLIN( 677)						{
HXLINE( 677)							int _g930 = 0;
HXDLIN( 677)							int _g931 = copyKeys31->length;
HXDLIN( 677)							while((_g930 < _g931)){
HXLINE( 677)								_g930 = (_g930 + 1);
HXDLIN( 677)								int i31 = (_g930 - 1);
HXDLIN( 677)								if ((i31 == -1)) {
HXLINE( 677)									copyKeys31->remove(i31);
            								}
            							}
            						}
HXDLIN( 677)						switch((int)(::Control_obj::NOTE_RIGHT_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action868 = this->_ui_up;
HXDLIN( 677)									int state868 = 1;
HXDLIN( 677)									int _g932 = 0;
HXDLIN( 677)									while((_g932 < copyKeys31->length)){
HXLINE( 677)										int key868 = copyKeys31->__get(_g932);
HXDLIN( 677)										_g932 = (_g932 + 1);
HXDLIN( 677)										if ((key868 != -1)) {
HXLINE( 677)											action868->addKey(key868,state868);
            										}
            									}
            								}
HXDLIN( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action869 = this->_ui_upP;
HXDLIN( 677)									int state869 = 2;
HXDLIN( 677)									int _g933 = 0;
HXDLIN( 677)									while((_g933 < copyKeys31->length)){
HXLINE( 677)										int key869 = copyKeys31->__get(_g933);
HXDLIN( 677)										_g933 = (_g933 + 1);
HXDLIN( 677)										if ((key869 != -1)) {
HXLINE( 677)											action869->addKey(key869,state869);
            										}
            									}
            								}
HXDLIN( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action870 = this->_ui_upR;
HXDLIN( 677)									int state870 = -1;
HXDLIN( 677)									int _g934 = 0;
HXDLIN( 677)									while((_g934 < copyKeys31->length)){
HXLINE( 677)										int key870 = copyKeys31->__get(_g934);
HXDLIN( 677)										_g934 = (_g934 + 1);
HXDLIN( 677)										if ((key870 != -1)) {
HXLINE( 677)											action870->addKey(key870,state870);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action871 = this->_ui_left;
HXDLIN( 677)									int state871 = 1;
HXDLIN( 677)									int _g935 = 0;
HXDLIN( 677)									while((_g935 < copyKeys31->length)){
HXLINE( 677)										int key871 = copyKeys31->__get(_g935);
HXDLIN( 677)										_g935 = (_g935 + 1);
HXDLIN( 677)										if ((key871 != -1)) {
HXLINE( 677)											action871->addKey(key871,state871);
            										}
            									}
            								}
HXDLIN( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action872 = this->_ui_leftP;
HXDLIN( 677)									int state872 = 2;
HXDLIN( 677)									int _g936 = 0;
HXDLIN( 677)									while((_g936 < copyKeys31->length)){
HXLINE( 677)										int key872 = copyKeys31->__get(_g936);
HXDLIN( 677)										_g936 = (_g936 + 1);
HXDLIN( 677)										if ((key872 != -1)) {
HXLINE( 677)											action872->addKey(key872,state872);
            										}
            									}
            								}
HXDLIN( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action873 = this->_ui_leftR;
HXDLIN( 677)									int state873 = -1;
HXDLIN( 677)									int _g937 = 0;
HXDLIN( 677)									while((_g937 < copyKeys31->length)){
HXLINE( 677)										int key873 = copyKeys31->__get(_g937);
HXDLIN( 677)										_g937 = (_g937 + 1);
HXDLIN( 677)										if ((key873 != -1)) {
HXLINE( 677)											action873->addKey(key873,state873);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action874 = this->_ui_right;
HXDLIN( 677)									int state874 = 1;
HXDLIN( 677)									int _g938 = 0;
HXDLIN( 677)									while((_g938 < copyKeys31->length)){
HXLINE( 677)										int key874 = copyKeys31->__get(_g938);
HXDLIN( 677)										_g938 = (_g938 + 1);
HXDLIN( 677)										if ((key874 != -1)) {
HXLINE( 677)											action874->addKey(key874,state874);
            										}
            									}
            								}
HXDLIN( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action875 = this->_ui_rightP;
HXDLIN( 677)									int state875 = 2;
HXDLIN( 677)									int _g939 = 0;
HXDLIN( 677)									while((_g939 < copyKeys31->length)){
HXLINE( 677)										int key875 = copyKeys31->__get(_g939);
HXDLIN( 677)										_g939 = (_g939 + 1);
HXDLIN( 677)										if ((key875 != -1)) {
HXLINE( 677)											action875->addKey(key875,state875);
            										}
            									}
            								}
HXDLIN( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action876 = this->_ui_rightR;
HXDLIN( 677)									int state876 = -1;
HXDLIN( 677)									int _g940 = 0;
HXDLIN( 677)									while((_g940 < copyKeys31->length)){
HXLINE( 677)										int key876 = copyKeys31->__get(_g940);
HXDLIN( 677)										_g940 = (_g940 + 1);
HXDLIN( 677)										if ((key876 != -1)) {
HXLINE( 677)											action876->addKey(key876,state876);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action877 = this->_ui_down;
HXDLIN( 677)									int state877 = 1;
HXDLIN( 677)									int _g941 = 0;
HXDLIN( 677)									while((_g941 < copyKeys31->length)){
HXLINE( 677)										int key877 = copyKeys31->__get(_g941);
HXDLIN( 677)										_g941 = (_g941 + 1);
HXDLIN( 677)										if ((key877 != -1)) {
HXLINE( 677)											action877->addKey(key877,state877);
            										}
            									}
            								}
HXDLIN( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action878 = this->_ui_downP;
HXDLIN( 677)									int state878 = 2;
HXDLIN( 677)									int _g942 = 0;
HXDLIN( 677)									while((_g942 < copyKeys31->length)){
HXLINE( 677)										int key878 = copyKeys31->__get(_g942);
HXDLIN( 677)										_g942 = (_g942 + 1);
HXDLIN( 677)										if ((key878 != -1)) {
HXLINE( 677)											action878->addKey(key878,state878);
            										}
            									}
            								}
HXDLIN( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action879 = this->_ui_downR;
HXDLIN( 677)									int state879 = -1;
HXDLIN( 677)									int _g943 = 0;
HXDLIN( 677)									while((_g943 < copyKeys31->length)){
HXLINE( 677)										int key879 = copyKeys31->__get(_g943);
HXDLIN( 677)										_g943 = (_g943 + 1);
HXDLIN( 677)										if ((key879 != -1)) {
HXLINE( 677)											action879->addKey(key879,state879);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action880 = this->_note_up;
HXDLIN( 677)									int state880 = 1;
HXDLIN( 677)									int _g944 = 0;
HXDLIN( 677)									while((_g944 < copyKeys31->length)){
HXLINE( 677)										int key880 = copyKeys31->__get(_g944);
HXDLIN( 677)										_g944 = (_g944 + 1);
HXDLIN( 677)										if ((key880 != -1)) {
HXLINE( 677)											action880->addKey(key880,state880);
            										}
            									}
            								}
HXDLIN( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action881 = this->_note_upP;
HXDLIN( 677)									int state881 = 2;
HXDLIN( 677)									int _g945 = 0;
HXDLIN( 677)									while((_g945 < copyKeys31->length)){
HXLINE( 677)										int key881 = copyKeys31->__get(_g945);
HXDLIN( 677)										_g945 = (_g945 + 1);
HXDLIN( 677)										if ((key881 != -1)) {
HXLINE( 677)											action881->addKey(key881,state881);
            										}
            									}
            								}
HXDLIN( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action882 = this->_note_upR;
HXDLIN( 677)									int state882 = -1;
HXDLIN( 677)									int _g946 = 0;
HXDLIN( 677)									while((_g946 < copyKeys31->length)){
HXLINE( 677)										int key882 = copyKeys31->__get(_g946);
HXDLIN( 677)										_g946 = (_g946 + 1);
HXDLIN( 677)										if ((key882 != -1)) {
HXLINE( 677)											action882->addKey(key882,state882);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action883 = this->_note_left;
HXDLIN( 677)									int state883 = 1;
HXDLIN( 677)									int _g947 = 0;
HXDLIN( 677)									while((_g947 < copyKeys31->length)){
HXLINE( 677)										int key883 = copyKeys31->__get(_g947);
HXDLIN( 677)										_g947 = (_g947 + 1);
HXDLIN( 677)										if ((key883 != -1)) {
HXLINE( 677)											action883->addKey(key883,state883);
            										}
            									}
            								}
HXDLIN( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action884 = this->_note_leftP;
HXDLIN( 677)									int state884 = 2;
HXDLIN( 677)									int _g948 = 0;
HXDLIN( 677)									while((_g948 < copyKeys31->length)){
HXLINE( 677)										int key884 = copyKeys31->__get(_g948);
HXDLIN( 677)										_g948 = (_g948 + 1);
HXDLIN( 677)										if ((key884 != -1)) {
HXLINE( 677)											action884->addKey(key884,state884);
            										}
            									}
            								}
HXDLIN( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action885 = this->_note_leftR;
HXDLIN( 677)									int state885 = -1;
HXDLIN( 677)									int _g949 = 0;
HXDLIN( 677)									while((_g949 < copyKeys31->length)){
HXLINE( 677)										int key885 = copyKeys31->__get(_g949);
HXDLIN( 677)										_g949 = (_g949 + 1);
HXDLIN( 677)										if ((key885 != -1)) {
HXLINE( 677)											action885->addKey(key885,state885);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action886 = this->_note_right;
HXDLIN( 677)									int state886 = 1;
HXDLIN( 677)									int _g950 = 0;
HXDLIN( 677)									while((_g950 < copyKeys31->length)){
HXLINE( 677)										int key886 = copyKeys31->__get(_g950);
HXDLIN( 677)										_g950 = (_g950 + 1);
HXDLIN( 677)										if ((key886 != -1)) {
HXLINE( 677)											action886->addKey(key886,state886);
            										}
            									}
            								}
HXDLIN( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action887 = this->_note_rightP;
HXDLIN( 677)									int state887 = 2;
HXDLIN( 677)									int _g951 = 0;
HXDLIN( 677)									while((_g951 < copyKeys31->length)){
HXLINE( 677)										int key887 = copyKeys31->__get(_g951);
HXDLIN( 677)										_g951 = (_g951 + 1);
HXDLIN( 677)										if ((key887 != -1)) {
HXLINE( 677)											action887->addKey(key887,state887);
            										}
            									}
            								}
HXDLIN( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action888 = this->_note_rightR;
HXDLIN( 677)									int state888 = -1;
HXDLIN( 677)									int _g952 = 0;
HXDLIN( 677)									while((_g952 < copyKeys31->length)){
HXLINE( 677)										int key888 = copyKeys31->__get(_g952);
HXDLIN( 677)										_g952 = (_g952 + 1);
HXDLIN( 677)										if ((key888 != -1)) {
HXLINE( 677)											action888->addKey(key888,state888);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action889 = this->_note_down;
HXDLIN( 677)									int state889 = 1;
HXDLIN( 677)									int _g953 = 0;
HXDLIN( 677)									while((_g953 < copyKeys31->length)){
HXLINE( 677)										int key889 = copyKeys31->__get(_g953);
HXDLIN( 677)										_g953 = (_g953 + 1);
HXDLIN( 677)										if ((key889 != -1)) {
HXLINE( 677)											action889->addKey(key889,state889);
            										}
            									}
            								}
HXDLIN( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action890 = this->_note_downP;
HXDLIN( 677)									int state890 = 2;
HXDLIN( 677)									int _g954 = 0;
HXDLIN( 677)									while((_g954 < copyKeys31->length)){
HXLINE( 677)										int key890 = copyKeys31->__get(_g954);
HXDLIN( 677)										_g954 = (_g954 + 1);
HXDLIN( 677)										if ((key890 != -1)) {
HXLINE( 677)											action890->addKey(key890,state890);
            										}
            									}
            								}
HXDLIN( 677)								{
HXLINE( 677)									 ::flixel::input::actions::FlxActionDigital action891 = this->_note_downR;
HXDLIN( 677)									int state891 = -1;
HXDLIN( 677)									int _g955 = 0;
HXDLIN( 677)									while((_g955 < copyKeys31->length)){
HXLINE( 677)										int key891 = copyKeys31->__get(_g955);
HXDLIN( 677)										_g955 = (_g955 + 1);
HXDLIN( 677)										if ((key891 != -1)) {
HXLINE( 677)											action891->addKey(key891,state891);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 677)								 ::flixel::input::actions::FlxActionDigital action892 = this->_reset;
HXDLIN( 677)								int state892 = 2;
HXDLIN( 677)								int _g956 = 0;
HXDLIN( 677)								while((_g956 < copyKeys31->length)){
HXLINE( 677)									int key892 = copyKeys31->__get(_g956);
HXDLIN( 677)									_g956 = (_g956 + 1);
HXDLIN( 677)									if ((key892 != -1)) {
HXLINE( 677)										action892->addKey(key892,state892);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 677)								 ::flixel::input::actions::FlxActionDigital action893 = this->_accept;
HXDLIN( 677)								int state893 = 2;
HXDLIN( 677)								int _g957 = 0;
HXDLIN( 677)								while((_g957 < copyKeys31->length)){
HXLINE( 677)									int key893 = copyKeys31->__get(_g957);
HXDLIN( 677)									_g957 = (_g957 + 1);
HXDLIN( 677)									if ((key893 != -1)) {
HXLINE( 677)										action893->addKey(key893,state893);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 677)								 ::flixel::input::actions::FlxActionDigital action894 = this->_back;
HXDLIN( 677)								int state894 = 2;
HXDLIN( 677)								int _g958 = 0;
HXDLIN( 677)								while((_g958 < copyKeys31->length)){
HXLINE( 677)									int key894 = copyKeys31->__get(_g958);
HXDLIN( 677)									_g958 = (_g958 + 1);
HXDLIN( 677)									if ((key894 != -1)) {
HXLINE( 677)										action894->addKey(key894,state894);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 677)								 ::flixel::input::actions::FlxActionDigital action895 = this->_pause;
HXDLIN( 677)								int state895 = 2;
HXDLIN( 677)								int _g959 = 0;
HXDLIN( 677)								while((_g959 < copyKeys31->length)){
HXLINE( 677)									int key895 = copyKeys31->__get(_g959);
HXDLIN( 677)									_g959 = (_g959 + 1);
HXDLIN( 677)									if ((key895 != -1)) {
HXLINE( 677)										action895->addKey(key895,state895);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 678)					{
HXLINE( 678)						::Array< int > copyKeys32 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1140,1)->copy();
HXDLIN( 678)						{
HXLINE( 678)							int _g960 = 0;
HXDLIN( 678)							int _g961 = copyKeys32->length;
HXDLIN( 678)							while((_g960 < _g961)){
HXLINE( 678)								_g960 = (_g960 + 1);
HXDLIN( 678)								int i32 = (_g960 - 1);
HXDLIN( 678)								if ((i32 == -1)) {
HXLINE( 678)									copyKeys32->remove(i32);
            								}
            							}
            						}
HXDLIN( 678)						switch((int)(::Control_obj::ACCEPT_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action896 = this->_ui_up;
HXDLIN( 678)									int state896 = 1;
HXDLIN( 678)									int _g962 = 0;
HXDLIN( 678)									while((_g962 < copyKeys32->length)){
HXLINE( 678)										int key896 = copyKeys32->__get(_g962);
HXDLIN( 678)										_g962 = (_g962 + 1);
HXDLIN( 678)										if ((key896 != -1)) {
HXLINE( 678)											action896->addKey(key896,state896);
            										}
            									}
            								}
HXDLIN( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action897 = this->_ui_upP;
HXDLIN( 678)									int state897 = 2;
HXDLIN( 678)									int _g963 = 0;
HXDLIN( 678)									while((_g963 < copyKeys32->length)){
HXLINE( 678)										int key897 = copyKeys32->__get(_g963);
HXDLIN( 678)										_g963 = (_g963 + 1);
HXDLIN( 678)										if ((key897 != -1)) {
HXLINE( 678)											action897->addKey(key897,state897);
            										}
            									}
            								}
HXDLIN( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action898 = this->_ui_upR;
HXDLIN( 678)									int state898 = -1;
HXDLIN( 678)									int _g964 = 0;
HXDLIN( 678)									while((_g964 < copyKeys32->length)){
HXLINE( 678)										int key898 = copyKeys32->__get(_g964);
HXDLIN( 678)										_g964 = (_g964 + 1);
HXDLIN( 678)										if ((key898 != -1)) {
HXLINE( 678)											action898->addKey(key898,state898);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action899 = this->_ui_left;
HXDLIN( 678)									int state899 = 1;
HXDLIN( 678)									int _g965 = 0;
HXDLIN( 678)									while((_g965 < copyKeys32->length)){
HXLINE( 678)										int key899 = copyKeys32->__get(_g965);
HXDLIN( 678)										_g965 = (_g965 + 1);
HXDLIN( 678)										if ((key899 != -1)) {
HXLINE( 678)											action899->addKey(key899,state899);
            										}
            									}
            								}
HXDLIN( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action900 = this->_ui_leftP;
HXDLIN( 678)									int state900 = 2;
HXDLIN( 678)									int _g966 = 0;
HXDLIN( 678)									while((_g966 < copyKeys32->length)){
HXLINE( 678)										int key900 = copyKeys32->__get(_g966);
HXDLIN( 678)										_g966 = (_g966 + 1);
HXDLIN( 678)										if ((key900 != -1)) {
HXLINE( 678)											action900->addKey(key900,state900);
            										}
            									}
            								}
HXDLIN( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action901 = this->_ui_leftR;
HXDLIN( 678)									int state901 = -1;
HXDLIN( 678)									int _g967 = 0;
HXDLIN( 678)									while((_g967 < copyKeys32->length)){
HXLINE( 678)										int key901 = copyKeys32->__get(_g967);
HXDLIN( 678)										_g967 = (_g967 + 1);
HXDLIN( 678)										if ((key901 != -1)) {
HXLINE( 678)											action901->addKey(key901,state901);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action902 = this->_ui_right;
HXDLIN( 678)									int state902 = 1;
HXDLIN( 678)									int _g968 = 0;
HXDLIN( 678)									while((_g968 < copyKeys32->length)){
HXLINE( 678)										int key902 = copyKeys32->__get(_g968);
HXDLIN( 678)										_g968 = (_g968 + 1);
HXDLIN( 678)										if ((key902 != -1)) {
HXLINE( 678)											action902->addKey(key902,state902);
            										}
            									}
            								}
HXDLIN( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action903 = this->_ui_rightP;
HXDLIN( 678)									int state903 = 2;
HXDLIN( 678)									int _g969 = 0;
HXDLIN( 678)									while((_g969 < copyKeys32->length)){
HXLINE( 678)										int key903 = copyKeys32->__get(_g969);
HXDLIN( 678)										_g969 = (_g969 + 1);
HXDLIN( 678)										if ((key903 != -1)) {
HXLINE( 678)											action903->addKey(key903,state903);
            										}
            									}
            								}
HXDLIN( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action904 = this->_ui_rightR;
HXDLIN( 678)									int state904 = -1;
HXDLIN( 678)									int _g970 = 0;
HXDLIN( 678)									while((_g970 < copyKeys32->length)){
HXLINE( 678)										int key904 = copyKeys32->__get(_g970);
HXDLIN( 678)										_g970 = (_g970 + 1);
HXDLIN( 678)										if ((key904 != -1)) {
HXLINE( 678)											action904->addKey(key904,state904);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action905 = this->_ui_down;
HXDLIN( 678)									int state905 = 1;
HXDLIN( 678)									int _g971 = 0;
HXDLIN( 678)									while((_g971 < copyKeys32->length)){
HXLINE( 678)										int key905 = copyKeys32->__get(_g971);
HXDLIN( 678)										_g971 = (_g971 + 1);
HXDLIN( 678)										if ((key905 != -1)) {
HXLINE( 678)											action905->addKey(key905,state905);
            										}
            									}
            								}
HXDLIN( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action906 = this->_ui_downP;
HXDLIN( 678)									int state906 = 2;
HXDLIN( 678)									int _g972 = 0;
HXDLIN( 678)									while((_g972 < copyKeys32->length)){
HXLINE( 678)										int key906 = copyKeys32->__get(_g972);
HXDLIN( 678)										_g972 = (_g972 + 1);
HXDLIN( 678)										if ((key906 != -1)) {
HXLINE( 678)											action906->addKey(key906,state906);
            										}
            									}
            								}
HXDLIN( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action907 = this->_ui_downR;
HXDLIN( 678)									int state907 = -1;
HXDLIN( 678)									int _g973 = 0;
HXDLIN( 678)									while((_g973 < copyKeys32->length)){
HXLINE( 678)										int key907 = copyKeys32->__get(_g973);
HXDLIN( 678)										_g973 = (_g973 + 1);
HXDLIN( 678)										if ((key907 != -1)) {
HXLINE( 678)											action907->addKey(key907,state907);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action908 = this->_note_up;
HXDLIN( 678)									int state908 = 1;
HXDLIN( 678)									int _g974 = 0;
HXDLIN( 678)									while((_g974 < copyKeys32->length)){
HXLINE( 678)										int key908 = copyKeys32->__get(_g974);
HXDLIN( 678)										_g974 = (_g974 + 1);
HXDLIN( 678)										if ((key908 != -1)) {
HXLINE( 678)											action908->addKey(key908,state908);
            										}
            									}
            								}
HXDLIN( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action909 = this->_note_upP;
HXDLIN( 678)									int state909 = 2;
HXDLIN( 678)									int _g975 = 0;
HXDLIN( 678)									while((_g975 < copyKeys32->length)){
HXLINE( 678)										int key909 = copyKeys32->__get(_g975);
HXDLIN( 678)										_g975 = (_g975 + 1);
HXDLIN( 678)										if ((key909 != -1)) {
HXLINE( 678)											action909->addKey(key909,state909);
            										}
            									}
            								}
HXDLIN( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action910 = this->_note_upR;
HXDLIN( 678)									int state910 = -1;
HXDLIN( 678)									int _g976 = 0;
HXDLIN( 678)									while((_g976 < copyKeys32->length)){
HXLINE( 678)										int key910 = copyKeys32->__get(_g976);
HXDLIN( 678)										_g976 = (_g976 + 1);
HXDLIN( 678)										if ((key910 != -1)) {
HXLINE( 678)											action910->addKey(key910,state910);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action911 = this->_note_left;
HXDLIN( 678)									int state911 = 1;
HXDLIN( 678)									int _g977 = 0;
HXDLIN( 678)									while((_g977 < copyKeys32->length)){
HXLINE( 678)										int key911 = copyKeys32->__get(_g977);
HXDLIN( 678)										_g977 = (_g977 + 1);
HXDLIN( 678)										if ((key911 != -1)) {
HXLINE( 678)											action911->addKey(key911,state911);
            										}
            									}
            								}
HXDLIN( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action912 = this->_note_leftP;
HXDLIN( 678)									int state912 = 2;
HXDLIN( 678)									int _g978 = 0;
HXDLIN( 678)									while((_g978 < copyKeys32->length)){
HXLINE( 678)										int key912 = copyKeys32->__get(_g978);
HXDLIN( 678)										_g978 = (_g978 + 1);
HXDLIN( 678)										if ((key912 != -1)) {
HXLINE( 678)											action912->addKey(key912,state912);
            										}
            									}
            								}
HXDLIN( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action913 = this->_note_leftR;
HXDLIN( 678)									int state913 = -1;
HXDLIN( 678)									int _g979 = 0;
HXDLIN( 678)									while((_g979 < copyKeys32->length)){
HXLINE( 678)										int key913 = copyKeys32->__get(_g979);
HXDLIN( 678)										_g979 = (_g979 + 1);
HXDLIN( 678)										if ((key913 != -1)) {
HXLINE( 678)											action913->addKey(key913,state913);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action914 = this->_note_right;
HXDLIN( 678)									int state914 = 1;
HXDLIN( 678)									int _g980 = 0;
HXDLIN( 678)									while((_g980 < copyKeys32->length)){
HXLINE( 678)										int key914 = copyKeys32->__get(_g980);
HXDLIN( 678)										_g980 = (_g980 + 1);
HXDLIN( 678)										if ((key914 != -1)) {
HXLINE( 678)											action914->addKey(key914,state914);
            										}
            									}
            								}
HXDLIN( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action915 = this->_note_rightP;
HXDLIN( 678)									int state915 = 2;
HXDLIN( 678)									int _g981 = 0;
HXDLIN( 678)									while((_g981 < copyKeys32->length)){
HXLINE( 678)										int key915 = copyKeys32->__get(_g981);
HXDLIN( 678)										_g981 = (_g981 + 1);
HXDLIN( 678)										if ((key915 != -1)) {
HXLINE( 678)											action915->addKey(key915,state915);
            										}
            									}
            								}
HXDLIN( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action916 = this->_note_rightR;
HXDLIN( 678)									int state916 = -1;
HXDLIN( 678)									int _g982 = 0;
HXDLIN( 678)									while((_g982 < copyKeys32->length)){
HXLINE( 678)										int key916 = copyKeys32->__get(_g982);
HXDLIN( 678)										_g982 = (_g982 + 1);
HXDLIN( 678)										if ((key916 != -1)) {
HXLINE( 678)											action916->addKey(key916,state916);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action917 = this->_note_down;
HXDLIN( 678)									int state917 = 1;
HXDLIN( 678)									int _g983 = 0;
HXDLIN( 678)									while((_g983 < copyKeys32->length)){
HXLINE( 678)										int key917 = copyKeys32->__get(_g983);
HXDLIN( 678)										_g983 = (_g983 + 1);
HXDLIN( 678)										if ((key917 != -1)) {
HXLINE( 678)											action917->addKey(key917,state917);
            										}
            									}
            								}
HXDLIN( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action918 = this->_note_downP;
HXDLIN( 678)									int state918 = 2;
HXDLIN( 678)									int _g984 = 0;
HXDLIN( 678)									while((_g984 < copyKeys32->length)){
HXLINE( 678)										int key918 = copyKeys32->__get(_g984);
HXDLIN( 678)										_g984 = (_g984 + 1);
HXDLIN( 678)										if ((key918 != -1)) {
HXLINE( 678)											action918->addKey(key918,state918);
            										}
            									}
            								}
HXDLIN( 678)								{
HXLINE( 678)									 ::flixel::input::actions::FlxActionDigital action919 = this->_note_downR;
HXDLIN( 678)									int state919 = -1;
HXDLIN( 678)									int _g985 = 0;
HXDLIN( 678)									while((_g985 < copyKeys32->length)){
HXLINE( 678)										int key919 = copyKeys32->__get(_g985);
HXDLIN( 678)										_g985 = (_g985 + 1);
HXDLIN( 678)										if ((key919 != -1)) {
HXLINE( 678)											action919->addKey(key919,state919);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 678)								 ::flixel::input::actions::FlxActionDigital action920 = this->_reset;
HXDLIN( 678)								int state920 = 2;
HXDLIN( 678)								int _g986 = 0;
HXDLIN( 678)								while((_g986 < copyKeys32->length)){
HXLINE( 678)									int key920 = copyKeys32->__get(_g986);
HXDLIN( 678)									_g986 = (_g986 + 1);
HXDLIN( 678)									if ((key920 != -1)) {
HXLINE( 678)										action920->addKey(key920,state920);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 678)								 ::flixel::input::actions::FlxActionDigital action921 = this->_accept;
HXDLIN( 678)								int state921 = 2;
HXDLIN( 678)								int _g987 = 0;
HXDLIN( 678)								while((_g987 < copyKeys32->length)){
HXLINE( 678)									int key921 = copyKeys32->__get(_g987);
HXDLIN( 678)									_g987 = (_g987 + 1);
HXDLIN( 678)									if ((key921 != -1)) {
HXLINE( 678)										action921->addKey(key921,state921);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 678)								 ::flixel::input::actions::FlxActionDigital action922 = this->_back;
HXDLIN( 678)								int state922 = 2;
HXDLIN( 678)								int _g988 = 0;
HXDLIN( 678)								while((_g988 < copyKeys32->length)){
HXLINE( 678)									int key922 = copyKeys32->__get(_g988);
HXDLIN( 678)									_g988 = (_g988 + 1);
HXDLIN( 678)									if ((key922 != -1)) {
HXLINE( 678)										action922->addKey(key922,state922);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 678)								 ::flixel::input::actions::FlxActionDigital action923 = this->_pause;
HXDLIN( 678)								int state923 = 2;
HXDLIN( 678)								int _g989 = 0;
HXDLIN( 678)								while((_g989 < copyKeys32->length)){
HXLINE( 678)									int key923 = copyKeys32->__get(_g989);
HXDLIN( 678)									_g989 = (_g989 + 1);
HXDLIN( 678)									if ((key923 != -1)) {
HXLINE( 678)										action923->addKey(key923,state923);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 679)					{
HXLINE( 679)						::Array< int > copyKeys33 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1141,1)->copy();
HXDLIN( 679)						{
HXLINE( 679)							int _g990 = 0;
HXDLIN( 679)							int _g991 = copyKeys33->length;
HXDLIN( 679)							while((_g990 < _g991)){
HXLINE( 679)								_g990 = (_g990 + 1);
HXDLIN( 679)								int i33 = (_g990 - 1);
HXDLIN( 679)								if ((i33 == -1)) {
HXLINE( 679)									copyKeys33->remove(i33);
            								}
            							}
            						}
HXDLIN( 679)						switch((int)(::Control_obj::BACK_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action924 = this->_ui_up;
HXDLIN( 679)									int state924 = 1;
HXDLIN( 679)									int _g992 = 0;
HXDLIN( 679)									while((_g992 < copyKeys33->length)){
HXLINE( 679)										int key924 = copyKeys33->__get(_g992);
HXDLIN( 679)										_g992 = (_g992 + 1);
HXDLIN( 679)										if ((key924 != -1)) {
HXLINE( 679)											action924->addKey(key924,state924);
            										}
            									}
            								}
HXDLIN( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action925 = this->_ui_upP;
HXDLIN( 679)									int state925 = 2;
HXDLIN( 679)									int _g993 = 0;
HXDLIN( 679)									while((_g993 < copyKeys33->length)){
HXLINE( 679)										int key925 = copyKeys33->__get(_g993);
HXDLIN( 679)										_g993 = (_g993 + 1);
HXDLIN( 679)										if ((key925 != -1)) {
HXLINE( 679)											action925->addKey(key925,state925);
            										}
            									}
            								}
HXDLIN( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action926 = this->_ui_upR;
HXDLIN( 679)									int state926 = -1;
HXDLIN( 679)									int _g994 = 0;
HXDLIN( 679)									while((_g994 < copyKeys33->length)){
HXLINE( 679)										int key926 = copyKeys33->__get(_g994);
HXDLIN( 679)										_g994 = (_g994 + 1);
HXDLIN( 679)										if ((key926 != -1)) {
HXLINE( 679)											action926->addKey(key926,state926);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action927 = this->_ui_left;
HXDLIN( 679)									int state927 = 1;
HXDLIN( 679)									int _g995 = 0;
HXDLIN( 679)									while((_g995 < copyKeys33->length)){
HXLINE( 679)										int key927 = copyKeys33->__get(_g995);
HXDLIN( 679)										_g995 = (_g995 + 1);
HXDLIN( 679)										if ((key927 != -1)) {
HXLINE( 679)											action927->addKey(key927,state927);
            										}
            									}
            								}
HXDLIN( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action928 = this->_ui_leftP;
HXDLIN( 679)									int state928 = 2;
HXDLIN( 679)									int _g996 = 0;
HXDLIN( 679)									while((_g996 < copyKeys33->length)){
HXLINE( 679)										int key928 = copyKeys33->__get(_g996);
HXDLIN( 679)										_g996 = (_g996 + 1);
HXDLIN( 679)										if ((key928 != -1)) {
HXLINE( 679)											action928->addKey(key928,state928);
            										}
            									}
            								}
HXDLIN( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action929 = this->_ui_leftR;
HXDLIN( 679)									int state929 = -1;
HXDLIN( 679)									int _g997 = 0;
HXDLIN( 679)									while((_g997 < copyKeys33->length)){
HXLINE( 679)										int key929 = copyKeys33->__get(_g997);
HXDLIN( 679)										_g997 = (_g997 + 1);
HXDLIN( 679)										if ((key929 != -1)) {
HXLINE( 679)											action929->addKey(key929,state929);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action930 = this->_ui_right;
HXDLIN( 679)									int state930 = 1;
HXDLIN( 679)									int _g998 = 0;
HXDLIN( 679)									while((_g998 < copyKeys33->length)){
HXLINE( 679)										int key930 = copyKeys33->__get(_g998);
HXDLIN( 679)										_g998 = (_g998 + 1);
HXDLIN( 679)										if ((key930 != -1)) {
HXLINE( 679)											action930->addKey(key930,state930);
            										}
            									}
            								}
HXDLIN( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action931 = this->_ui_rightP;
HXDLIN( 679)									int state931 = 2;
HXDLIN( 679)									int _g999 = 0;
HXDLIN( 679)									while((_g999 < copyKeys33->length)){
HXLINE( 679)										int key931 = copyKeys33->__get(_g999);
HXDLIN( 679)										_g999 = (_g999 + 1);
HXDLIN( 679)										if ((key931 != -1)) {
HXLINE( 679)											action931->addKey(key931,state931);
            										}
            									}
            								}
HXDLIN( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action932 = this->_ui_rightR;
HXDLIN( 679)									int state932 = -1;
HXDLIN( 679)									int _g1000 = 0;
HXDLIN( 679)									while((_g1000 < copyKeys33->length)){
HXLINE( 679)										int key932 = copyKeys33->__get(_g1000);
HXDLIN( 679)										_g1000 = (_g1000 + 1);
HXDLIN( 679)										if ((key932 != -1)) {
HXLINE( 679)											action932->addKey(key932,state932);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action933 = this->_ui_down;
HXDLIN( 679)									int state933 = 1;
HXDLIN( 679)									int _g1001 = 0;
HXDLIN( 679)									while((_g1001 < copyKeys33->length)){
HXLINE( 679)										int key933 = copyKeys33->__get(_g1001);
HXDLIN( 679)										_g1001 = (_g1001 + 1);
HXDLIN( 679)										if ((key933 != -1)) {
HXLINE( 679)											action933->addKey(key933,state933);
            										}
            									}
            								}
HXDLIN( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action934 = this->_ui_downP;
HXDLIN( 679)									int state934 = 2;
HXDLIN( 679)									int _g1002 = 0;
HXDLIN( 679)									while((_g1002 < copyKeys33->length)){
HXLINE( 679)										int key934 = copyKeys33->__get(_g1002);
HXDLIN( 679)										_g1002 = (_g1002 + 1);
HXDLIN( 679)										if ((key934 != -1)) {
HXLINE( 679)											action934->addKey(key934,state934);
            										}
            									}
            								}
HXDLIN( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action935 = this->_ui_downR;
HXDLIN( 679)									int state935 = -1;
HXDLIN( 679)									int _g1003 = 0;
HXDLIN( 679)									while((_g1003 < copyKeys33->length)){
HXLINE( 679)										int key935 = copyKeys33->__get(_g1003);
HXDLIN( 679)										_g1003 = (_g1003 + 1);
HXDLIN( 679)										if ((key935 != -1)) {
HXLINE( 679)											action935->addKey(key935,state935);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action936 = this->_note_up;
HXDLIN( 679)									int state936 = 1;
HXDLIN( 679)									int _g1004 = 0;
HXDLIN( 679)									while((_g1004 < copyKeys33->length)){
HXLINE( 679)										int key936 = copyKeys33->__get(_g1004);
HXDLIN( 679)										_g1004 = (_g1004 + 1);
HXDLIN( 679)										if ((key936 != -1)) {
HXLINE( 679)											action936->addKey(key936,state936);
            										}
            									}
            								}
HXDLIN( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action937 = this->_note_upP;
HXDLIN( 679)									int state937 = 2;
HXDLIN( 679)									int _g1005 = 0;
HXDLIN( 679)									while((_g1005 < copyKeys33->length)){
HXLINE( 679)										int key937 = copyKeys33->__get(_g1005);
HXDLIN( 679)										_g1005 = (_g1005 + 1);
HXDLIN( 679)										if ((key937 != -1)) {
HXLINE( 679)											action937->addKey(key937,state937);
            										}
            									}
            								}
HXDLIN( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action938 = this->_note_upR;
HXDLIN( 679)									int state938 = -1;
HXDLIN( 679)									int _g1006 = 0;
HXDLIN( 679)									while((_g1006 < copyKeys33->length)){
HXLINE( 679)										int key938 = copyKeys33->__get(_g1006);
HXDLIN( 679)										_g1006 = (_g1006 + 1);
HXDLIN( 679)										if ((key938 != -1)) {
HXLINE( 679)											action938->addKey(key938,state938);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action939 = this->_note_left;
HXDLIN( 679)									int state939 = 1;
HXDLIN( 679)									int _g1007 = 0;
HXDLIN( 679)									while((_g1007 < copyKeys33->length)){
HXLINE( 679)										int key939 = copyKeys33->__get(_g1007);
HXDLIN( 679)										_g1007 = (_g1007 + 1);
HXDLIN( 679)										if ((key939 != -1)) {
HXLINE( 679)											action939->addKey(key939,state939);
            										}
            									}
            								}
HXDLIN( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action940 = this->_note_leftP;
HXDLIN( 679)									int state940 = 2;
HXDLIN( 679)									int _g1008 = 0;
HXDLIN( 679)									while((_g1008 < copyKeys33->length)){
HXLINE( 679)										int key940 = copyKeys33->__get(_g1008);
HXDLIN( 679)										_g1008 = (_g1008 + 1);
HXDLIN( 679)										if ((key940 != -1)) {
HXLINE( 679)											action940->addKey(key940,state940);
            										}
            									}
            								}
HXDLIN( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action941 = this->_note_leftR;
HXDLIN( 679)									int state941 = -1;
HXDLIN( 679)									int _g1009 = 0;
HXDLIN( 679)									while((_g1009 < copyKeys33->length)){
HXLINE( 679)										int key941 = copyKeys33->__get(_g1009);
HXDLIN( 679)										_g1009 = (_g1009 + 1);
HXDLIN( 679)										if ((key941 != -1)) {
HXLINE( 679)											action941->addKey(key941,state941);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action942 = this->_note_right;
HXDLIN( 679)									int state942 = 1;
HXDLIN( 679)									int _g1010 = 0;
HXDLIN( 679)									while((_g1010 < copyKeys33->length)){
HXLINE( 679)										int key942 = copyKeys33->__get(_g1010);
HXDLIN( 679)										_g1010 = (_g1010 + 1);
HXDLIN( 679)										if ((key942 != -1)) {
HXLINE( 679)											action942->addKey(key942,state942);
            										}
            									}
            								}
HXDLIN( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action943 = this->_note_rightP;
HXDLIN( 679)									int state943 = 2;
HXDLIN( 679)									int _g1011 = 0;
HXDLIN( 679)									while((_g1011 < copyKeys33->length)){
HXLINE( 679)										int key943 = copyKeys33->__get(_g1011);
HXDLIN( 679)										_g1011 = (_g1011 + 1);
HXDLIN( 679)										if ((key943 != -1)) {
HXLINE( 679)											action943->addKey(key943,state943);
            										}
            									}
            								}
HXDLIN( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action944 = this->_note_rightR;
HXDLIN( 679)									int state944 = -1;
HXDLIN( 679)									int _g1012 = 0;
HXDLIN( 679)									while((_g1012 < copyKeys33->length)){
HXLINE( 679)										int key944 = copyKeys33->__get(_g1012);
HXDLIN( 679)										_g1012 = (_g1012 + 1);
HXDLIN( 679)										if ((key944 != -1)) {
HXLINE( 679)											action944->addKey(key944,state944);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action945 = this->_note_down;
HXDLIN( 679)									int state945 = 1;
HXDLIN( 679)									int _g1013 = 0;
HXDLIN( 679)									while((_g1013 < copyKeys33->length)){
HXLINE( 679)										int key945 = copyKeys33->__get(_g1013);
HXDLIN( 679)										_g1013 = (_g1013 + 1);
HXDLIN( 679)										if ((key945 != -1)) {
HXLINE( 679)											action945->addKey(key945,state945);
            										}
            									}
            								}
HXDLIN( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action946 = this->_note_downP;
HXDLIN( 679)									int state946 = 2;
HXDLIN( 679)									int _g1014 = 0;
HXDLIN( 679)									while((_g1014 < copyKeys33->length)){
HXLINE( 679)										int key946 = copyKeys33->__get(_g1014);
HXDLIN( 679)										_g1014 = (_g1014 + 1);
HXDLIN( 679)										if ((key946 != -1)) {
HXLINE( 679)											action946->addKey(key946,state946);
            										}
            									}
            								}
HXDLIN( 679)								{
HXLINE( 679)									 ::flixel::input::actions::FlxActionDigital action947 = this->_note_downR;
HXDLIN( 679)									int state947 = -1;
HXDLIN( 679)									int _g1015 = 0;
HXDLIN( 679)									while((_g1015 < copyKeys33->length)){
HXLINE( 679)										int key947 = copyKeys33->__get(_g1015);
HXDLIN( 679)										_g1015 = (_g1015 + 1);
HXDLIN( 679)										if ((key947 != -1)) {
HXLINE( 679)											action947->addKey(key947,state947);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 679)								 ::flixel::input::actions::FlxActionDigital action948 = this->_reset;
HXDLIN( 679)								int state948 = 2;
HXDLIN( 679)								int _g1016 = 0;
HXDLIN( 679)								while((_g1016 < copyKeys33->length)){
HXLINE( 679)									int key948 = copyKeys33->__get(_g1016);
HXDLIN( 679)									_g1016 = (_g1016 + 1);
HXDLIN( 679)									if ((key948 != -1)) {
HXLINE( 679)										action948->addKey(key948,state948);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 679)								 ::flixel::input::actions::FlxActionDigital action949 = this->_accept;
HXDLIN( 679)								int state949 = 2;
HXDLIN( 679)								int _g1017 = 0;
HXDLIN( 679)								while((_g1017 < copyKeys33->length)){
HXLINE( 679)									int key949 = copyKeys33->__get(_g1017);
HXDLIN( 679)									_g1017 = (_g1017 + 1);
HXDLIN( 679)									if ((key949 != -1)) {
HXLINE( 679)										action949->addKey(key949,state949);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 679)								 ::flixel::input::actions::FlxActionDigital action950 = this->_back;
HXDLIN( 679)								int state950 = 2;
HXDLIN( 679)								int _g1018 = 0;
HXDLIN( 679)								while((_g1018 < copyKeys33->length)){
HXLINE( 679)									int key950 = copyKeys33->__get(_g1018);
HXDLIN( 679)									_g1018 = (_g1018 + 1);
HXDLIN( 679)									if ((key950 != -1)) {
HXLINE( 679)										action950->addKey(key950,state950);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 679)								 ::flixel::input::actions::FlxActionDigital action951 = this->_pause;
HXDLIN( 679)								int state951 = 2;
HXDLIN( 679)								int _g1019 = 0;
HXDLIN( 679)								while((_g1019 < copyKeys33->length)){
HXLINE( 679)									int key951 = copyKeys33->__get(_g1019);
HXDLIN( 679)									_g1019 = (_g1019 + 1);
HXDLIN( 679)									if ((key951 != -1)) {
HXLINE( 679)										action951->addKey(key951,state951);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 680)					{
HXLINE( 680)						::Array< int > copyKeys34 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1142,1)->copy();
HXDLIN( 680)						{
HXLINE( 680)							int _g1020 = 0;
HXDLIN( 680)							int _g1021 = copyKeys34->length;
HXDLIN( 680)							while((_g1020 < _g1021)){
HXLINE( 680)								_g1020 = (_g1020 + 1);
HXDLIN( 680)								int i34 = (_g1020 - 1);
HXDLIN( 680)								if ((i34 == -1)) {
HXLINE( 680)									copyKeys34->remove(i34);
            								}
            							}
            						}
HXDLIN( 680)						switch((int)(::Control_obj::PAUSE_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action952 = this->_ui_up;
HXDLIN( 680)									int state952 = 1;
HXDLIN( 680)									int _g1022 = 0;
HXDLIN( 680)									while((_g1022 < copyKeys34->length)){
HXLINE( 680)										int key952 = copyKeys34->__get(_g1022);
HXDLIN( 680)										_g1022 = (_g1022 + 1);
HXDLIN( 680)										if ((key952 != -1)) {
HXLINE( 680)											action952->addKey(key952,state952);
            										}
            									}
            								}
HXDLIN( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action953 = this->_ui_upP;
HXDLIN( 680)									int state953 = 2;
HXDLIN( 680)									int _g1023 = 0;
HXDLIN( 680)									while((_g1023 < copyKeys34->length)){
HXLINE( 680)										int key953 = copyKeys34->__get(_g1023);
HXDLIN( 680)										_g1023 = (_g1023 + 1);
HXDLIN( 680)										if ((key953 != -1)) {
HXLINE( 680)											action953->addKey(key953,state953);
            										}
            									}
            								}
HXDLIN( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action954 = this->_ui_upR;
HXDLIN( 680)									int state954 = -1;
HXDLIN( 680)									int _g1024 = 0;
HXDLIN( 680)									while((_g1024 < copyKeys34->length)){
HXLINE( 680)										int key954 = copyKeys34->__get(_g1024);
HXDLIN( 680)										_g1024 = (_g1024 + 1);
HXDLIN( 680)										if ((key954 != -1)) {
HXLINE( 680)											action954->addKey(key954,state954);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action955 = this->_ui_left;
HXDLIN( 680)									int state955 = 1;
HXDLIN( 680)									int _g1025 = 0;
HXDLIN( 680)									while((_g1025 < copyKeys34->length)){
HXLINE( 680)										int key955 = copyKeys34->__get(_g1025);
HXDLIN( 680)										_g1025 = (_g1025 + 1);
HXDLIN( 680)										if ((key955 != -1)) {
HXLINE( 680)											action955->addKey(key955,state955);
            										}
            									}
            								}
HXDLIN( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action956 = this->_ui_leftP;
HXDLIN( 680)									int state956 = 2;
HXDLIN( 680)									int _g1026 = 0;
HXDLIN( 680)									while((_g1026 < copyKeys34->length)){
HXLINE( 680)										int key956 = copyKeys34->__get(_g1026);
HXDLIN( 680)										_g1026 = (_g1026 + 1);
HXDLIN( 680)										if ((key956 != -1)) {
HXLINE( 680)											action956->addKey(key956,state956);
            										}
            									}
            								}
HXDLIN( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action957 = this->_ui_leftR;
HXDLIN( 680)									int state957 = -1;
HXDLIN( 680)									int _g1027 = 0;
HXDLIN( 680)									while((_g1027 < copyKeys34->length)){
HXLINE( 680)										int key957 = copyKeys34->__get(_g1027);
HXDLIN( 680)										_g1027 = (_g1027 + 1);
HXDLIN( 680)										if ((key957 != -1)) {
HXLINE( 680)											action957->addKey(key957,state957);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action958 = this->_ui_right;
HXDLIN( 680)									int state958 = 1;
HXDLIN( 680)									int _g1028 = 0;
HXDLIN( 680)									while((_g1028 < copyKeys34->length)){
HXLINE( 680)										int key958 = copyKeys34->__get(_g1028);
HXDLIN( 680)										_g1028 = (_g1028 + 1);
HXDLIN( 680)										if ((key958 != -1)) {
HXLINE( 680)											action958->addKey(key958,state958);
            										}
            									}
            								}
HXDLIN( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action959 = this->_ui_rightP;
HXDLIN( 680)									int state959 = 2;
HXDLIN( 680)									int _g1029 = 0;
HXDLIN( 680)									while((_g1029 < copyKeys34->length)){
HXLINE( 680)										int key959 = copyKeys34->__get(_g1029);
HXDLIN( 680)										_g1029 = (_g1029 + 1);
HXDLIN( 680)										if ((key959 != -1)) {
HXLINE( 680)											action959->addKey(key959,state959);
            										}
            									}
            								}
HXDLIN( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action960 = this->_ui_rightR;
HXDLIN( 680)									int state960 = -1;
HXDLIN( 680)									int _g1030 = 0;
HXDLIN( 680)									while((_g1030 < copyKeys34->length)){
HXLINE( 680)										int key960 = copyKeys34->__get(_g1030);
HXDLIN( 680)										_g1030 = (_g1030 + 1);
HXDLIN( 680)										if ((key960 != -1)) {
HXLINE( 680)											action960->addKey(key960,state960);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action961 = this->_ui_down;
HXDLIN( 680)									int state961 = 1;
HXDLIN( 680)									int _g1031 = 0;
HXDLIN( 680)									while((_g1031 < copyKeys34->length)){
HXLINE( 680)										int key961 = copyKeys34->__get(_g1031);
HXDLIN( 680)										_g1031 = (_g1031 + 1);
HXDLIN( 680)										if ((key961 != -1)) {
HXLINE( 680)											action961->addKey(key961,state961);
            										}
            									}
            								}
HXDLIN( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action962 = this->_ui_downP;
HXDLIN( 680)									int state962 = 2;
HXDLIN( 680)									int _g1032 = 0;
HXDLIN( 680)									while((_g1032 < copyKeys34->length)){
HXLINE( 680)										int key962 = copyKeys34->__get(_g1032);
HXDLIN( 680)										_g1032 = (_g1032 + 1);
HXDLIN( 680)										if ((key962 != -1)) {
HXLINE( 680)											action962->addKey(key962,state962);
            										}
            									}
            								}
HXDLIN( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action963 = this->_ui_downR;
HXDLIN( 680)									int state963 = -1;
HXDLIN( 680)									int _g1033 = 0;
HXDLIN( 680)									while((_g1033 < copyKeys34->length)){
HXLINE( 680)										int key963 = copyKeys34->__get(_g1033);
HXDLIN( 680)										_g1033 = (_g1033 + 1);
HXDLIN( 680)										if ((key963 != -1)) {
HXLINE( 680)											action963->addKey(key963,state963);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action964 = this->_note_up;
HXDLIN( 680)									int state964 = 1;
HXDLIN( 680)									int _g1034 = 0;
HXDLIN( 680)									while((_g1034 < copyKeys34->length)){
HXLINE( 680)										int key964 = copyKeys34->__get(_g1034);
HXDLIN( 680)										_g1034 = (_g1034 + 1);
HXDLIN( 680)										if ((key964 != -1)) {
HXLINE( 680)											action964->addKey(key964,state964);
            										}
            									}
            								}
HXDLIN( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action965 = this->_note_upP;
HXDLIN( 680)									int state965 = 2;
HXDLIN( 680)									int _g1035 = 0;
HXDLIN( 680)									while((_g1035 < copyKeys34->length)){
HXLINE( 680)										int key965 = copyKeys34->__get(_g1035);
HXDLIN( 680)										_g1035 = (_g1035 + 1);
HXDLIN( 680)										if ((key965 != -1)) {
HXLINE( 680)											action965->addKey(key965,state965);
            										}
            									}
            								}
HXDLIN( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action966 = this->_note_upR;
HXDLIN( 680)									int state966 = -1;
HXDLIN( 680)									int _g1036 = 0;
HXDLIN( 680)									while((_g1036 < copyKeys34->length)){
HXLINE( 680)										int key966 = copyKeys34->__get(_g1036);
HXDLIN( 680)										_g1036 = (_g1036 + 1);
HXDLIN( 680)										if ((key966 != -1)) {
HXLINE( 680)											action966->addKey(key966,state966);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action967 = this->_note_left;
HXDLIN( 680)									int state967 = 1;
HXDLIN( 680)									int _g1037 = 0;
HXDLIN( 680)									while((_g1037 < copyKeys34->length)){
HXLINE( 680)										int key967 = copyKeys34->__get(_g1037);
HXDLIN( 680)										_g1037 = (_g1037 + 1);
HXDLIN( 680)										if ((key967 != -1)) {
HXLINE( 680)											action967->addKey(key967,state967);
            										}
            									}
            								}
HXDLIN( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action968 = this->_note_leftP;
HXDLIN( 680)									int state968 = 2;
HXDLIN( 680)									int _g1038 = 0;
HXDLIN( 680)									while((_g1038 < copyKeys34->length)){
HXLINE( 680)										int key968 = copyKeys34->__get(_g1038);
HXDLIN( 680)										_g1038 = (_g1038 + 1);
HXDLIN( 680)										if ((key968 != -1)) {
HXLINE( 680)											action968->addKey(key968,state968);
            										}
            									}
            								}
HXDLIN( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action969 = this->_note_leftR;
HXDLIN( 680)									int state969 = -1;
HXDLIN( 680)									int _g1039 = 0;
HXDLIN( 680)									while((_g1039 < copyKeys34->length)){
HXLINE( 680)										int key969 = copyKeys34->__get(_g1039);
HXDLIN( 680)										_g1039 = (_g1039 + 1);
HXDLIN( 680)										if ((key969 != -1)) {
HXLINE( 680)											action969->addKey(key969,state969);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action970 = this->_note_right;
HXDLIN( 680)									int state970 = 1;
HXDLIN( 680)									int _g1040 = 0;
HXDLIN( 680)									while((_g1040 < copyKeys34->length)){
HXLINE( 680)										int key970 = copyKeys34->__get(_g1040);
HXDLIN( 680)										_g1040 = (_g1040 + 1);
HXDLIN( 680)										if ((key970 != -1)) {
HXLINE( 680)											action970->addKey(key970,state970);
            										}
            									}
            								}
HXDLIN( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action971 = this->_note_rightP;
HXDLIN( 680)									int state971 = 2;
HXDLIN( 680)									int _g1041 = 0;
HXDLIN( 680)									while((_g1041 < copyKeys34->length)){
HXLINE( 680)										int key971 = copyKeys34->__get(_g1041);
HXDLIN( 680)										_g1041 = (_g1041 + 1);
HXDLIN( 680)										if ((key971 != -1)) {
HXLINE( 680)											action971->addKey(key971,state971);
            										}
            									}
            								}
HXDLIN( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action972 = this->_note_rightR;
HXDLIN( 680)									int state972 = -1;
HXDLIN( 680)									int _g1042 = 0;
HXDLIN( 680)									while((_g1042 < copyKeys34->length)){
HXLINE( 680)										int key972 = copyKeys34->__get(_g1042);
HXDLIN( 680)										_g1042 = (_g1042 + 1);
HXDLIN( 680)										if ((key972 != -1)) {
HXLINE( 680)											action972->addKey(key972,state972);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action973 = this->_note_down;
HXDLIN( 680)									int state973 = 1;
HXDLIN( 680)									int _g1043 = 0;
HXDLIN( 680)									while((_g1043 < copyKeys34->length)){
HXLINE( 680)										int key973 = copyKeys34->__get(_g1043);
HXDLIN( 680)										_g1043 = (_g1043 + 1);
HXDLIN( 680)										if ((key973 != -1)) {
HXLINE( 680)											action973->addKey(key973,state973);
            										}
            									}
            								}
HXDLIN( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action974 = this->_note_downP;
HXDLIN( 680)									int state974 = 2;
HXDLIN( 680)									int _g1044 = 0;
HXDLIN( 680)									while((_g1044 < copyKeys34->length)){
HXLINE( 680)										int key974 = copyKeys34->__get(_g1044);
HXDLIN( 680)										_g1044 = (_g1044 + 1);
HXDLIN( 680)										if ((key974 != -1)) {
HXLINE( 680)											action974->addKey(key974,state974);
            										}
            									}
            								}
HXDLIN( 680)								{
HXLINE( 680)									 ::flixel::input::actions::FlxActionDigital action975 = this->_note_downR;
HXDLIN( 680)									int state975 = -1;
HXDLIN( 680)									int _g1045 = 0;
HXDLIN( 680)									while((_g1045 < copyKeys34->length)){
HXLINE( 680)										int key975 = copyKeys34->__get(_g1045);
HXDLIN( 680)										_g1045 = (_g1045 + 1);
HXDLIN( 680)										if ((key975 != -1)) {
HXLINE( 680)											action975->addKey(key975,state975);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 680)								 ::flixel::input::actions::FlxActionDigital action976 = this->_reset;
HXDLIN( 680)								int state976 = 2;
HXDLIN( 680)								int _g1046 = 0;
HXDLIN( 680)								while((_g1046 < copyKeys34->length)){
HXLINE( 680)									int key976 = copyKeys34->__get(_g1046);
HXDLIN( 680)									_g1046 = (_g1046 + 1);
HXDLIN( 680)									if ((key976 != -1)) {
HXLINE( 680)										action976->addKey(key976,state976);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 680)								 ::flixel::input::actions::FlxActionDigital action977 = this->_accept;
HXDLIN( 680)								int state977 = 2;
HXDLIN( 680)								int _g1047 = 0;
HXDLIN( 680)								while((_g1047 < copyKeys34->length)){
HXLINE( 680)									int key977 = copyKeys34->__get(_g1047);
HXDLIN( 680)									_g1047 = (_g1047 + 1);
HXDLIN( 680)									if ((key977 != -1)) {
HXLINE( 680)										action977->addKey(key977,state977);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 680)								 ::flixel::input::actions::FlxActionDigital action978 = this->_back;
HXDLIN( 680)								int state978 = 2;
HXDLIN( 680)								int _g1048 = 0;
HXDLIN( 680)								while((_g1048 < copyKeys34->length)){
HXLINE( 680)									int key978 = copyKeys34->__get(_g1048);
HXDLIN( 680)									_g1048 = (_g1048 + 1);
HXDLIN( 680)									if ((key978 != -1)) {
HXLINE( 680)										action978->addKey(key978,state978);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 680)								 ::flixel::input::actions::FlxActionDigital action979 = this->_pause;
HXDLIN( 680)								int state979 = 2;
HXDLIN( 680)								int _g1049 = 0;
HXDLIN( 680)								while((_g1049 < copyKeys34->length)){
HXLINE( 680)									int key979 = copyKeys34->__get(_g1049);
HXDLIN( 680)									_g1049 = (_g1049 + 1);
HXDLIN( 680)									if ((key979 != -1)) {
HXLINE( 680)										action979->addKey(key979,state979);
            									}
            								}
            							}
            							break;
            						}
            					}
HXLINE( 681)					{
HXLINE( 681)						::Array< int > copyKeys35 = ::Array_obj< int >::fromData( _hx_array_data_116e4296_1143,1)->copy();
HXDLIN( 681)						{
HXLINE( 681)							int _g1050 = 0;
HXDLIN( 681)							int _g1051 = copyKeys35->length;
HXDLIN( 681)							while((_g1050 < _g1051)){
HXLINE( 681)								_g1050 = (_g1050 + 1);
HXDLIN( 681)								int i35 = (_g1050 - 1);
HXDLIN( 681)								if ((i35 == -1)) {
HXLINE( 681)									copyKeys35->remove(i35);
            								}
            							}
            						}
HXDLIN( 681)						switch((int)(::Control_obj::RESET_dyn()->_hx_getIndex())){
            							case (int)0: {
HXLINE( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action980 = this->_ui_up;
HXDLIN( 681)									int state980 = 1;
HXDLIN( 681)									int _g1052 = 0;
HXDLIN( 681)									while((_g1052 < copyKeys35->length)){
HXLINE( 681)										int key980 = copyKeys35->__get(_g1052);
HXDLIN( 681)										_g1052 = (_g1052 + 1);
HXDLIN( 681)										if ((key980 != -1)) {
HXLINE( 681)											action980->addKey(key980,state980);
            										}
            									}
            								}
HXDLIN( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action981 = this->_ui_upP;
HXDLIN( 681)									int state981 = 2;
HXDLIN( 681)									int _g1053 = 0;
HXDLIN( 681)									while((_g1053 < copyKeys35->length)){
HXLINE( 681)										int key981 = copyKeys35->__get(_g1053);
HXDLIN( 681)										_g1053 = (_g1053 + 1);
HXDLIN( 681)										if ((key981 != -1)) {
HXLINE( 681)											action981->addKey(key981,state981);
            										}
            									}
            								}
HXDLIN( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action982 = this->_ui_upR;
HXDLIN( 681)									int state982 = -1;
HXDLIN( 681)									int _g1054 = 0;
HXDLIN( 681)									while((_g1054 < copyKeys35->length)){
HXLINE( 681)										int key982 = copyKeys35->__get(_g1054);
HXDLIN( 681)										_g1054 = (_g1054 + 1);
HXDLIN( 681)										if ((key982 != -1)) {
HXLINE( 681)											action982->addKey(key982,state982);
            										}
            									}
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action983 = this->_ui_left;
HXDLIN( 681)									int state983 = 1;
HXDLIN( 681)									int _g1055 = 0;
HXDLIN( 681)									while((_g1055 < copyKeys35->length)){
HXLINE( 681)										int key983 = copyKeys35->__get(_g1055);
HXDLIN( 681)										_g1055 = (_g1055 + 1);
HXDLIN( 681)										if ((key983 != -1)) {
HXLINE( 681)											action983->addKey(key983,state983);
            										}
            									}
            								}
HXDLIN( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action984 = this->_ui_leftP;
HXDLIN( 681)									int state984 = 2;
HXDLIN( 681)									int _g1056 = 0;
HXDLIN( 681)									while((_g1056 < copyKeys35->length)){
HXLINE( 681)										int key984 = copyKeys35->__get(_g1056);
HXDLIN( 681)										_g1056 = (_g1056 + 1);
HXDLIN( 681)										if ((key984 != -1)) {
HXLINE( 681)											action984->addKey(key984,state984);
            										}
            									}
            								}
HXDLIN( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action985 = this->_ui_leftR;
HXDLIN( 681)									int state985 = -1;
HXDLIN( 681)									int _g1057 = 0;
HXDLIN( 681)									while((_g1057 < copyKeys35->length)){
HXLINE( 681)										int key985 = copyKeys35->__get(_g1057);
HXDLIN( 681)										_g1057 = (_g1057 + 1);
HXDLIN( 681)										if ((key985 != -1)) {
HXLINE( 681)											action985->addKey(key985,state985);
            										}
            									}
            								}
            							}
            							break;
            							case (int)2: {
HXLINE( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action986 = this->_ui_right;
HXDLIN( 681)									int state986 = 1;
HXDLIN( 681)									int _g1058 = 0;
HXDLIN( 681)									while((_g1058 < copyKeys35->length)){
HXLINE( 681)										int key986 = copyKeys35->__get(_g1058);
HXDLIN( 681)										_g1058 = (_g1058 + 1);
HXDLIN( 681)										if ((key986 != -1)) {
HXLINE( 681)											action986->addKey(key986,state986);
            										}
            									}
            								}
HXDLIN( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action987 = this->_ui_rightP;
HXDLIN( 681)									int state987 = 2;
HXDLIN( 681)									int _g1059 = 0;
HXDLIN( 681)									while((_g1059 < copyKeys35->length)){
HXLINE( 681)										int key987 = copyKeys35->__get(_g1059);
HXDLIN( 681)										_g1059 = (_g1059 + 1);
HXDLIN( 681)										if ((key987 != -1)) {
HXLINE( 681)											action987->addKey(key987,state987);
            										}
            									}
            								}
HXDLIN( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action988 = this->_ui_rightR;
HXDLIN( 681)									int state988 = -1;
HXDLIN( 681)									int _g1060 = 0;
HXDLIN( 681)									while((_g1060 < copyKeys35->length)){
HXLINE( 681)										int key988 = copyKeys35->__get(_g1060);
HXDLIN( 681)										_g1060 = (_g1060 + 1);
HXDLIN( 681)										if ((key988 != -1)) {
HXLINE( 681)											action988->addKey(key988,state988);
            										}
            									}
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action989 = this->_ui_down;
HXDLIN( 681)									int state989 = 1;
HXDLIN( 681)									int _g1061 = 0;
HXDLIN( 681)									while((_g1061 < copyKeys35->length)){
HXLINE( 681)										int key989 = copyKeys35->__get(_g1061);
HXDLIN( 681)										_g1061 = (_g1061 + 1);
HXDLIN( 681)										if ((key989 != -1)) {
HXLINE( 681)											action989->addKey(key989,state989);
            										}
            									}
            								}
HXDLIN( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action990 = this->_ui_downP;
HXDLIN( 681)									int state990 = 2;
HXDLIN( 681)									int _g1062 = 0;
HXDLIN( 681)									while((_g1062 < copyKeys35->length)){
HXLINE( 681)										int key990 = copyKeys35->__get(_g1062);
HXDLIN( 681)										_g1062 = (_g1062 + 1);
HXDLIN( 681)										if ((key990 != -1)) {
HXLINE( 681)											action990->addKey(key990,state990);
            										}
            									}
            								}
HXDLIN( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action991 = this->_ui_downR;
HXDLIN( 681)									int state991 = -1;
HXDLIN( 681)									int _g1063 = 0;
HXDLIN( 681)									while((_g1063 < copyKeys35->length)){
HXLINE( 681)										int key991 = copyKeys35->__get(_g1063);
HXDLIN( 681)										_g1063 = (_g1063 + 1);
HXDLIN( 681)										if ((key991 != -1)) {
HXLINE( 681)											action991->addKey(key991,state991);
            										}
            									}
            								}
            							}
            							break;
            							case (int)4: {
HXLINE( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action992 = this->_note_up;
HXDLIN( 681)									int state992 = 1;
HXDLIN( 681)									int _g1064 = 0;
HXDLIN( 681)									while((_g1064 < copyKeys35->length)){
HXLINE( 681)										int key992 = copyKeys35->__get(_g1064);
HXDLIN( 681)										_g1064 = (_g1064 + 1);
HXDLIN( 681)										if ((key992 != -1)) {
HXLINE( 681)											action992->addKey(key992,state992);
            										}
            									}
            								}
HXDLIN( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action993 = this->_note_upP;
HXDLIN( 681)									int state993 = 2;
HXDLIN( 681)									int _g1065 = 0;
HXDLIN( 681)									while((_g1065 < copyKeys35->length)){
HXLINE( 681)										int key993 = copyKeys35->__get(_g1065);
HXDLIN( 681)										_g1065 = (_g1065 + 1);
HXDLIN( 681)										if ((key993 != -1)) {
HXLINE( 681)											action993->addKey(key993,state993);
            										}
            									}
            								}
HXDLIN( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action994 = this->_note_upR;
HXDLIN( 681)									int state994 = -1;
HXDLIN( 681)									int _g1066 = 0;
HXDLIN( 681)									while((_g1066 < copyKeys35->length)){
HXLINE( 681)										int key994 = copyKeys35->__get(_g1066);
HXDLIN( 681)										_g1066 = (_g1066 + 1);
HXDLIN( 681)										if ((key994 != -1)) {
HXLINE( 681)											action994->addKey(key994,state994);
            										}
            									}
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action995 = this->_note_left;
HXDLIN( 681)									int state995 = 1;
HXDLIN( 681)									int _g1067 = 0;
HXDLIN( 681)									while((_g1067 < copyKeys35->length)){
HXLINE( 681)										int key995 = copyKeys35->__get(_g1067);
HXDLIN( 681)										_g1067 = (_g1067 + 1);
HXDLIN( 681)										if ((key995 != -1)) {
HXLINE( 681)											action995->addKey(key995,state995);
            										}
            									}
            								}
HXDLIN( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action996 = this->_note_leftP;
HXDLIN( 681)									int state996 = 2;
HXDLIN( 681)									int _g1068 = 0;
HXDLIN( 681)									while((_g1068 < copyKeys35->length)){
HXLINE( 681)										int key996 = copyKeys35->__get(_g1068);
HXDLIN( 681)										_g1068 = (_g1068 + 1);
HXDLIN( 681)										if ((key996 != -1)) {
HXLINE( 681)											action996->addKey(key996,state996);
            										}
            									}
            								}
HXDLIN( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action997 = this->_note_leftR;
HXDLIN( 681)									int state997 = -1;
HXDLIN( 681)									int _g1069 = 0;
HXDLIN( 681)									while((_g1069 < copyKeys35->length)){
HXLINE( 681)										int key997 = copyKeys35->__get(_g1069);
HXDLIN( 681)										_g1069 = (_g1069 + 1);
HXDLIN( 681)										if ((key997 != -1)) {
HXLINE( 681)											action997->addKey(key997,state997);
            										}
            									}
            								}
            							}
            							break;
            							case (int)6: {
HXLINE( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action998 = this->_note_right;
HXDLIN( 681)									int state998 = 1;
HXDLIN( 681)									int _g1070 = 0;
HXDLIN( 681)									while((_g1070 < copyKeys35->length)){
HXLINE( 681)										int key998 = copyKeys35->__get(_g1070);
HXDLIN( 681)										_g1070 = (_g1070 + 1);
HXDLIN( 681)										if ((key998 != -1)) {
HXLINE( 681)											action998->addKey(key998,state998);
            										}
            									}
            								}
HXDLIN( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action999 = this->_note_rightP;
HXDLIN( 681)									int state999 = 2;
HXDLIN( 681)									int _g1071 = 0;
HXDLIN( 681)									while((_g1071 < copyKeys35->length)){
HXLINE( 681)										int key999 = copyKeys35->__get(_g1071);
HXDLIN( 681)										_g1071 = (_g1071 + 1);
HXDLIN( 681)										if ((key999 != -1)) {
HXLINE( 681)											action999->addKey(key999,state999);
            										}
            									}
            								}
HXDLIN( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action1000 = this->_note_rightR;
HXDLIN( 681)									int state1000 = -1;
HXDLIN( 681)									int _g1072 = 0;
HXDLIN( 681)									while((_g1072 < copyKeys35->length)){
HXLINE( 681)										int key1000 = copyKeys35->__get(_g1072);
HXDLIN( 681)										_g1072 = (_g1072 + 1);
HXDLIN( 681)										if ((key1000 != -1)) {
HXLINE( 681)											action1000->addKey(key1000,state1000);
            										}
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action1001 = this->_note_down;
HXDLIN( 681)									int state1001 = 1;
HXDLIN( 681)									int _g1073 = 0;
HXDLIN( 681)									while((_g1073 < copyKeys35->length)){
HXLINE( 681)										int key1001 = copyKeys35->__get(_g1073);
HXDLIN( 681)										_g1073 = (_g1073 + 1);
HXDLIN( 681)										if ((key1001 != -1)) {
HXLINE( 681)											action1001->addKey(key1001,state1001);
            										}
            									}
            								}
HXDLIN( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action1002 = this->_note_downP;
HXDLIN( 681)									int state1002 = 2;
HXDLIN( 681)									int _g1074 = 0;
HXDLIN( 681)									while((_g1074 < copyKeys35->length)){
HXLINE( 681)										int key1002 = copyKeys35->__get(_g1074);
HXDLIN( 681)										_g1074 = (_g1074 + 1);
HXDLIN( 681)										if ((key1002 != -1)) {
HXLINE( 681)											action1002->addKey(key1002,state1002);
            										}
            									}
            								}
HXDLIN( 681)								{
HXLINE( 681)									 ::flixel::input::actions::FlxActionDigital action1003 = this->_note_downR;
HXDLIN( 681)									int state1003 = -1;
HXDLIN( 681)									int _g1075 = 0;
HXDLIN( 681)									while((_g1075 < copyKeys35->length)){
HXLINE( 681)										int key1003 = copyKeys35->__get(_g1075);
HXDLIN( 681)										_g1075 = (_g1075 + 1);
HXDLIN( 681)										if ((key1003 != -1)) {
HXLINE( 681)											action1003->addKey(key1003,state1003);
            										}
            									}
            								}
            							}
            							break;
            							case (int)8: {
HXLINE( 681)								 ::flixel::input::actions::FlxActionDigital action1004 = this->_reset;
HXDLIN( 681)								int state1004 = 2;
HXDLIN( 681)								int _g1076 = 0;
HXDLIN( 681)								while((_g1076 < copyKeys35->length)){
HXLINE( 681)									int key1004 = copyKeys35->__get(_g1076);
HXDLIN( 681)									_g1076 = (_g1076 + 1);
HXDLIN( 681)									if ((key1004 != -1)) {
HXLINE( 681)										action1004->addKey(key1004,state1004);
            									}
            								}
            							}
            							break;
            							case (int)9: {
HXLINE( 681)								 ::flixel::input::actions::FlxActionDigital action1005 = this->_accept;
HXDLIN( 681)								int state1005 = 2;
HXDLIN( 681)								int _g1077 = 0;
HXDLIN( 681)								while((_g1077 < copyKeys35->length)){
HXLINE( 681)									int key1005 = copyKeys35->__get(_g1077);
HXDLIN( 681)									_g1077 = (_g1077 + 1);
HXDLIN( 681)									if ((key1005 != -1)) {
HXLINE( 681)										action1005->addKey(key1005,state1005);
            									}
            								}
            							}
            							break;
            							case (int)10: {
HXLINE( 681)								 ::flixel::input::actions::FlxActionDigital action1006 = this->_back;
HXDLIN( 681)								int state1006 = 2;
HXDLIN( 681)								int _g1078 = 0;
HXDLIN( 681)								while((_g1078 < copyKeys35->length)){
HXLINE( 681)									int key1006 = copyKeys35->__get(_g1078);
HXDLIN( 681)									_g1078 = (_g1078 + 1);
HXDLIN( 681)									if ((key1006 != -1)) {
HXLINE( 681)										action1006->addKey(key1006,state1006);
            									}
            								}
            							}
            							break;
            							case (int)11: {
HXLINE( 681)								 ::flixel::input::actions::FlxActionDigital action1007 = this->_pause;
HXDLIN( 681)								int state1007 = 2;
HXDLIN( 681)								int _g1079 = 0;
HXDLIN( 681)								while((_g1079 < copyKeys35->length)){
HXLINE( 681)									int key1007 = copyKeys35->__get(_g1079);
HXDLIN( 681)									_g1079 = (_g1079 + 1);
HXDLIN( 681)									if ((key1007 != -1)) {
HXLINE( 681)										action1007->addKey(key1007,state1007);
            									}
            								}
            							}
            							break;
            						}
            					}
            				}
            			}
            			break;
            			case (int)2: {
            			}
            			break;
            			case (int)3: {
            			}
            			break;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Controls_obj,setKeyboardScheme,(void))

void Controls_obj::removeKeyboard(){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_735_removeKeyboard)
HXDLIN( 735)		int _g = 0;
HXDLIN( 735)		::Array< ::Dynamic> _g1 = this->digitalActions;
HXDLIN( 735)		while((_g < _g1->length)){
HXDLIN( 735)			 ::flixel::input::actions::FlxActionDigital action = _g1->__get(_g).StaticCast<  ::flixel::input::actions::FlxActionDigital >();
HXDLIN( 735)			_g = (_g + 1);
HXLINE( 737)			int i = action->inputs->length;
HXLINE( 738)			while(true){
HXLINE( 738)				i = (i - 1);
HXDLIN( 738)				if (!(((i + 1) > 0))) {
HXLINE( 738)					goto _hx_goto_1145;
            				}
HXLINE( 740)				 ::flixel::input::actions::FlxActionInput input = action->inputs->__get(i).StaticCast<  ::flixel::input::actions::FlxActionInput >();
HXLINE( 741)				if (::hx::IsPointerEq( input->device,::flixel::input::actions::FlxInputDevice_obj::KEYBOARD_dyn() )) {
HXLINE( 742)					action->remove(input,null());
            				}
            			}
            			_hx_goto_1145:;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,removeKeyboard,(void))

void Controls_obj::addGamepad(int id, ::haxe::ds::EnumValueMap buttonMap){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_748_addGamepad)
HXLINE( 749)		this->gamepadsAdded->push(id);
HXLINE( 752)		{
HXLINE( 752)			::Dynamic map = buttonMap;
HXDLIN( 752)			::Dynamic _g_map = map;
HXDLIN( 752)			 ::Dynamic _g_keys = ::haxe::IMap_obj::keys(map);
HXDLIN( 752)			while(( (bool)(_g_keys->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE( 752)				 ::Control key = _g_keys->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)();
HXDLIN( 752)				::Array< int > _g_value = ( (::Array< int >)(::haxe::IMap_obj::get(_g_map,key)) );
HXDLIN( 752)				 ::Control _g_key = key;
HXDLIN( 752)				 ::Control control = _g_key;
HXDLIN( 752)				::Array< int > buttons = _g_value;
HXLINE( 753)				{
HXLINE( 753)					int id1 = id;
HXDLIN( 753)					::Array< int > buttons1 = buttons;
HXDLIN( 753)					switch((int)(control->_hx_getIndex())){
            						case (int)0: {
HXLINE( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action = this->_ui_up;
HXDLIN( 753)								int state = 1;
HXDLIN( 753)								int _g = 0;
HXDLIN( 753)								while((_g < buttons1->length)){
HXLINE( 753)									int button = buttons1->__get(_g);
HXDLIN( 753)									_g = (_g + 1);
HXDLIN( 753)									action->addGamepad(button,state,id1);
            								}
            							}
HXDLIN( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action1 = this->_ui_upP;
HXDLIN( 753)								int state1 = 2;
HXDLIN( 753)								int _g1 = 0;
HXDLIN( 753)								while((_g1 < buttons1->length)){
HXLINE( 753)									int button1 = buttons1->__get(_g1);
HXDLIN( 753)									_g1 = (_g1 + 1);
HXDLIN( 753)									action1->addGamepad(button1,state1,id1);
            								}
            							}
HXDLIN( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action2 = this->_ui_upR;
HXDLIN( 753)								int state2 = -1;
HXDLIN( 753)								int _g2 = 0;
HXDLIN( 753)								while((_g2 < buttons1->length)){
HXLINE( 753)									int button2 = buttons1->__get(_g2);
HXDLIN( 753)									_g2 = (_g2 + 1);
HXDLIN( 753)									action2->addGamepad(button2,state2,id1);
            								}
            							}
            						}
            						break;
            						case (int)1: {
HXLINE( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action3 = this->_ui_left;
HXDLIN( 753)								int state3 = 1;
HXDLIN( 753)								int _g3 = 0;
HXDLIN( 753)								while((_g3 < buttons1->length)){
HXLINE( 753)									int button3 = buttons1->__get(_g3);
HXDLIN( 753)									_g3 = (_g3 + 1);
HXDLIN( 753)									action3->addGamepad(button3,state3,id1);
            								}
            							}
HXDLIN( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action4 = this->_ui_leftP;
HXDLIN( 753)								int state4 = 2;
HXDLIN( 753)								int _g4 = 0;
HXDLIN( 753)								while((_g4 < buttons1->length)){
HXLINE( 753)									int button4 = buttons1->__get(_g4);
HXDLIN( 753)									_g4 = (_g4 + 1);
HXDLIN( 753)									action4->addGamepad(button4,state4,id1);
            								}
            							}
HXDLIN( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action5 = this->_ui_leftR;
HXDLIN( 753)								int state5 = -1;
HXDLIN( 753)								int _g5 = 0;
HXDLIN( 753)								while((_g5 < buttons1->length)){
HXLINE( 753)									int button5 = buttons1->__get(_g5);
HXDLIN( 753)									_g5 = (_g5 + 1);
HXDLIN( 753)									action5->addGamepad(button5,state5,id1);
            								}
            							}
            						}
            						break;
            						case (int)2: {
HXLINE( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action6 = this->_ui_right;
HXDLIN( 753)								int state6 = 1;
HXDLIN( 753)								int _g6 = 0;
HXDLIN( 753)								while((_g6 < buttons1->length)){
HXLINE( 753)									int button6 = buttons1->__get(_g6);
HXDLIN( 753)									_g6 = (_g6 + 1);
HXDLIN( 753)									action6->addGamepad(button6,state6,id1);
            								}
            							}
HXDLIN( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action7 = this->_ui_rightP;
HXDLIN( 753)								int state7 = 2;
HXDLIN( 753)								int _g7 = 0;
HXDLIN( 753)								while((_g7 < buttons1->length)){
HXLINE( 753)									int button7 = buttons1->__get(_g7);
HXDLIN( 753)									_g7 = (_g7 + 1);
HXDLIN( 753)									action7->addGamepad(button7,state7,id1);
            								}
            							}
HXDLIN( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action8 = this->_ui_rightR;
HXDLIN( 753)								int state8 = -1;
HXDLIN( 753)								int _g8 = 0;
HXDLIN( 753)								while((_g8 < buttons1->length)){
HXLINE( 753)									int button8 = buttons1->__get(_g8);
HXDLIN( 753)									_g8 = (_g8 + 1);
HXDLIN( 753)									action8->addGamepad(button8,state8,id1);
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action9 = this->_ui_down;
HXDLIN( 753)								int state9 = 1;
HXDLIN( 753)								int _g9 = 0;
HXDLIN( 753)								while((_g9 < buttons1->length)){
HXLINE( 753)									int button9 = buttons1->__get(_g9);
HXDLIN( 753)									_g9 = (_g9 + 1);
HXDLIN( 753)									action9->addGamepad(button9,state9,id1);
            								}
            							}
HXDLIN( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action10 = this->_ui_downP;
HXDLIN( 753)								int state10 = 2;
HXDLIN( 753)								int _g10 = 0;
HXDLIN( 753)								while((_g10 < buttons1->length)){
HXLINE( 753)									int button10 = buttons1->__get(_g10);
HXDLIN( 753)									_g10 = (_g10 + 1);
HXDLIN( 753)									action10->addGamepad(button10,state10,id1);
            								}
            							}
HXDLIN( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action11 = this->_ui_downR;
HXDLIN( 753)								int state11 = -1;
HXDLIN( 753)								int _g11 = 0;
HXDLIN( 753)								while((_g11 < buttons1->length)){
HXLINE( 753)									int button11 = buttons1->__get(_g11);
HXDLIN( 753)									_g11 = (_g11 + 1);
HXDLIN( 753)									action11->addGamepad(button11,state11,id1);
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action12 = this->_note_up;
HXDLIN( 753)								int state12 = 1;
HXDLIN( 753)								int _g12 = 0;
HXDLIN( 753)								while((_g12 < buttons1->length)){
HXLINE( 753)									int button12 = buttons1->__get(_g12);
HXDLIN( 753)									_g12 = (_g12 + 1);
HXDLIN( 753)									action12->addGamepad(button12,state12,id1);
            								}
            							}
HXDLIN( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action13 = this->_note_upP;
HXDLIN( 753)								int state13 = 2;
HXDLIN( 753)								int _g13 = 0;
HXDLIN( 753)								while((_g13 < buttons1->length)){
HXLINE( 753)									int button13 = buttons1->__get(_g13);
HXDLIN( 753)									_g13 = (_g13 + 1);
HXDLIN( 753)									action13->addGamepad(button13,state13,id1);
            								}
            							}
HXDLIN( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action14 = this->_note_upR;
HXDLIN( 753)								int state14 = -1;
HXDLIN( 753)								int _g14 = 0;
HXDLIN( 753)								while((_g14 < buttons1->length)){
HXLINE( 753)									int button14 = buttons1->__get(_g14);
HXDLIN( 753)									_g14 = (_g14 + 1);
HXDLIN( 753)									action14->addGamepad(button14,state14,id1);
            								}
            							}
            						}
            						break;
            						case (int)5: {
HXLINE( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action15 = this->_note_left;
HXDLIN( 753)								int state15 = 1;
HXDLIN( 753)								int _g15 = 0;
HXDLIN( 753)								while((_g15 < buttons1->length)){
HXLINE( 753)									int button15 = buttons1->__get(_g15);
HXDLIN( 753)									_g15 = (_g15 + 1);
HXDLIN( 753)									action15->addGamepad(button15,state15,id1);
            								}
            							}
HXDLIN( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action16 = this->_note_leftP;
HXDLIN( 753)								int state16 = 2;
HXDLIN( 753)								int _g16 = 0;
HXDLIN( 753)								while((_g16 < buttons1->length)){
HXLINE( 753)									int button16 = buttons1->__get(_g16);
HXDLIN( 753)									_g16 = (_g16 + 1);
HXDLIN( 753)									action16->addGamepad(button16,state16,id1);
            								}
            							}
HXDLIN( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action17 = this->_note_leftR;
HXDLIN( 753)								int state17 = -1;
HXDLIN( 753)								int _g17 = 0;
HXDLIN( 753)								while((_g17 < buttons1->length)){
HXLINE( 753)									int button17 = buttons1->__get(_g17);
HXDLIN( 753)									_g17 = (_g17 + 1);
HXDLIN( 753)									action17->addGamepad(button17,state17,id1);
            								}
            							}
            						}
            						break;
            						case (int)6: {
HXLINE( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action18 = this->_note_right;
HXDLIN( 753)								int state18 = 1;
HXDLIN( 753)								int _g18 = 0;
HXDLIN( 753)								while((_g18 < buttons1->length)){
HXLINE( 753)									int button18 = buttons1->__get(_g18);
HXDLIN( 753)									_g18 = (_g18 + 1);
HXDLIN( 753)									action18->addGamepad(button18,state18,id1);
            								}
            							}
HXDLIN( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action19 = this->_note_rightP;
HXDLIN( 753)								int state19 = 2;
HXDLIN( 753)								int _g19 = 0;
HXDLIN( 753)								while((_g19 < buttons1->length)){
HXLINE( 753)									int button19 = buttons1->__get(_g19);
HXDLIN( 753)									_g19 = (_g19 + 1);
HXDLIN( 753)									action19->addGamepad(button19,state19,id1);
            								}
            							}
HXDLIN( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action20 = this->_note_rightR;
HXDLIN( 753)								int state20 = -1;
HXDLIN( 753)								int _g20 = 0;
HXDLIN( 753)								while((_g20 < buttons1->length)){
HXLINE( 753)									int button20 = buttons1->__get(_g20);
HXDLIN( 753)									_g20 = (_g20 + 1);
HXDLIN( 753)									action20->addGamepad(button20,state20,id1);
            								}
            							}
            						}
            						break;
            						case (int)7: {
HXLINE( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action21 = this->_note_down;
HXDLIN( 753)								int state21 = 1;
HXDLIN( 753)								int _g21 = 0;
HXDLIN( 753)								while((_g21 < buttons1->length)){
HXLINE( 753)									int button21 = buttons1->__get(_g21);
HXDLIN( 753)									_g21 = (_g21 + 1);
HXDLIN( 753)									action21->addGamepad(button21,state21,id1);
            								}
            							}
HXDLIN( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action22 = this->_note_downP;
HXDLIN( 753)								int state22 = 2;
HXDLIN( 753)								int _g22 = 0;
HXDLIN( 753)								while((_g22 < buttons1->length)){
HXLINE( 753)									int button22 = buttons1->__get(_g22);
HXDLIN( 753)									_g22 = (_g22 + 1);
HXDLIN( 753)									action22->addGamepad(button22,state22,id1);
            								}
            							}
HXDLIN( 753)							{
HXLINE( 753)								 ::flixel::input::actions::FlxActionDigital action23 = this->_note_downR;
HXDLIN( 753)								int state23 = -1;
HXDLIN( 753)								int _g23 = 0;
HXDLIN( 753)								while((_g23 < buttons1->length)){
HXLINE( 753)									int button23 = buttons1->__get(_g23);
HXDLIN( 753)									_g23 = (_g23 + 1);
HXDLIN( 753)									action23->addGamepad(button23,state23,id1);
            								}
            							}
            						}
            						break;
            						case (int)8: {
HXLINE( 753)							 ::flixel::input::actions::FlxActionDigital action24 = this->_reset;
HXDLIN( 753)							int state24 = 2;
HXDLIN( 753)							int _g24 = 0;
HXDLIN( 753)							while((_g24 < buttons1->length)){
HXLINE( 753)								int button24 = buttons1->__get(_g24);
HXDLIN( 753)								_g24 = (_g24 + 1);
HXDLIN( 753)								action24->addGamepad(button24,state24,id1);
            							}
            						}
            						break;
            						case (int)9: {
HXLINE( 753)							 ::flixel::input::actions::FlxActionDigital action25 = this->_accept;
HXDLIN( 753)							int state25 = 2;
HXDLIN( 753)							int _g25 = 0;
HXDLIN( 753)							while((_g25 < buttons1->length)){
HXLINE( 753)								int button25 = buttons1->__get(_g25);
HXDLIN( 753)								_g25 = (_g25 + 1);
HXDLIN( 753)								action25->addGamepad(button25,state25,id1);
            							}
            						}
            						break;
            						case (int)10: {
HXLINE( 753)							 ::flixel::input::actions::FlxActionDigital action26 = this->_back;
HXDLIN( 753)							int state26 = 2;
HXDLIN( 753)							int _g26 = 0;
HXDLIN( 753)							while((_g26 < buttons1->length)){
HXLINE( 753)								int button26 = buttons1->__get(_g26);
HXDLIN( 753)								_g26 = (_g26 + 1);
HXDLIN( 753)								action26->addGamepad(button26,state26,id1);
            							}
            						}
            						break;
            						case (int)11: {
HXLINE( 753)							 ::flixel::input::actions::FlxActionDigital action27 = this->_pause;
HXDLIN( 753)							int state27 = 2;
HXDLIN( 753)							int _g27 = 0;
HXDLIN( 753)							while((_g27 < buttons1->length)){
HXLINE( 753)								int button27 = buttons1->__get(_g27);
HXDLIN( 753)								_g27 = (_g27 + 1);
HXDLIN( 753)								action27->addGamepad(button27,state27,id1);
            							}
            						}
            						break;
            					}
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Controls_obj,addGamepad,(void))

void Controls_obj::addGamepadLiteral(int id, ::haxe::ds::EnumValueMap buttonMap){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_761_addGamepadLiteral)
HXLINE( 762)		this->gamepadsAdded->push(id);
HXLINE( 765)		{
HXLINE( 765)			::Dynamic map = buttonMap;
HXDLIN( 765)			::Dynamic _g_map = map;
HXDLIN( 765)			 ::Dynamic _g_keys = ::haxe::IMap_obj::keys(map);
HXDLIN( 765)			while(( (bool)(_g_keys->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE( 765)				 ::Control key = _g_keys->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)();
HXDLIN( 765)				::Array< int > _g_value = ( (::Array< int >)(::haxe::IMap_obj::get(_g_map,key)) );
HXDLIN( 765)				 ::Control _g_key = key;
HXDLIN( 765)				 ::Control control = _g_key;
HXDLIN( 765)				::Array< int > buttons = _g_value;
HXLINE( 766)				{
HXLINE( 766)					int id1 = id;
HXDLIN( 766)					::Array< int > buttons1 = buttons;
HXDLIN( 766)					switch((int)(control->_hx_getIndex())){
            						case (int)0: {
HXLINE( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action = this->_ui_up;
HXDLIN( 766)								int state = 1;
HXDLIN( 766)								int _g = 0;
HXDLIN( 766)								while((_g < buttons1->length)){
HXLINE( 766)									int button = buttons1->__get(_g);
HXDLIN( 766)									_g = (_g + 1);
HXDLIN( 766)									action->addGamepad(button,state,id1);
            								}
            							}
HXDLIN( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action1 = this->_ui_upP;
HXDLIN( 766)								int state1 = 2;
HXDLIN( 766)								int _g1 = 0;
HXDLIN( 766)								while((_g1 < buttons1->length)){
HXLINE( 766)									int button1 = buttons1->__get(_g1);
HXDLIN( 766)									_g1 = (_g1 + 1);
HXDLIN( 766)									action1->addGamepad(button1,state1,id1);
            								}
            							}
HXDLIN( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action2 = this->_ui_upR;
HXDLIN( 766)								int state2 = -1;
HXDLIN( 766)								int _g2 = 0;
HXDLIN( 766)								while((_g2 < buttons1->length)){
HXLINE( 766)									int button2 = buttons1->__get(_g2);
HXDLIN( 766)									_g2 = (_g2 + 1);
HXDLIN( 766)									action2->addGamepad(button2,state2,id1);
            								}
            							}
            						}
            						break;
            						case (int)1: {
HXLINE( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action3 = this->_ui_left;
HXDLIN( 766)								int state3 = 1;
HXDLIN( 766)								int _g3 = 0;
HXDLIN( 766)								while((_g3 < buttons1->length)){
HXLINE( 766)									int button3 = buttons1->__get(_g3);
HXDLIN( 766)									_g3 = (_g3 + 1);
HXDLIN( 766)									action3->addGamepad(button3,state3,id1);
            								}
            							}
HXDLIN( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action4 = this->_ui_leftP;
HXDLIN( 766)								int state4 = 2;
HXDLIN( 766)								int _g4 = 0;
HXDLIN( 766)								while((_g4 < buttons1->length)){
HXLINE( 766)									int button4 = buttons1->__get(_g4);
HXDLIN( 766)									_g4 = (_g4 + 1);
HXDLIN( 766)									action4->addGamepad(button4,state4,id1);
            								}
            							}
HXDLIN( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action5 = this->_ui_leftR;
HXDLIN( 766)								int state5 = -1;
HXDLIN( 766)								int _g5 = 0;
HXDLIN( 766)								while((_g5 < buttons1->length)){
HXLINE( 766)									int button5 = buttons1->__get(_g5);
HXDLIN( 766)									_g5 = (_g5 + 1);
HXDLIN( 766)									action5->addGamepad(button5,state5,id1);
            								}
            							}
            						}
            						break;
            						case (int)2: {
HXLINE( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action6 = this->_ui_right;
HXDLIN( 766)								int state6 = 1;
HXDLIN( 766)								int _g6 = 0;
HXDLIN( 766)								while((_g6 < buttons1->length)){
HXLINE( 766)									int button6 = buttons1->__get(_g6);
HXDLIN( 766)									_g6 = (_g6 + 1);
HXDLIN( 766)									action6->addGamepad(button6,state6,id1);
            								}
            							}
HXDLIN( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action7 = this->_ui_rightP;
HXDLIN( 766)								int state7 = 2;
HXDLIN( 766)								int _g7 = 0;
HXDLIN( 766)								while((_g7 < buttons1->length)){
HXLINE( 766)									int button7 = buttons1->__get(_g7);
HXDLIN( 766)									_g7 = (_g7 + 1);
HXDLIN( 766)									action7->addGamepad(button7,state7,id1);
            								}
            							}
HXDLIN( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action8 = this->_ui_rightR;
HXDLIN( 766)								int state8 = -1;
HXDLIN( 766)								int _g8 = 0;
HXDLIN( 766)								while((_g8 < buttons1->length)){
HXLINE( 766)									int button8 = buttons1->__get(_g8);
HXDLIN( 766)									_g8 = (_g8 + 1);
HXDLIN( 766)									action8->addGamepad(button8,state8,id1);
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action9 = this->_ui_down;
HXDLIN( 766)								int state9 = 1;
HXDLIN( 766)								int _g9 = 0;
HXDLIN( 766)								while((_g9 < buttons1->length)){
HXLINE( 766)									int button9 = buttons1->__get(_g9);
HXDLIN( 766)									_g9 = (_g9 + 1);
HXDLIN( 766)									action9->addGamepad(button9,state9,id1);
            								}
            							}
HXDLIN( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action10 = this->_ui_downP;
HXDLIN( 766)								int state10 = 2;
HXDLIN( 766)								int _g10 = 0;
HXDLIN( 766)								while((_g10 < buttons1->length)){
HXLINE( 766)									int button10 = buttons1->__get(_g10);
HXDLIN( 766)									_g10 = (_g10 + 1);
HXDLIN( 766)									action10->addGamepad(button10,state10,id1);
            								}
            							}
HXDLIN( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action11 = this->_ui_downR;
HXDLIN( 766)								int state11 = -1;
HXDLIN( 766)								int _g11 = 0;
HXDLIN( 766)								while((_g11 < buttons1->length)){
HXLINE( 766)									int button11 = buttons1->__get(_g11);
HXDLIN( 766)									_g11 = (_g11 + 1);
HXDLIN( 766)									action11->addGamepad(button11,state11,id1);
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action12 = this->_note_up;
HXDLIN( 766)								int state12 = 1;
HXDLIN( 766)								int _g12 = 0;
HXDLIN( 766)								while((_g12 < buttons1->length)){
HXLINE( 766)									int button12 = buttons1->__get(_g12);
HXDLIN( 766)									_g12 = (_g12 + 1);
HXDLIN( 766)									action12->addGamepad(button12,state12,id1);
            								}
            							}
HXDLIN( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action13 = this->_note_upP;
HXDLIN( 766)								int state13 = 2;
HXDLIN( 766)								int _g13 = 0;
HXDLIN( 766)								while((_g13 < buttons1->length)){
HXLINE( 766)									int button13 = buttons1->__get(_g13);
HXDLIN( 766)									_g13 = (_g13 + 1);
HXDLIN( 766)									action13->addGamepad(button13,state13,id1);
            								}
            							}
HXDLIN( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action14 = this->_note_upR;
HXDLIN( 766)								int state14 = -1;
HXDLIN( 766)								int _g14 = 0;
HXDLIN( 766)								while((_g14 < buttons1->length)){
HXLINE( 766)									int button14 = buttons1->__get(_g14);
HXDLIN( 766)									_g14 = (_g14 + 1);
HXDLIN( 766)									action14->addGamepad(button14,state14,id1);
            								}
            							}
            						}
            						break;
            						case (int)5: {
HXLINE( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action15 = this->_note_left;
HXDLIN( 766)								int state15 = 1;
HXDLIN( 766)								int _g15 = 0;
HXDLIN( 766)								while((_g15 < buttons1->length)){
HXLINE( 766)									int button15 = buttons1->__get(_g15);
HXDLIN( 766)									_g15 = (_g15 + 1);
HXDLIN( 766)									action15->addGamepad(button15,state15,id1);
            								}
            							}
HXDLIN( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action16 = this->_note_leftP;
HXDLIN( 766)								int state16 = 2;
HXDLIN( 766)								int _g16 = 0;
HXDLIN( 766)								while((_g16 < buttons1->length)){
HXLINE( 766)									int button16 = buttons1->__get(_g16);
HXDLIN( 766)									_g16 = (_g16 + 1);
HXDLIN( 766)									action16->addGamepad(button16,state16,id1);
            								}
            							}
HXDLIN( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action17 = this->_note_leftR;
HXDLIN( 766)								int state17 = -1;
HXDLIN( 766)								int _g17 = 0;
HXDLIN( 766)								while((_g17 < buttons1->length)){
HXLINE( 766)									int button17 = buttons1->__get(_g17);
HXDLIN( 766)									_g17 = (_g17 + 1);
HXDLIN( 766)									action17->addGamepad(button17,state17,id1);
            								}
            							}
            						}
            						break;
            						case (int)6: {
HXLINE( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action18 = this->_note_right;
HXDLIN( 766)								int state18 = 1;
HXDLIN( 766)								int _g18 = 0;
HXDLIN( 766)								while((_g18 < buttons1->length)){
HXLINE( 766)									int button18 = buttons1->__get(_g18);
HXDLIN( 766)									_g18 = (_g18 + 1);
HXDLIN( 766)									action18->addGamepad(button18,state18,id1);
            								}
            							}
HXDLIN( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action19 = this->_note_rightP;
HXDLIN( 766)								int state19 = 2;
HXDLIN( 766)								int _g19 = 0;
HXDLIN( 766)								while((_g19 < buttons1->length)){
HXLINE( 766)									int button19 = buttons1->__get(_g19);
HXDLIN( 766)									_g19 = (_g19 + 1);
HXDLIN( 766)									action19->addGamepad(button19,state19,id1);
            								}
            							}
HXDLIN( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action20 = this->_note_rightR;
HXDLIN( 766)								int state20 = -1;
HXDLIN( 766)								int _g20 = 0;
HXDLIN( 766)								while((_g20 < buttons1->length)){
HXLINE( 766)									int button20 = buttons1->__get(_g20);
HXDLIN( 766)									_g20 = (_g20 + 1);
HXDLIN( 766)									action20->addGamepad(button20,state20,id1);
            								}
            							}
            						}
            						break;
            						case (int)7: {
HXLINE( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action21 = this->_note_down;
HXDLIN( 766)								int state21 = 1;
HXDLIN( 766)								int _g21 = 0;
HXDLIN( 766)								while((_g21 < buttons1->length)){
HXLINE( 766)									int button21 = buttons1->__get(_g21);
HXDLIN( 766)									_g21 = (_g21 + 1);
HXDLIN( 766)									action21->addGamepad(button21,state21,id1);
            								}
            							}
HXDLIN( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action22 = this->_note_downP;
HXDLIN( 766)								int state22 = 2;
HXDLIN( 766)								int _g22 = 0;
HXDLIN( 766)								while((_g22 < buttons1->length)){
HXLINE( 766)									int button22 = buttons1->__get(_g22);
HXDLIN( 766)									_g22 = (_g22 + 1);
HXDLIN( 766)									action22->addGamepad(button22,state22,id1);
            								}
            							}
HXDLIN( 766)							{
HXLINE( 766)								 ::flixel::input::actions::FlxActionDigital action23 = this->_note_downR;
HXDLIN( 766)								int state23 = -1;
HXDLIN( 766)								int _g23 = 0;
HXDLIN( 766)								while((_g23 < buttons1->length)){
HXLINE( 766)									int button23 = buttons1->__get(_g23);
HXDLIN( 766)									_g23 = (_g23 + 1);
HXDLIN( 766)									action23->addGamepad(button23,state23,id1);
            								}
            							}
            						}
            						break;
            						case (int)8: {
HXLINE( 766)							 ::flixel::input::actions::FlxActionDigital action24 = this->_reset;
HXDLIN( 766)							int state24 = 2;
HXDLIN( 766)							int _g24 = 0;
HXDLIN( 766)							while((_g24 < buttons1->length)){
HXLINE( 766)								int button24 = buttons1->__get(_g24);
HXDLIN( 766)								_g24 = (_g24 + 1);
HXDLIN( 766)								action24->addGamepad(button24,state24,id1);
            							}
            						}
            						break;
            						case (int)9: {
HXLINE( 766)							 ::flixel::input::actions::FlxActionDigital action25 = this->_accept;
HXDLIN( 766)							int state25 = 2;
HXDLIN( 766)							int _g25 = 0;
HXDLIN( 766)							while((_g25 < buttons1->length)){
HXLINE( 766)								int button25 = buttons1->__get(_g25);
HXDLIN( 766)								_g25 = (_g25 + 1);
HXDLIN( 766)								action25->addGamepad(button25,state25,id1);
            							}
            						}
            						break;
            						case (int)10: {
HXLINE( 766)							 ::flixel::input::actions::FlxActionDigital action26 = this->_back;
HXDLIN( 766)							int state26 = 2;
HXDLIN( 766)							int _g26 = 0;
HXDLIN( 766)							while((_g26 < buttons1->length)){
HXLINE( 766)								int button26 = buttons1->__get(_g26);
HXDLIN( 766)								_g26 = (_g26 + 1);
HXDLIN( 766)								action26->addGamepad(button26,state26,id1);
            							}
            						}
            						break;
            						case (int)11: {
HXLINE( 766)							 ::flixel::input::actions::FlxActionDigital action27 = this->_pause;
HXDLIN( 766)							int state27 = 2;
HXDLIN( 766)							int _g27 = 0;
HXDLIN( 766)							while((_g27 < buttons1->length)){
HXLINE( 766)								int button27 = buttons1->__get(_g27);
HXDLIN( 766)								_g27 = (_g27 + 1);
HXDLIN( 766)								action27->addGamepad(button27,state27,id1);
            							}
            						}
            						break;
            					}
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Controls_obj,addGamepadLiteral,(void))

void Controls_obj::removeGamepad(::hx::Null< int >  __o_deviceID){
            		int deviceID = __o_deviceID.Default(-1);
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_774_removeGamepad)
HXLINE( 775)		{
HXLINE( 775)			int _g = 0;
HXDLIN( 775)			::Array< ::Dynamic> _g1 = this->digitalActions;
HXDLIN( 775)			while((_g < _g1->length)){
HXLINE( 775)				 ::flixel::input::actions::FlxActionDigital action = _g1->__get(_g).StaticCast<  ::flixel::input::actions::FlxActionDigital >();
HXDLIN( 775)				_g = (_g + 1);
HXLINE( 777)				int i = action->inputs->length;
HXLINE( 778)				while(true){
HXLINE( 778)					i = (i - 1);
HXDLIN( 778)					if (!(((i + 1) > 0))) {
HXLINE( 778)						goto _hx_goto_1208;
            					}
HXLINE( 780)					 ::flixel::input::actions::FlxActionInput input = action->inputs->__get(i).StaticCast<  ::flixel::input::actions::FlxActionInput >();
HXLINE( 781)					bool _hx_tmp;
HXDLIN( 781)					if (::hx::IsPointerEq( input->device,::flixel::input::actions::FlxInputDevice_obj::GAMEPAD_dyn() )) {
HXLINE( 781)						if ((deviceID != -1)) {
HXLINE( 781)							_hx_tmp = (input->deviceID == deviceID);
            						}
            						else {
HXLINE( 781)							_hx_tmp = true;
            						}
            					}
            					else {
HXLINE( 781)						_hx_tmp = false;
            					}
HXDLIN( 781)					if (_hx_tmp) {
HXLINE( 782)						action->remove(input,null());
            					}
            				}
            				_hx_goto_1208:;
            			}
            		}
HXLINE( 786)		this->gamepadsAdded->remove(deviceID);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Controls_obj,removeGamepad,(void))

void Controls_obj::addDefaultGamepad(int id){
            	HX_GC_STACKFRAME(&_hx_pos_948b5caa279cd923_792_addDefaultGamepad)
HXDLIN( 792)		 ::haxe::ds::EnumValueMap _g =  ::haxe::ds::EnumValueMap_obj::__alloc( HX_CTX );
HXDLIN( 792)		_g->set(::Control_obj::ACCEPT_dyn(),::Array_obj< int >::fromData( _hx_array_data_116e4296_1240,2));
HXDLIN( 792)		_g->set(::Control_obj::BACK_dyn(),::Array_obj< int >::fromData( _hx_array_data_116e4296_1241,1));
HXDLIN( 792)		_g->set(::Control_obj::UI_UP_dyn(),::Array_obj< int >::fromData( _hx_array_data_116e4296_1242,2));
HXDLIN( 792)		_g->set(::Control_obj::UI_DOWN_dyn(),::Array_obj< int >::fromData( _hx_array_data_116e4296_1243,2));
HXDLIN( 792)		_g->set(::Control_obj::UI_LEFT_dyn(),::Array_obj< int >::fromData( _hx_array_data_116e4296_1244,2));
HXDLIN( 792)		_g->set(::Control_obj::UI_RIGHT_dyn(),::Array_obj< int >::fromData( _hx_array_data_116e4296_1245,2));
HXDLIN( 792)		_g->set(::Control_obj::NOTE_UP_dyn(),::Array_obj< int >::fromData( _hx_array_data_116e4296_1246,4));
HXDLIN( 792)		_g->set(::Control_obj::NOTE_DOWN_dyn(),::Array_obj< int >::fromData( _hx_array_data_116e4296_1247,4));
HXDLIN( 792)		_g->set(::Control_obj::NOTE_LEFT_dyn(),::Array_obj< int >::fromData( _hx_array_data_116e4296_1248,4));
HXDLIN( 792)		_g->set(::Control_obj::NOTE_RIGHT_dyn(),::Array_obj< int >::fromData( _hx_array_data_116e4296_1249,4));
HXDLIN( 792)		_g->set(::Control_obj::PAUSE_dyn(),::Array_obj< int >::fromData( _hx_array_data_116e4296_1250,1));
HXDLIN( 792)		_g->set(::Control_obj::RESET_dyn(),::Array_obj< int >::fromData( _hx_array_data_116e4296_1251,1));
HXDLIN( 792)		this->gamepadsAdded->push(id);
HXDLIN( 792)		{
HXDLIN( 792)			::Dynamic map = _g;
HXDLIN( 792)			::Dynamic _g_map = map;
HXDLIN( 792)			 ::Dynamic _g_keys = ::haxe::IMap_obj::keys(map);
HXDLIN( 792)			while(( (bool)(_g_keys->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXDLIN( 792)				 ::Control key = _g_keys->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)();
HXDLIN( 792)				::Array< int > _g_value = ( (::Array< int >)(::haxe::IMap_obj::get(_g_map,key)) );
HXDLIN( 792)				 ::Control _g_key = key;
HXDLIN( 792)				 ::Control control = _g_key;
HXDLIN( 792)				::Array< int > buttons = _g_value;
HXDLIN( 792)				{
HXDLIN( 792)					int id1 = id;
HXDLIN( 792)					::Array< int > buttons1 = buttons;
HXDLIN( 792)					switch((int)(control->_hx_getIndex())){
            						case (int)0: {
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action = this->_ui_up;
HXDLIN( 792)								int state = 1;
HXDLIN( 792)								int _g1 = 0;
HXDLIN( 792)								while((_g1 < buttons1->length)){
HXDLIN( 792)									int button = buttons1->__get(_g1);
HXDLIN( 792)									_g1 = (_g1 + 1);
HXDLIN( 792)									action->addGamepad(button,state,id1);
            								}
            							}
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action1 = this->_ui_upP;
HXDLIN( 792)								int state1 = 2;
HXDLIN( 792)								int _g2 = 0;
HXDLIN( 792)								while((_g2 < buttons1->length)){
HXDLIN( 792)									int button1 = buttons1->__get(_g2);
HXDLIN( 792)									_g2 = (_g2 + 1);
HXDLIN( 792)									action1->addGamepad(button1,state1,id1);
            								}
            							}
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action2 = this->_ui_upR;
HXDLIN( 792)								int state2 = -1;
HXDLIN( 792)								int _g3 = 0;
HXDLIN( 792)								while((_g3 < buttons1->length)){
HXDLIN( 792)									int button2 = buttons1->__get(_g3);
HXDLIN( 792)									_g3 = (_g3 + 1);
HXDLIN( 792)									action2->addGamepad(button2,state2,id1);
            								}
            							}
            						}
            						break;
            						case (int)1: {
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action3 = this->_ui_left;
HXDLIN( 792)								int state3 = 1;
HXDLIN( 792)								int _g4 = 0;
HXDLIN( 792)								while((_g4 < buttons1->length)){
HXDLIN( 792)									int button3 = buttons1->__get(_g4);
HXDLIN( 792)									_g4 = (_g4 + 1);
HXDLIN( 792)									action3->addGamepad(button3,state3,id1);
            								}
            							}
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action4 = this->_ui_leftP;
HXDLIN( 792)								int state4 = 2;
HXDLIN( 792)								int _g5 = 0;
HXDLIN( 792)								while((_g5 < buttons1->length)){
HXDLIN( 792)									int button4 = buttons1->__get(_g5);
HXDLIN( 792)									_g5 = (_g5 + 1);
HXDLIN( 792)									action4->addGamepad(button4,state4,id1);
            								}
            							}
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action5 = this->_ui_leftR;
HXDLIN( 792)								int state5 = -1;
HXDLIN( 792)								int _g6 = 0;
HXDLIN( 792)								while((_g6 < buttons1->length)){
HXDLIN( 792)									int button5 = buttons1->__get(_g6);
HXDLIN( 792)									_g6 = (_g6 + 1);
HXDLIN( 792)									action5->addGamepad(button5,state5,id1);
            								}
            							}
            						}
            						break;
            						case (int)2: {
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action6 = this->_ui_right;
HXDLIN( 792)								int state6 = 1;
HXDLIN( 792)								int _g7 = 0;
HXDLIN( 792)								while((_g7 < buttons1->length)){
HXDLIN( 792)									int button6 = buttons1->__get(_g7);
HXDLIN( 792)									_g7 = (_g7 + 1);
HXDLIN( 792)									action6->addGamepad(button6,state6,id1);
            								}
            							}
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action7 = this->_ui_rightP;
HXDLIN( 792)								int state7 = 2;
HXDLIN( 792)								int _g8 = 0;
HXDLIN( 792)								while((_g8 < buttons1->length)){
HXDLIN( 792)									int button7 = buttons1->__get(_g8);
HXDLIN( 792)									_g8 = (_g8 + 1);
HXDLIN( 792)									action7->addGamepad(button7,state7,id1);
            								}
            							}
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action8 = this->_ui_rightR;
HXDLIN( 792)								int state8 = -1;
HXDLIN( 792)								int _g9 = 0;
HXDLIN( 792)								while((_g9 < buttons1->length)){
HXDLIN( 792)									int button8 = buttons1->__get(_g9);
HXDLIN( 792)									_g9 = (_g9 + 1);
HXDLIN( 792)									action8->addGamepad(button8,state8,id1);
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action9 = this->_ui_down;
HXDLIN( 792)								int state9 = 1;
HXDLIN( 792)								int _g10 = 0;
HXDLIN( 792)								while((_g10 < buttons1->length)){
HXDLIN( 792)									int button9 = buttons1->__get(_g10);
HXDLIN( 792)									_g10 = (_g10 + 1);
HXDLIN( 792)									action9->addGamepad(button9,state9,id1);
            								}
            							}
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action10 = this->_ui_downP;
HXDLIN( 792)								int state10 = 2;
HXDLIN( 792)								int _g11 = 0;
HXDLIN( 792)								while((_g11 < buttons1->length)){
HXDLIN( 792)									int button10 = buttons1->__get(_g11);
HXDLIN( 792)									_g11 = (_g11 + 1);
HXDLIN( 792)									action10->addGamepad(button10,state10,id1);
            								}
            							}
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action11 = this->_ui_downR;
HXDLIN( 792)								int state11 = -1;
HXDLIN( 792)								int _g12 = 0;
HXDLIN( 792)								while((_g12 < buttons1->length)){
HXDLIN( 792)									int button11 = buttons1->__get(_g12);
HXDLIN( 792)									_g12 = (_g12 + 1);
HXDLIN( 792)									action11->addGamepad(button11,state11,id1);
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action12 = this->_note_up;
HXDLIN( 792)								int state12 = 1;
HXDLIN( 792)								int _g13 = 0;
HXDLIN( 792)								while((_g13 < buttons1->length)){
HXDLIN( 792)									int button12 = buttons1->__get(_g13);
HXDLIN( 792)									_g13 = (_g13 + 1);
HXDLIN( 792)									action12->addGamepad(button12,state12,id1);
            								}
            							}
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action13 = this->_note_upP;
HXDLIN( 792)								int state13 = 2;
HXDLIN( 792)								int _g14 = 0;
HXDLIN( 792)								while((_g14 < buttons1->length)){
HXDLIN( 792)									int button13 = buttons1->__get(_g14);
HXDLIN( 792)									_g14 = (_g14 + 1);
HXDLIN( 792)									action13->addGamepad(button13,state13,id1);
            								}
            							}
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action14 = this->_note_upR;
HXDLIN( 792)								int state14 = -1;
HXDLIN( 792)								int _g15 = 0;
HXDLIN( 792)								while((_g15 < buttons1->length)){
HXDLIN( 792)									int button14 = buttons1->__get(_g15);
HXDLIN( 792)									_g15 = (_g15 + 1);
HXDLIN( 792)									action14->addGamepad(button14,state14,id1);
            								}
            							}
            						}
            						break;
            						case (int)5: {
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action15 = this->_note_left;
HXDLIN( 792)								int state15 = 1;
HXDLIN( 792)								int _g16 = 0;
HXDLIN( 792)								while((_g16 < buttons1->length)){
HXDLIN( 792)									int button15 = buttons1->__get(_g16);
HXDLIN( 792)									_g16 = (_g16 + 1);
HXDLIN( 792)									action15->addGamepad(button15,state15,id1);
            								}
            							}
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action16 = this->_note_leftP;
HXDLIN( 792)								int state16 = 2;
HXDLIN( 792)								int _g17 = 0;
HXDLIN( 792)								while((_g17 < buttons1->length)){
HXDLIN( 792)									int button16 = buttons1->__get(_g17);
HXDLIN( 792)									_g17 = (_g17 + 1);
HXDLIN( 792)									action16->addGamepad(button16,state16,id1);
            								}
            							}
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action17 = this->_note_leftR;
HXDLIN( 792)								int state17 = -1;
HXDLIN( 792)								int _g18 = 0;
HXDLIN( 792)								while((_g18 < buttons1->length)){
HXDLIN( 792)									int button17 = buttons1->__get(_g18);
HXDLIN( 792)									_g18 = (_g18 + 1);
HXDLIN( 792)									action17->addGamepad(button17,state17,id1);
            								}
            							}
            						}
            						break;
            						case (int)6: {
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action18 = this->_note_right;
HXDLIN( 792)								int state18 = 1;
HXDLIN( 792)								int _g19 = 0;
HXDLIN( 792)								while((_g19 < buttons1->length)){
HXDLIN( 792)									int button18 = buttons1->__get(_g19);
HXDLIN( 792)									_g19 = (_g19 + 1);
HXDLIN( 792)									action18->addGamepad(button18,state18,id1);
            								}
            							}
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action19 = this->_note_rightP;
HXDLIN( 792)								int state19 = 2;
HXDLIN( 792)								int _g20 = 0;
HXDLIN( 792)								while((_g20 < buttons1->length)){
HXDLIN( 792)									int button19 = buttons1->__get(_g20);
HXDLIN( 792)									_g20 = (_g20 + 1);
HXDLIN( 792)									action19->addGamepad(button19,state19,id1);
            								}
            							}
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action20 = this->_note_rightR;
HXDLIN( 792)								int state20 = -1;
HXDLIN( 792)								int _g21 = 0;
HXDLIN( 792)								while((_g21 < buttons1->length)){
HXDLIN( 792)									int button20 = buttons1->__get(_g21);
HXDLIN( 792)									_g21 = (_g21 + 1);
HXDLIN( 792)									action20->addGamepad(button20,state20,id1);
            								}
            							}
            						}
            						break;
            						case (int)7: {
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action21 = this->_note_down;
HXDLIN( 792)								int state21 = 1;
HXDLIN( 792)								int _g22 = 0;
HXDLIN( 792)								while((_g22 < buttons1->length)){
HXDLIN( 792)									int button21 = buttons1->__get(_g22);
HXDLIN( 792)									_g22 = (_g22 + 1);
HXDLIN( 792)									action21->addGamepad(button21,state21,id1);
            								}
            							}
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action22 = this->_note_downP;
HXDLIN( 792)								int state22 = 2;
HXDLIN( 792)								int _g23 = 0;
HXDLIN( 792)								while((_g23 < buttons1->length)){
HXDLIN( 792)									int button22 = buttons1->__get(_g23);
HXDLIN( 792)									_g23 = (_g23 + 1);
HXDLIN( 792)									action22->addGamepad(button22,state22,id1);
            								}
            							}
HXDLIN( 792)							{
HXDLIN( 792)								 ::flixel::input::actions::FlxActionDigital action23 = this->_note_downR;
HXDLIN( 792)								int state23 = -1;
HXDLIN( 792)								int _g24 = 0;
HXDLIN( 792)								while((_g24 < buttons1->length)){
HXDLIN( 792)									int button23 = buttons1->__get(_g24);
HXDLIN( 792)									_g24 = (_g24 + 1);
HXDLIN( 792)									action23->addGamepad(button23,state23,id1);
            								}
            							}
            						}
            						break;
            						case (int)8: {
HXDLIN( 792)							 ::flixel::input::actions::FlxActionDigital action24 = this->_reset;
HXDLIN( 792)							int state24 = 2;
HXDLIN( 792)							int _g25 = 0;
HXDLIN( 792)							while((_g25 < buttons1->length)){
HXDLIN( 792)								int button24 = buttons1->__get(_g25);
HXDLIN( 792)								_g25 = (_g25 + 1);
HXDLIN( 792)								action24->addGamepad(button24,state24,id1);
            							}
            						}
            						break;
            						case (int)9: {
HXDLIN( 792)							 ::flixel::input::actions::FlxActionDigital action25 = this->_accept;
HXDLIN( 792)							int state25 = 2;
HXDLIN( 792)							int _g26 = 0;
HXDLIN( 792)							while((_g26 < buttons1->length)){
HXDLIN( 792)								int button25 = buttons1->__get(_g26);
HXDLIN( 792)								_g26 = (_g26 + 1);
HXDLIN( 792)								action25->addGamepad(button25,state25,id1);
            							}
            						}
            						break;
            						case (int)10: {
HXDLIN( 792)							 ::flixel::input::actions::FlxActionDigital action26 = this->_back;
HXDLIN( 792)							int state26 = 2;
HXDLIN( 792)							int _g27 = 0;
HXDLIN( 792)							while((_g27 < buttons1->length)){
HXDLIN( 792)								int button26 = buttons1->__get(_g27);
HXDLIN( 792)								_g27 = (_g27 + 1);
HXDLIN( 792)								action26->addGamepad(button26,state26,id1);
            							}
            						}
            						break;
            						case (int)11: {
HXDLIN( 792)							 ::flixel::input::actions::FlxActionDigital action27 = this->_pause;
HXDLIN( 792)							int state27 = 2;
HXDLIN( 792)							int _g28 = 0;
HXDLIN( 792)							while((_g28 < buttons1->length)){
HXDLIN( 792)								int button27 = buttons1->__get(_g28);
HXDLIN( 792)								_g28 = (_g28 + 1);
HXDLIN( 792)								action27->addGamepad(button27,state27,id1);
            							}
            						}
            						break;
            					}
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Controls_obj,addDefaultGamepad,(void))

void Controls_obj::bindButtons( ::Control control,int id,::Array< int > buttons){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_832_bindButtons)
HXDLIN( 832)		switch((int)(control->_hx_getIndex())){
            			case (int)0: {
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action = this->_ui_up;
HXDLIN( 832)					int state = 1;
HXDLIN( 832)					int _g = 0;
HXDLIN( 832)					while((_g < buttons->length)){
HXDLIN( 832)						int button = buttons->__get(_g);
HXDLIN( 832)						_g = (_g + 1);
HXDLIN( 832)						action->addGamepad(button,state,id);
            					}
            				}
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action1 = this->_ui_upP;
HXDLIN( 832)					int state1 = 2;
HXDLIN( 832)					int _g1 = 0;
HXDLIN( 832)					while((_g1 < buttons->length)){
HXDLIN( 832)						int button1 = buttons->__get(_g1);
HXDLIN( 832)						_g1 = (_g1 + 1);
HXDLIN( 832)						action1->addGamepad(button1,state1,id);
            					}
            				}
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action2 = this->_ui_upR;
HXDLIN( 832)					int state2 = -1;
HXDLIN( 832)					int _g2 = 0;
HXDLIN( 832)					while((_g2 < buttons->length)){
HXDLIN( 832)						int button2 = buttons->__get(_g2);
HXDLIN( 832)						_g2 = (_g2 + 1);
HXDLIN( 832)						action2->addGamepad(button2,state2,id);
            					}
            				}
            			}
            			break;
            			case (int)1: {
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action3 = this->_ui_left;
HXDLIN( 832)					int state3 = 1;
HXDLIN( 832)					int _g3 = 0;
HXDLIN( 832)					while((_g3 < buttons->length)){
HXDLIN( 832)						int button3 = buttons->__get(_g3);
HXDLIN( 832)						_g3 = (_g3 + 1);
HXDLIN( 832)						action3->addGamepad(button3,state3,id);
            					}
            				}
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action4 = this->_ui_leftP;
HXDLIN( 832)					int state4 = 2;
HXDLIN( 832)					int _g4 = 0;
HXDLIN( 832)					while((_g4 < buttons->length)){
HXDLIN( 832)						int button4 = buttons->__get(_g4);
HXDLIN( 832)						_g4 = (_g4 + 1);
HXDLIN( 832)						action4->addGamepad(button4,state4,id);
            					}
            				}
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action5 = this->_ui_leftR;
HXDLIN( 832)					int state5 = -1;
HXDLIN( 832)					int _g5 = 0;
HXDLIN( 832)					while((_g5 < buttons->length)){
HXDLIN( 832)						int button5 = buttons->__get(_g5);
HXDLIN( 832)						_g5 = (_g5 + 1);
HXDLIN( 832)						action5->addGamepad(button5,state5,id);
            					}
            				}
            			}
            			break;
            			case (int)2: {
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action6 = this->_ui_right;
HXDLIN( 832)					int state6 = 1;
HXDLIN( 832)					int _g6 = 0;
HXDLIN( 832)					while((_g6 < buttons->length)){
HXDLIN( 832)						int button6 = buttons->__get(_g6);
HXDLIN( 832)						_g6 = (_g6 + 1);
HXDLIN( 832)						action6->addGamepad(button6,state6,id);
            					}
            				}
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action7 = this->_ui_rightP;
HXDLIN( 832)					int state7 = 2;
HXDLIN( 832)					int _g7 = 0;
HXDLIN( 832)					while((_g7 < buttons->length)){
HXDLIN( 832)						int button7 = buttons->__get(_g7);
HXDLIN( 832)						_g7 = (_g7 + 1);
HXDLIN( 832)						action7->addGamepad(button7,state7,id);
            					}
            				}
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action8 = this->_ui_rightR;
HXDLIN( 832)					int state8 = -1;
HXDLIN( 832)					int _g8 = 0;
HXDLIN( 832)					while((_g8 < buttons->length)){
HXDLIN( 832)						int button8 = buttons->__get(_g8);
HXDLIN( 832)						_g8 = (_g8 + 1);
HXDLIN( 832)						action8->addGamepad(button8,state8,id);
            					}
            				}
            			}
            			break;
            			case (int)3: {
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action9 = this->_ui_down;
HXDLIN( 832)					int state9 = 1;
HXDLIN( 832)					int _g9 = 0;
HXDLIN( 832)					while((_g9 < buttons->length)){
HXDLIN( 832)						int button9 = buttons->__get(_g9);
HXDLIN( 832)						_g9 = (_g9 + 1);
HXDLIN( 832)						action9->addGamepad(button9,state9,id);
            					}
            				}
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action10 = this->_ui_downP;
HXDLIN( 832)					int state10 = 2;
HXDLIN( 832)					int _g10 = 0;
HXDLIN( 832)					while((_g10 < buttons->length)){
HXDLIN( 832)						int button10 = buttons->__get(_g10);
HXDLIN( 832)						_g10 = (_g10 + 1);
HXDLIN( 832)						action10->addGamepad(button10,state10,id);
            					}
            				}
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action11 = this->_ui_downR;
HXDLIN( 832)					int state11 = -1;
HXDLIN( 832)					int _g11 = 0;
HXDLIN( 832)					while((_g11 < buttons->length)){
HXDLIN( 832)						int button11 = buttons->__get(_g11);
HXDLIN( 832)						_g11 = (_g11 + 1);
HXDLIN( 832)						action11->addGamepad(button11,state11,id);
            					}
            				}
            			}
            			break;
            			case (int)4: {
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action12 = this->_note_up;
HXDLIN( 832)					int state12 = 1;
HXDLIN( 832)					int _g12 = 0;
HXDLIN( 832)					while((_g12 < buttons->length)){
HXDLIN( 832)						int button12 = buttons->__get(_g12);
HXDLIN( 832)						_g12 = (_g12 + 1);
HXDLIN( 832)						action12->addGamepad(button12,state12,id);
            					}
            				}
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action13 = this->_note_upP;
HXDLIN( 832)					int state13 = 2;
HXDLIN( 832)					int _g13 = 0;
HXDLIN( 832)					while((_g13 < buttons->length)){
HXDLIN( 832)						int button13 = buttons->__get(_g13);
HXDLIN( 832)						_g13 = (_g13 + 1);
HXDLIN( 832)						action13->addGamepad(button13,state13,id);
            					}
            				}
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action14 = this->_note_upR;
HXDLIN( 832)					int state14 = -1;
HXDLIN( 832)					int _g14 = 0;
HXDLIN( 832)					while((_g14 < buttons->length)){
HXDLIN( 832)						int button14 = buttons->__get(_g14);
HXDLIN( 832)						_g14 = (_g14 + 1);
HXDLIN( 832)						action14->addGamepad(button14,state14,id);
            					}
            				}
            			}
            			break;
            			case (int)5: {
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action15 = this->_note_left;
HXDLIN( 832)					int state15 = 1;
HXDLIN( 832)					int _g15 = 0;
HXDLIN( 832)					while((_g15 < buttons->length)){
HXDLIN( 832)						int button15 = buttons->__get(_g15);
HXDLIN( 832)						_g15 = (_g15 + 1);
HXDLIN( 832)						action15->addGamepad(button15,state15,id);
            					}
            				}
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action16 = this->_note_leftP;
HXDLIN( 832)					int state16 = 2;
HXDLIN( 832)					int _g16 = 0;
HXDLIN( 832)					while((_g16 < buttons->length)){
HXDLIN( 832)						int button16 = buttons->__get(_g16);
HXDLIN( 832)						_g16 = (_g16 + 1);
HXDLIN( 832)						action16->addGamepad(button16,state16,id);
            					}
            				}
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action17 = this->_note_leftR;
HXDLIN( 832)					int state17 = -1;
HXDLIN( 832)					int _g17 = 0;
HXDLIN( 832)					while((_g17 < buttons->length)){
HXDLIN( 832)						int button17 = buttons->__get(_g17);
HXDLIN( 832)						_g17 = (_g17 + 1);
HXDLIN( 832)						action17->addGamepad(button17,state17,id);
            					}
            				}
            			}
            			break;
            			case (int)6: {
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action18 = this->_note_right;
HXDLIN( 832)					int state18 = 1;
HXDLIN( 832)					int _g18 = 0;
HXDLIN( 832)					while((_g18 < buttons->length)){
HXDLIN( 832)						int button18 = buttons->__get(_g18);
HXDLIN( 832)						_g18 = (_g18 + 1);
HXDLIN( 832)						action18->addGamepad(button18,state18,id);
            					}
            				}
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action19 = this->_note_rightP;
HXDLIN( 832)					int state19 = 2;
HXDLIN( 832)					int _g19 = 0;
HXDLIN( 832)					while((_g19 < buttons->length)){
HXDLIN( 832)						int button19 = buttons->__get(_g19);
HXDLIN( 832)						_g19 = (_g19 + 1);
HXDLIN( 832)						action19->addGamepad(button19,state19,id);
            					}
            				}
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action20 = this->_note_rightR;
HXDLIN( 832)					int state20 = -1;
HXDLIN( 832)					int _g20 = 0;
HXDLIN( 832)					while((_g20 < buttons->length)){
HXDLIN( 832)						int button20 = buttons->__get(_g20);
HXDLIN( 832)						_g20 = (_g20 + 1);
HXDLIN( 832)						action20->addGamepad(button20,state20,id);
            					}
            				}
            			}
            			break;
            			case (int)7: {
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action21 = this->_note_down;
HXDLIN( 832)					int state21 = 1;
HXDLIN( 832)					int _g21 = 0;
HXDLIN( 832)					while((_g21 < buttons->length)){
HXDLIN( 832)						int button21 = buttons->__get(_g21);
HXDLIN( 832)						_g21 = (_g21 + 1);
HXDLIN( 832)						action21->addGamepad(button21,state21,id);
            					}
            				}
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action22 = this->_note_downP;
HXDLIN( 832)					int state22 = 2;
HXDLIN( 832)					int _g22 = 0;
HXDLIN( 832)					while((_g22 < buttons->length)){
HXDLIN( 832)						int button22 = buttons->__get(_g22);
HXDLIN( 832)						_g22 = (_g22 + 1);
HXDLIN( 832)						action22->addGamepad(button22,state22,id);
            					}
            				}
HXDLIN( 832)				{
HXDLIN( 832)					 ::flixel::input::actions::FlxActionDigital action23 = this->_note_downR;
HXDLIN( 832)					int state23 = -1;
HXDLIN( 832)					int _g23 = 0;
HXDLIN( 832)					while((_g23 < buttons->length)){
HXDLIN( 832)						int button23 = buttons->__get(_g23);
HXDLIN( 832)						_g23 = (_g23 + 1);
HXDLIN( 832)						action23->addGamepad(button23,state23,id);
            					}
            				}
            			}
            			break;
            			case (int)8: {
HXDLIN( 832)				 ::flixel::input::actions::FlxActionDigital action24 = this->_reset;
HXDLIN( 832)				int state24 = 2;
HXDLIN( 832)				int _g24 = 0;
HXDLIN( 832)				while((_g24 < buttons->length)){
HXDLIN( 832)					int button24 = buttons->__get(_g24);
HXDLIN( 832)					_g24 = (_g24 + 1);
HXDLIN( 832)					action24->addGamepad(button24,state24,id);
            				}
            			}
            			break;
            			case (int)9: {
HXDLIN( 832)				 ::flixel::input::actions::FlxActionDigital action25 = this->_accept;
HXDLIN( 832)				int state25 = 2;
HXDLIN( 832)				int _g25 = 0;
HXDLIN( 832)				while((_g25 < buttons->length)){
HXDLIN( 832)					int button25 = buttons->__get(_g25);
HXDLIN( 832)					_g25 = (_g25 + 1);
HXDLIN( 832)					action25->addGamepad(button25,state25,id);
            				}
            			}
            			break;
            			case (int)10: {
HXDLIN( 832)				 ::flixel::input::actions::FlxActionDigital action26 = this->_back;
HXDLIN( 832)				int state26 = 2;
HXDLIN( 832)				int _g26 = 0;
HXDLIN( 832)				while((_g26 < buttons->length)){
HXDLIN( 832)					int button26 = buttons->__get(_g26);
HXDLIN( 832)					_g26 = (_g26 + 1);
HXDLIN( 832)					action26->addGamepad(button26,state26,id);
            				}
            			}
            			break;
            			case (int)11: {
HXDLIN( 832)				 ::flixel::input::actions::FlxActionDigital action27 = this->_pause;
HXDLIN( 832)				int state27 = 2;
HXDLIN( 832)				int _g27 = 0;
HXDLIN( 832)				while((_g27 < buttons->length)){
HXDLIN( 832)					int button27 = buttons->__get(_g27);
HXDLIN( 832)					_g27 = (_g27 + 1);
HXDLIN( 832)					action27->addGamepad(button27,state27,id);
            				}
            			}
            			break;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(Controls_obj,bindButtons,(void))

void Controls_obj::unbindButtons( ::Control control,int gamepadID,::Array< int > buttons){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_845_unbindButtons)
HXDLIN( 845)		switch((int)(control->_hx_getIndex())){
            			case (int)0: {
HXDLIN( 845)				::Controls_obj::removeButtons(this->_ui_up,gamepadID,buttons);
HXDLIN( 845)				::Controls_obj::removeButtons(this->_ui_upP,gamepadID,buttons);
HXDLIN( 845)				::Controls_obj::removeButtons(this->_ui_upR,gamepadID,buttons);
            			}
            			break;
            			case (int)1: {
HXDLIN( 845)				::Controls_obj::removeButtons(this->_ui_left,gamepadID,buttons);
HXDLIN( 845)				::Controls_obj::removeButtons(this->_ui_leftP,gamepadID,buttons);
HXDLIN( 845)				::Controls_obj::removeButtons(this->_ui_leftR,gamepadID,buttons);
            			}
            			break;
            			case (int)2: {
HXDLIN( 845)				::Controls_obj::removeButtons(this->_ui_right,gamepadID,buttons);
HXDLIN( 845)				::Controls_obj::removeButtons(this->_ui_rightP,gamepadID,buttons);
HXDLIN( 845)				::Controls_obj::removeButtons(this->_ui_rightR,gamepadID,buttons);
            			}
            			break;
            			case (int)3: {
HXDLIN( 845)				::Controls_obj::removeButtons(this->_ui_down,gamepadID,buttons);
HXDLIN( 845)				::Controls_obj::removeButtons(this->_ui_downP,gamepadID,buttons);
HXDLIN( 845)				::Controls_obj::removeButtons(this->_ui_downR,gamepadID,buttons);
            			}
            			break;
            			case (int)4: {
HXDLIN( 845)				::Controls_obj::removeButtons(this->_note_up,gamepadID,buttons);
HXDLIN( 845)				::Controls_obj::removeButtons(this->_note_upP,gamepadID,buttons);
HXDLIN( 845)				::Controls_obj::removeButtons(this->_note_upR,gamepadID,buttons);
            			}
            			break;
            			case (int)5: {
HXDLIN( 845)				::Controls_obj::removeButtons(this->_note_left,gamepadID,buttons);
HXDLIN( 845)				::Controls_obj::removeButtons(this->_note_leftP,gamepadID,buttons);
HXDLIN( 845)				::Controls_obj::removeButtons(this->_note_leftR,gamepadID,buttons);
            			}
            			break;
            			case (int)6: {
HXDLIN( 845)				::Controls_obj::removeButtons(this->_note_right,gamepadID,buttons);
HXDLIN( 845)				::Controls_obj::removeButtons(this->_note_rightP,gamepadID,buttons);
HXDLIN( 845)				::Controls_obj::removeButtons(this->_note_rightR,gamepadID,buttons);
            			}
            			break;
            			case (int)7: {
HXDLIN( 845)				::Controls_obj::removeButtons(this->_note_down,gamepadID,buttons);
HXDLIN( 845)				::Controls_obj::removeButtons(this->_note_downP,gamepadID,buttons);
HXDLIN( 845)				::Controls_obj::removeButtons(this->_note_downR,gamepadID,buttons);
            			}
            			break;
            			case (int)8: {
HXDLIN( 845)				::Controls_obj::removeButtons(this->_reset,gamepadID,buttons);
            			}
            			break;
            			case (int)9: {
HXDLIN( 845)				::Controls_obj::removeButtons(this->_accept,gamepadID,buttons);
            			}
            			break;
            			case (int)10: {
HXDLIN( 845)				::Controls_obj::removeButtons(this->_back,gamepadID,buttons);
            			}
            			break;
            			case (int)11: {
HXDLIN( 845)				::Controls_obj::removeButtons(this->_pause,gamepadID,buttons);
            			}
            			break;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(Controls_obj,unbindButtons,(void))

::Array< int > Controls_obj::getInputsFor( ::Control control, ::Device device,::Array< int > list){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_869_getInputsFor)
HXLINE( 870)		if (::hx::IsNull( list )) {
HXLINE( 871)			list = ::Array_obj< int >::__new(0);
            		}
HXLINE( 873)		switch((int)(device->_hx_getIndex())){
            			case (int)0: {
HXLINE( 876)				int _g = 0;
HXDLIN( 876)				::Array< ::Dynamic> _g1 = this->getActionFromControl(control)->inputs;
HXDLIN( 876)				while((_g < _g1->length)){
HXLINE( 876)					 ::flixel::input::actions::FlxActionInput input = _g1->__get(_g).StaticCast<  ::flixel::input::actions::FlxActionInput >();
HXDLIN( 876)					_g = (_g + 1);
HXLINE( 878)					if (::hx::IsPointerEq( input->device,::flixel::input::actions::FlxInputDevice_obj::KEYBOARD_dyn() )) {
HXLINE( 879)						list->push(input->inputID);
            					}
            				}
            			}
            			break;
            			case (int)1: {
HXLINE( 881)				int id = device->_hx_getInt(0);
HXLINE( 882)				{
HXLINE( 882)					int _g2 = 0;
HXDLIN( 882)					::Array< ::Dynamic> _g3 = this->getActionFromControl(control)->inputs;
HXDLIN( 882)					while((_g2 < _g3->length)){
HXLINE( 882)						 ::flixel::input::actions::FlxActionInput input1 = _g3->__get(_g2).StaticCast<  ::flixel::input::actions::FlxActionInput >();
HXDLIN( 882)						_g2 = (_g2 + 1);
HXLINE( 884)						if ((input1->deviceID == id)) {
HXLINE( 885)							list->push(input1->inputID);
            						}
            					}
            				}
            			}
            			break;
            		}
HXLINE( 888)		return list;
            	}


HX_DEFINE_DYNAMIC_FUNC3(Controls_obj,getInputsFor,return )

void Controls_obj::removeDevice( ::Device device){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_893_removeDevice)
HXDLIN( 893)		switch((int)(device->_hx_getIndex())){
            			case (int)0: {
HXLINE( 896)				this->setKeyboardScheme(::KeyboardScheme_obj::None_dyn(),null());
            			}
            			break;
            			case (int)1: {
HXLINE( 897)				int id = device->_hx_getInt(0);
HXLINE( 898)				this->removeGamepad(id);
            			}
            			break;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Controls_obj,removeDevice,(void))

void Controls_obj::init(){
            	HX_GC_STACKFRAME(&_hx_pos_948b5caa279cd923_433_init)
HXLINE( 434)		 ::flixel::input::actions::FlxActionManager actions =  ::flixel::input::actions::FlxActionManager_obj::__alloc( HX_CTX );
HXLINE( 435)		::flixel::FlxG_obj::inputs->add_flixel_input_actions_FlxActionManager(actions);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Controls_obj,init,(void))

void Controls_obj::addKeys( ::flixel::input::actions::FlxActionDigital action,::Array< int > keys,int state){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_615_addKeys)
HXDLIN( 615)		int _g = 0;
HXDLIN( 615)		while((_g < keys->length)){
HXDLIN( 615)			int key = keys->__get(_g);
HXDLIN( 615)			_g = (_g + 1);
HXLINE( 616)			if ((key != -1)) {
HXLINE( 617)				action->addKey(key,state);
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Controls_obj,addKeys,(void))

void Controls_obj::removeKeys( ::flixel::input::actions::FlxActionDigital action,::Array< int > keys){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_621_removeKeys)
HXLINE( 622)		int i = action->inputs->length;
HXLINE( 623)		while(true){
HXLINE( 623)			i = (i - 1);
HXDLIN( 623)			if (!(((i + 1) > 0))) {
HXLINE( 623)				goto _hx_goto_1289;
            			}
HXLINE( 625)			 ::flixel::input::actions::FlxActionInput input = action->inputs->__get(i).StaticCast<  ::flixel::input::actions::FlxActionInput >();
HXLINE( 626)			bool _hx_tmp;
HXDLIN( 626)			if (::hx::IsPointerEq( input->device,::flixel::input::actions::FlxInputDevice_obj::KEYBOARD_dyn() )) {
HXLINE( 626)				_hx_tmp = (keys->indexOf(input->inputID,null()) != -1);
            			}
            			else {
HXLINE( 626)				_hx_tmp = false;
            			}
HXDLIN( 626)			if (_hx_tmp) {
HXLINE( 627)				action->remove(input,null());
            			}
            		}
            		_hx_goto_1289:;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Controls_obj,removeKeys,(void))

void Controls_obj::addButtons( ::flixel::input::actions::FlxActionDigital action,::Array< int > buttons,int state,int id){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_853_addButtons)
HXDLIN( 853)		int _g = 0;
HXDLIN( 853)		while((_g < buttons->length)){
HXDLIN( 853)			int button = buttons->__get(_g);
HXDLIN( 853)			_g = (_g + 1);
HXLINE( 854)			action->addGamepad(button,state,id);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Controls_obj,addButtons,(void))

void Controls_obj::removeButtons( ::flixel::input::actions::FlxActionDigital action,int gamepadID,::Array< int > buttons){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_858_removeButtons)
HXLINE( 859)		int i = action->inputs->length;
HXLINE( 860)		while(true){
HXLINE( 860)			i = (i - 1);
HXDLIN( 860)			if (!(((i + 1) > 0))) {
HXLINE( 860)				goto _hx_goto_1293;
            			}
HXLINE( 862)			 ::flixel::input::actions::FlxActionInput input = action->inputs->__get(i).StaticCast<  ::flixel::input::actions::FlxActionInput >();
HXLINE( 863)			bool _hx_tmp;
HXDLIN( 863)			bool _hx_tmp1;
HXDLIN( 863)			if (::hx::IsPointerEq( input->device,::flixel::input::actions::FlxInputDevice_obj::GAMEPAD_dyn() )) {
HXLINE( 863)				if ((gamepadID != -1)) {
HXLINE( 863)					_hx_tmp1 = (input->deviceID == gamepadID);
            				}
            				else {
HXLINE( 863)					_hx_tmp1 = true;
            				}
            			}
            			else {
HXLINE( 863)				_hx_tmp1 = false;
            			}
HXDLIN( 863)			if (_hx_tmp1) {
HXLINE( 863)				_hx_tmp = (buttons->indexOf(input->inputID,null()) != -1);
            			}
            			else {
HXLINE( 863)				_hx_tmp = false;
            			}
HXDLIN( 863)			if (_hx_tmp) {
HXLINE( 864)				action->remove(input,null());
            			}
            		}
            		_hx_goto_1293:;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Controls_obj,removeButtons,(void))

bool Controls_obj::isDevice( ::flixel::input::actions::FlxActionInput input, ::Device device){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_904_isDevice)
HXDLIN( 904)		switch((int)(device->_hx_getIndex())){
            			case (int)0: {
HXLINE( 906)				return ::hx::IsPointerEq( input->device,::flixel::input::actions::FlxInputDevice_obj::KEYBOARD_dyn() );
            			}
            			break;
            			case (int)1: {
HXLINE( 907)				int id = device->_hx_getInt(0);
HXDLIN( 907)				if (::hx::IsPointerEq( input->device,::flixel::input::actions::FlxInputDevice_obj::GAMEPAD_dyn() )) {
HXLINE( 907)					if ((id != -1)) {
HXLINE( 907)						return (input->deviceID == id);
            					}
            					else {
HXLINE( 907)						return true;
            					}
            				}
            				else {
HXLINE( 907)					return false;
            				}
            			}
            			break;
            		}
HXLINE( 904)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Controls_obj,isDevice,return )

bool Controls_obj::isGamepad( ::flixel::input::actions::FlxActionInput input,int deviceID){
            	HX_STACKFRAME(&_hx_pos_948b5caa279cd923_913_isGamepad)
HXDLIN( 913)		if (::hx::IsPointerEq( input->device,::flixel::input::actions::FlxInputDevice_obj::GAMEPAD_dyn() )) {
HXDLIN( 913)			if ((deviceID != -1)) {
HXDLIN( 913)				return (input->deviceID == deviceID);
            			}
            			else {
HXDLIN( 913)				return true;
            			}
            		}
            		else {
HXDLIN( 913)			return false;
            		}
HXDLIN( 913)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Controls_obj,isGamepad,return )


::hx::ObjectPtr< Controls_obj > Controls_obj::__new(::String name, ::KeyboardScheme __o_scheme) {
	::hx::ObjectPtr< Controls_obj > __this = new Controls_obj();
	__this->__construct(name,__o_scheme);
	return __this;
}

::hx::ObjectPtr< Controls_obj > Controls_obj::__alloc(::hx::Ctx *_hx_ctx,::String name, ::KeyboardScheme __o_scheme) {
	Controls_obj *__this = (Controls_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Controls_obj), true, "Controls"));
	*(void **)__this = Controls_obj::_hx_vtable;
	__this->__construct(name,__o_scheme);
	return __this;
}

Controls_obj::Controls_obj()
{
}

void Controls_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Controls);
	HX_MARK_MEMBER_NAME(_ui_up,"_ui_up");
	HX_MARK_MEMBER_NAME(_ui_left,"_ui_left");
	HX_MARK_MEMBER_NAME(_ui_right,"_ui_right");
	HX_MARK_MEMBER_NAME(_ui_down,"_ui_down");
	HX_MARK_MEMBER_NAME(_ui_upP,"_ui_upP");
	HX_MARK_MEMBER_NAME(_ui_leftP,"_ui_leftP");
	HX_MARK_MEMBER_NAME(_ui_rightP,"_ui_rightP");
	HX_MARK_MEMBER_NAME(_ui_downP,"_ui_downP");
	HX_MARK_MEMBER_NAME(_ui_upR,"_ui_upR");
	HX_MARK_MEMBER_NAME(_ui_leftR,"_ui_leftR");
	HX_MARK_MEMBER_NAME(_ui_rightR,"_ui_rightR");
	HX_MARK_MEMBER_NAME(_ui_downR,"_ui_downR");
	HX_MARK_MEMBER_NAME(_note_up,"_note_up");
	HX_MARK_MEMBER_NAME(_note_left,"_note_left");
	HX_MARK_MEMBER_NAME(_note_right,"_note_right");
	HX_MARK_MEMBER_NAME(_note_down,"_note_down");
	HX_MARK_MEMBER_NAME(_note_upP,"_note_upP");
	HX_MARK_MEMBER_NAME(_note_leftP,"_note_leftP");
	HX_MARK_MEMBER_NAME(_note_rightP,"_note_rightP");
	HX_MARK_MEMBER_NAME(_note_downP,"_note_downP");
	HX_MARK_MEMBER_NAME(_note_upR,"_note_upR");
	HX_MARK_MEMBER_NAME(_note_leftR,"_note_leftR");
	HX_MARK_MEMBER_NAME(_note_rightR,"_note_rightR");
	HX_MARK_MEMBER_NAME(_note_downR,"_note_downR");
	HX_MARK_MEMBER_NAME(_accept,"_accept");
	HX_MARK_MEMBER_NAME(_back,"_back");
	HX_MARK_MEMBER_NAME(_pause,"_pause");
	HX_MARK_MEMBER_NAME(_reset,"_reset");
	HX_MARK_MEMBER_NAME(byName,"byName");
	HX_MARK_MEMBER_NAME(gamepadsAdded,"gamepadsAdded");
	HX_MARK_MEMBER_NAME(keyboardScheme,"keyboardScheme");
	 ::flixel::input::actions::FlxActionSet_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Controls_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_ui_up,"_ui_up");
	HX_VISIT_MEMBER_NAME(_ui_left,"_ui_left");
	HX_VISIT_MEMBER_NAME(_ui_right,"_ui_right");
	HX_VISIT_MEMBER_NAME(_ui_down,"_ui_down");
	HX_VISIT_MEMBER_NAME(_ui_upP,"_ui_upP");
	HX_VISIT_MEMBER_NAME(_ui_leftP,"_ui_leftP");
	HX_VISIT_MEMBER_NAME(_ui_rightP,"_ui_rightP");
	HX_VISIT_MEMBER_NAME(_ui_downP,"_ui_downP");
	HX_VISIT_MEMBER_NAME(_ui_upR,"_ui_upR");
	HX_VISIT_MEMBER_NAME(_ui_leftR,"_ui_leftR");
	HX_VISIT_MEMBER_NAME(_ui_rightR,"_ui_rightR");
	HX_VISIT_MEMBER_NAME(_ui_downR,"_ui_downR");
	HX_VISIT_MEMBER_NAME(_note_up,"_note_up");
	HX_VISIT_MEMBER_NAME(_note_left,"_note_left");
	HX_VISIT_MEMBER_NAME(_note_right,"_note_right");
	HX_VISIT_MEMBER_NAME(_note_down,"_note_down");
	HX_VISIT_MEMBER_NAME(_note_upP,"_note_upP");
	HX_VISIT_MEMBER_NAME(_note_leftP,"_note_leftP");
	HX_VISIT_MEMBER_NAME(_note_rightP,"_note_rightP");
	HX_VISIT_MEMBER_NAME(_note_downP,"_note_downP");
	HX_VISIT_MEMBER_NAME(_note_upR,"_note_upR");
	HX_VISIT_MEMBER_NAME(_note_leftR,"_note_leftR");
	HX_VISIT_MEMBER_NAME(_note_rightR,"_note_rightR");
	HX_VISIT_MEMBER_NAME(_note_downR,"_note_downR");
	HX_VISIT_MEMBER_NAME(_accept,"_accept");
	HX_VISIT_MEMBER_NAME(_back,"_back");
	HX_VISIT_MEMBER_NAME(_pause,"_pause");
	HX_VISIT_MEMBER_NAME(_reset,"_reset");
	HX_VISIT_MEMBER_NAME(byName,"byName");
	HX_VISIT_MEMBER_NAME(gamepadsAdded,"gamepadsAdded");
	HX_VISIT_MEMBER_NAME(keyboardScheme,"keyboardScheme");
	 ::flixel::input::actions::FlxActionSet_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val Controls_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"BACK") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_BACK() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"_back") ) { return ::hx::Val( _back ); }
		if (HX_FIELD_EQ(inName,"UI_UP") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_UI_UP() ); }
		if (HX_FIELD_EQ(inName,"PAUSE") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_PAUSE() ); }
		if (HX_FIELD_EQ(inName,"RESET") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_RESET() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"_ui_up") ) { return ::hx::Val( _ui_up ); }
		if (HX_FIELD_EQ(inName,"_pause") ) { return ::hx::Val( _pause ); }
		if (HX_FIELD_EQ(inName,"_reset") ) { return ::hx::Val( _reset ); }
		if (HX_FIELD_EQ(inName,"byName") ) { return ::hx::Val( byName ); }
		if (HX_FIELD_EQ(inName,"ACCEPT") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_ACCEPT() ); }
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		if (HX_FIELD_EQ(inName,"copyTo") ) { return ::hx::Val( copyTo_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"_ui_upP") ) { return ::hx::Val( _ui_upP ); }
		if (HX_FIELD_EQ(inName,"_ui_upR") ) { return ::hx::Val( _ui_upR ); }
		if (HX_FIELD_EQ(inName,"_accept") ) { return ::hx::Val( _accept ); }
		if (HX_FIELD_EQ(inName,"UI_LEFT") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_UI_LEFT() ); }
		if (HX_FIELD_EQ(inName,"UI_DOWN") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_UI_DOWN() ); }
		if (HX_FIELD_EQ(inName,"UI_UP_P") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_UI_UP_P() ); }
		if (HX_FIELD_EQ(inName,"UI_UP_R") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_UI_UP_R() ); }
		if (HX_FIELD_EQ(inName,"NOTE_UP") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_NOTE_UP() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"_ui_left") ) { return ::hx::Val( _ui_left ); }
		if (HX_FIELD_EQ(inName,"_ui_down") ) { return ::hx::Val( _ui_down ); }
		if (HX_FIELD_EQ(inName,"_note_up") ) { return ::hx::Val( _note_up ); }
		if (HX_FIELD_EQ(inName,"UI_RIGHT") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_UI_RIGHT() ); }
		if (HX_FIELD_EQ(inName,"get_BACK") ) { return ::hx::Val( get_BACK_dyn() ); }
		if (HX_FIELD_EQ(inName,"copyFrom") ) { return ::hx::Val( copyFrom_dyn() ); }
		if (HX_FIELD_EQ(inName,"bindKeys") ) { return ::hx::Val( bindKeys_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_ui_right") ) { return ::hx::Val( _ui_right ); }
		if (HX_FIELD_EQ(inName,"_ui_leftP") ) { return ::hx::Val( _ui_leftP ); }
		if (HX_FIELD_EQ(inName,"_ui_downP") ) { return ::hx::Val( _ui_downP ); }
		if (HX_FIELD_EQ(inName,"_ui_leftR") ) { return ::hx::Val( _ui_leftR ); }
		if (HX_FIELD_EQ(inName,"_ui_downR") ) { return ::hx::Val( _ui_downR ); }
		if (HX_FIELD_EQ(inName,"_note_upP") ) { return ::hx::Val( _note_upP ); }
		if (HX_FIELD_EQ(inName,"_note_upR") ) { return ::hx::Val( _note_upR ); }
		if (HX_FIELD_EQ(inName,"get_UI_UP") ) { return ::hx::Val( get_UI_UP_dyn() ); }
		if (HX_FIELD_EQ(inName,"UI_LEFT_P") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_UI_LEFT_P() ); }
		if (HX_FIELD_EQ(inName,"UI_DOWN_P") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_UI_DOWN_P() ); }
		if (HX_FIELD_EQ(inName,"UI_LEFT_R") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_UI_LEFT_R() ); }
		if (HX_FIELD_EQ(inName,"UI_DOWN_R") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_UI_DOWN_R() ); }
		if (HX_FIELD_EQ(inName,"NOTE_LEFT") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_NOTE_LEFT() ); }
		if (HX_FIELD_EQ(inName,"NOTE_DOWN") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_NOTE_DOWN() ); }
		if (HX_FIELD_EQ(inName,"NOTE_UP_P") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_NOTE_UP_P() ); }
		if (HX_FIELD_EQ(inName,"NOTE_UP_R") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_NOTE_UP_R() ); }
		if (HX_FIELD_EQ(inName,"get_PAUSE") ) { return ::hx::Val( get_PAUSE_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_RESET") ) { return ::hx::Val( get_RESET_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"_ui_rightP") ) { return ::hx::Val( _ui_rightP ); }
		if (HX_FIELD_EQ(inName,"_ui_rightR") ) { return ::hx::Val( _ui_rightR ); }
		if (HX_FIELD_EQ(inName,"_note_left") ) { return ::hx::Val( _note_left ); }
		if (HX_FIELD_EQ(inName,"_note_down") ) { return ::hx::Val( _note_down ); }
		if (HX_FIELD_EQ(inName,"UI_RIGHT_P") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_UI_RIGHT_P() ); }
		if (HX_FIELD_EQ(inName,"UI_RIGHT_R") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_UI_RIGHT_R() ); }
		if (HX_FIELD_EQ(inName,"NOTE_RIGHT") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_NOTE_RIGHT() ); }
		if (HX_FIELD_EQ(inName,"get_ACCEPT") ) { return ::hx::Val( get_ACCEPT_dyn() ); }
		if (HX_FIELD_EQ(inName,"unbindKeys") ) { return ::hx::Val( unbindKeys_dyn() ); }
		if (HX_FIELD_EQ(inName,"addGamepad") ) { return ::hx::Val( addGamepad_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_note_right") ) { return ::hx::Val( _note_right ); }
		if (HX_FIELD_EQ(inName,"_note_leftP") ) { return ::hx::Val( _note_leftP ); }
		if (HX_FIELD_EQ(inName,"_note_downP") ) { return ::hx::Val( _note_downP ); }
		if (HX_FIELD_EQ(inName,"_note_leftR") ) { return ::hx::Val( _note_leftR ); }
		if (HX_FIELD_EQ(inName,"_note_downR") ) { return ::hx::Val( _note_downR ); }
		if (HX_FIELD_EQ(inName,"get_UI_LEFT") ) { return ::hx::Val( get_UI_LEFT_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_UI_DOWN") ) { return ::hx::Val( get_UI_DOWN_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_UI_UP_P") ) { return ::hx::Val( get_UI_UP_P_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_UI_UP_R") ) { return ::hx::Val( get_UI_UP_R_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NOTE_UP") ) { return ::hx::Val( get_NOTE_UP_dyn() ); }
		if (HX_FIELD_EQ(inName,"NOTE_LEFT_P") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_NOTE_LEFT_P() ); }
		if (HX_FIELD_EQ(inName,"NOTE_DOWN_P") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_NOTE_DOWN_P() ); }
		if (HX_FIELD_EQ(inName,"NOTE_LEFT_R") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_NOTE_LEFT_R() ); }
		if (HX_FIELD_EQ(inName,"NOTE_DOWN_R") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_NOTE_DOWN_R() ); }
		if (HX_FIELD_EQ(inName,"checkByName") ) { return ::hx::Val( checkByName_dyn() ); }
		if (HX_FIELD_EQ(inName,"bindButtons") ) { return ::hx::Val( bindButtons_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"_note_rightP") ) { return ::hx::Val( _note_rightP ); }
		if (HX_FIELD_EQ(inName,"_note_rightR") ) { return ::hx::Val( _note_rightR ); }
		if (HX_FIELD_EQ(inName,"get_UI_RIGHT") ) { return ::hx::Val( get_UI_RIGHT_dyn() ); }
		if (HX_FIELD_EQ(inName,"NOTE_RIGHT_P") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_NOTE_RIGHT_P() ); }
		if (HX_FIELD_EQ(inName,"NOTE_RIGHT_R") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_NOTE_RIGHT_R() ); }
		if (HX_FIELD_EQ(inName,"forEachBound") ) { return ::hx::Val( forEachBound_dyn() ); }
		if (HX_FIELD_EQ(inName,"getInputsFor") ) { return ::hx::Val( getInputsFor_dyn() ); }
		if (HX_FIELD_EQ(inName,"removeDevice") ) { return ::hx::Val( removeDevice_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"gamepadsAdded") ) { return ::hx::Val( gamepadsAdded ); }
		if (HX_FIELD_EQ(inName,"get_UI_LEFT_P") ) { return ::hx::Val( get_UI_LEFT_P_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_UI_DOWN_P") ) { return ::hx::Val( get_UI_DOWN_P_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_UI_LEFT_R") ) { return ::hx::Val( get_UI_LEFT_R_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_UI_DOWN_R") ) { return ::hx::Val( get_UI_DOWN_R_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NOTE_LEFT") ) { return ::hx::Val( get_NOTE_LEFT_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NOTE_DOWN") ) { return ::hx::Val( get_NOTE_DOWN_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NOTE_UP_P") ) { return ::hx::Val( get_NOTE_UP_P_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NOTE_UP_R") ) { return ::hx::Val( get_NOTE_UP_R_dyn() ); }
		if (HX_FIELD_EQ(inName,"removeGamepad") ) { return ::hx::Val( removeGamepad_dyn() ); }
		if (HX_FIELD_EQ(inName,"unbindButtons") ) { return ::hx::Val( unbindButtons_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"keyboardScheme") ) { return ::hx::Val( keyboardScheme ); }
		if (HX_FIELD_EQ(inName,"get_UI_RIGHT_P") ) { return ::hx::Val( get_UI_RIGHT_P_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_UI_RIGHT_R") ) { return ::hx::Val( get_UI_RIGHT_R_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NOTE_RIGHT") ) { return ::hx::Val( get_NOTE_RIGHT_dyn() ); }
		if (HX_FIELD_EQ(inName,"replaceBinding") ) { return ::hx::Val( replaceBinding_dyn() ); }
		if (HX_FIELD_EQ(inName,"removeKeyboard") ) { return ::hx::Val( removeKeyboard_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"get_NOTE_LEFT_P") ) { return ::hx::Val( get_NOTE_LEFT_P_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NOTE_DOWN_P") ) { return ::hx::Val( get_NOTE_DOWN_P_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NOTE_LEFT_R") ) { return ::hx::Val( get_NOTE_LEFT_R_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NOTE_DOWN_R") ) { return ::hx::Val( get_NOTE_DOWN_R_dyn() ); }
		if (HX_FIELD_EQ(inName,"getDialogueName") ) { return ::hx::Val( getDialogueName_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_NOTE_RIGHT_P") ) { return ::hx::Val( get_NOTE_RIGHT_P_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_NOTE_RIGHT_R") ) { return ::hx::Val( get_NOTE_RIGHT_R_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"setKeyboardScheme") ) { return ::hx::Val( setKeyboardScheme_dyn() ); }
		if (HX_FIELD_EQ(inName,"addGamepadLiteral") ) { return ::hx::Val( addGamepadLiteral_dyn() ); }
		if (HX_FIELD_EQ(inName,"addDefaultGamepad") ) { return ::hx::Val( addDefaultGamepad_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"mergeKeyboardScheme") ) { return ::hx::Val( mergeKeyboardScheme_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"getActionFromControl") ) { return ::hx::Val( getActionFromControl_dyn() ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"getDialogueNameFromToken") ) { return ::hx::Val( getDialogueNameFromToken_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Controls_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"init") ) { outValue = init_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"addKeys") ) { outValue = addKeys_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"isDevice") ) { outValue = isDevice_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"isGamepad") ) { outValue = isGamepad_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"removeKeys") ) { outValue = removeKeys_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"addButtons") ) { outValue = addButtons_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"removeButtons") ) { outValue = removeButtons_dyn(); return true; }
	}
	return false;
}

::hx::Val Controls_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"_back") ) { _back=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"_ui_up") ) { _ui_up=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_pause") ) { _pause=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_reset") ) { _reset=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"byName") ) { byName=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"_ui_upP") ) { _ui_upP=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_ui_upR") ) { _ui_upR=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_accept") ) { _accept=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"_ui_left") ) { _ui_left=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_ui_down") ) { _ui_down=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_note_up") ) { _note_up=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_ui_right") ) { _ui_right=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_ui_leftP") ) { _ui_leftP=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_ui_downP") ) { _ui_downP=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_ui_leftR") ) { _ui_leftR=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_ui_downR") ) { _ui_downR=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_note_upP") ) { _note_upP=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_note_upR") ) { _note_upR=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"_ui_rightP") ) { _ui_rightP=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_ui_rightR") ) { _ui_rightR=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_note_left") ) { _note_left=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_note_down") ) { _note_down=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_note_right") ) { _note_right=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_note_leftP") ) { _note_leftP=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_note_downP") ) { _note_downP=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_note_leftR") ) { _note_leftR=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_note_downR") ) { _note_downR=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"_note_rightP") ) { _note_rightP=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_note_rightR") ) { _note_rightR=inValue.Cast<  ::flixel::input::actions::FlxActionDigital >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"gamepadsAdded") ) { gamepadsAdded=inValue.Cast< ::Array< int > >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"keyboardScheme") ) { keyboardScheme=inValue.Cast<  ::KeyboardScheme >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Controls_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_ui_up",e7,09,79,9f));
	outFields->push(HX_("_ui_left",93,a6,41,31));
	outFields->push(HX_("_ui_right",d0,27,3d,5f));
	outFields->push(HX_("_ui_down",ee,96,ff,2b));
	outFields->push(HX_("_ui_upP",89,a0,6f,ea));
	outFields->push(HX_("_ui_leftP",5d,1a,30,e8));
	outFields->push(HX_("_ui_rightP",80,ae,45,f6));
	outFields->push(HX_("_ui_downP",a2,79,a4,53));
	outFields->push(HX_("_ui_upR",8b,a0,6f,ea));
	outFields->push(HX_("_ui_leftR",5f,1a,30,e8));
	outFields->push(HX_("_ui_rightR",82,ae,45,f6));
	outFields->push(HX_("_ui_downR",a4,79,a4,53));
	outFields->push(HX_("_note_up",49,c1,14,87));
	outFields->push(HX_("_note_left",75,7a,c3,00));
	outFields->push(HX_("_note_right",ae,b9,54,21));
	outFields->push(HX_("_note_down",d0,6a,81,fb));
	outFields->push(HX_("_note_upP",e7,5e,14,ab));
	outFields->push(HX_("_note_leftP",3b,ac,47,aa));
	outFields->push(HX_("_note_rightP",e2,be,cd,08));
	outFields->push(HX_("_note_downP",80,0b,bc,15));
	outFields->push(HX_("_note_upR",e9,5e,14,ab));
	outFields->push(HX_("_note_leftR",3d,ac,47,aa));
	outFields->push(HX_("_note_rightR",e4,be,cd,08));
	outFields->push(HX_("_note_downR",82,0b,bc,15));
	outFields->push(HX_("_accept",a7,a4,7d,79));
	outFields->push(HX_("_back",06,f6,21,f4));
	outFields->push(HX_("_pause",37,1e,3f,b9));
	outFields->push(HX_("_reset",10,91,af,e2));
	outFields->push(HX_("byName",c2,2b,4e,0e));
	outFields->push(HX_("gamepadsAdded",ae,52,a9,94));
	outFields->push(HX_("keyboardScheme",2c,c8,f4,c5));
	outFields->push(HX_("UI_UP",a6,42,98,21));
	outFields->push(HX_("UI_LEFT",12,b1,2f,e4));
	outFields->push(HX_("UI_RIGHT",51,4c,98,3c));
	outFields->push(HX_("UI_DOWN",6d,a1,ed,de));
	outFields->push(HX_("UI_UP_P",37,0b,2b,ea));
	outFields->push(HX_("UI_LEFT_P",a3,ec,4b,14));
	outFields->push(HX_("UI_RIGHT_P",a2,15,81,cc));
	outFields->push(HX_("UI_DOWN_P",be,e9,aa,ae));
	outFields->push(HX_("UI_UP_R",39,0b,2b,ea));
	outFields->push(HX_("UI_LEFT_R",a5,ec,4b,14));
	outFields->push(HX_("UI_RIGHT_R",a4,15,81,cc));
	outFields->push(HX_("UI_DOWN_R",c0,e9,aa,ae));
	outFields->push(HX_("NOTE_UP",c8,83,48,cd));
	outFields->push(HX_("NOTE_LEFT",b4,fe,4b,0d));
	outFields->push(HX_("NOTE_RIGHT",6f,ec,3f,0c));
	outFields->push(HX_("NOTE_DOWN",0f,ef,09,08));
	outFields->push(HX_("NOTE_UP_P",d9,58,47,13));
	outFields->push(HX_("NOTE_LEFT_P",c5,66,50,f7));
	outFields->push(HX_("NOTE_RIGHT_P",40,79,67,8d));
	outFields->push(HX_("NOTE_DOWN_P",e0,63,af,91));
	outFields->push(HX_("NOTE_UP_R",db,58,47,13));
	outFields->push(HX_("NOTE_LEFT_R",c7,66,50,f7));
	outFields->push(HX_("NOTE_RIGHT_R",42,79,67,8d));
	outFields->push(HX_("NOTE_DOWN_R",e2,63,af,91));
	outFields->push(HX_("ACCEPT",08,3f,89,bd));
	outFields->push(HX_("BACK",27,a2,d1,2b));
	outFields->push(HX_("PAUSE",d6,0e,46,3b));
	outFields->push(HX_("RESET",af,81,b6,64));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Controls_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_ui_up),HX_("_ui_up",e7,09,79,9f)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_ui_left),HX_("_ui_left",93,a6,41,31)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_ui_right),HX_("_ui_right",d0,27,3d,5f)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_ui_down),HX_("_ui_down",ee,96,ff,2b)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_ui_upP),HX_("_ui_upP",89,a0,6f,ea)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_ui_leftP),HX_("_ui_leftP",5d,1a,30,e8)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_ui_rightP),HX_("_ui_rightP",80,ae,45,f6)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_ui_downP),HX_("_ui_downP",a2,79,a4,53)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_ui_upR),HX_("_ui_upR",8b,a0,6f,ea)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_ui_leftR),HX_("_ui_leftR",5f,1a,30,e8)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_ui_rightR),HX_("_ui_rightR",82,ae,45,f6)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_ui_downR),HX_("_ui_downR",a4,79,a4,53)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_note_up),HX_("_note_up",49,c1,14,87)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_note_left),HX_("_note_left",75,7a,c3,00)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_note_right),HX_("_note_right",ae,b9,54,21)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_note_down),HX_("_note_down",d0,6a,81,fb)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_note_upP),HX_("_note_upP",e7,5e,14,ab)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_note_leftP),HX_("_note_leftP",3b,ac,47,aa)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_note_rightP),HX_("_note_rightP",e2,be,cd,08)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_note_downP),HX_("_note_downP",80,0b,bc,15)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_note_upR),HX_("_note_upR",e9,5e,14,ab)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_note_leftR),HX_("_note_leftR",3d,ac,47,aa)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_note_rightR),HX_("_note_rightR",e4,be,cd,08)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_note_downR),HX_("_note_downR",82,0b,bc,15)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_accept),HX_("_accept",a7,a4,7d,79)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_back),HX_("_back",06,f6,21,f4)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_pause),HX_("_pause",37,1e,3f,b9)},
	{::hx::fsObject /*  ::flixel::input::actions::FlxActionDigital */ ,(int)offsetof(Controls_obj,_reset),HX_("_reset",10,91,af,e2)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Controls_obj,byName),HX_("byName",c2,2b,4e,0e)},
	{::hx::fsObject /* ::Array< int > */ ,(int)offsetof(Controls_obj,gamepadsAdded),HX_("gamepadsAdded",ae,52,a9,94)},
	{::hx::fsObject /*  ::KeyboardScheme */ ,(int)offsetof(Controls_obj,keyboardScheme),HX_("keyboardScheme",2c,c8,f4,c5)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Controls_obj_sStaticStorageInfo = 0;
#endif

static ::String Controls_obj_sMemberFields[] = {
	HX_("_ui_up",e7,09,79,9f),
	HX_("_ui_left",93,a6,41,31),
	HX_("_ui_right",d0,27,3d,5f),
	HX_("_ui_down",ee,96,ff,2b),
	HX_("_ui_upP",89,a0,6f,ea),
	HX_("_ui_leftP",5d,1a,30,e8),
	HX_("_ui_rightP",80,ae,45,f6),
	HX_("_ui_downP",a2,79,a4,53),
	HX_("_ui_upR",8b,a0,6f,ea),
	HX_("_ui_leftR",5f,1a,30,e8),
	HX_("_ui_rightR",82,ae,45,f6),
	HX_("_ui_downR",a4,79,a4,53),
	HX_("_note_up",49,c1,14,87),
	HX_("_note_left",75,7a,c3,00),
	HX_("_note_right",ae,b9,54,21),
	HX_("_note_down",d0,6a,81,fb),
	HX_("_note_upP",e7,5e,14,ab),
	HX_("_note_leftP",3b,ac,47,aa),
	HX_("_note_rightP",e2,be,cd,08),
	HX_("_note_downP",80,0b,bc,15),
	HX_("_note_upR",e9,5e,14,ab),
	HX_("_note_leftR",3d,ac,47,aa),
	HX_("_note_rightR",e4,be,cd,08),
	HX_("_note_downR",82,0b,bc,15),
	HX_("_accept",a7,a4,7d,79),
	HX_("_back",06,f6,21,f4),
	HX_("_pause",37,1e,3f,b9),
	HX_("_reset",10,91,af,e2),
	HX_("byName",c2,2b,4e,0e),
	HX_("gamepadsAdded",ae,52,a9,94),
	HX_("keyboardScheme",2c,c8,f4,c5),
	HX_("get_UI_UP",fd,9e,41,65),
	HX_("get_UI_LEFT",29,11,2a,6a),
	HX_("get_UI_RIGHT",5a,00,b2,f1),
	HX_("get_UI_DOWN",84,01,e8,64),
	HX_("get_UI_UP_P",4e,6b,25,70),
	HX_("get_UI_LEFT_P",7a,c0,af,d5),
	HX_("get_UI_RIGHT_P",eb,9d,76,42),
	HX_("get_UI_DOWN_P",95,bd,0e,70),
	HX_("get_UI_UP_R",50,6b,25,70),
	HX_("get_UI_LEFT_R",7c,c0,af,d5),
	HX_("get_UI_RIGHT_R",ed,9d,76,42),
	HX_("get_UI_DOWN_R",97,bd,0e,70),
	HX_("get_NOTE_UP",df,e3,42,53),
	HX_("get_NOTE_LEFT",8b,d2,af,ce),
	HX_("get_NOTE_RIGHT",b8,74,35,82),
	HX_("get_NOTE_DOWN",e6,c2,6d,c9),
	HX_("get_NOTE_UP_P",b0,2c,ab,d4),
	HX_("get_NOTE_LEFT_P",5c,1e,32,b8),
	HX_("get_NOTE_RIGHT_P",c9,65,06,92),
	HX_("get_NOTE_DOWN_P",77,1b,91,52),
	HX_("get_NOTE_UP_R",b2,2c,ab,d4),
	HX_("get_NOTE_LEFT_R",5e,1e,32,b8),
	HX_("get_NOTE_RIGHT_R",cb,65,06,92),
	HX_("get_NOTE_DOWN_R",79,1b,91,52),
	HX_("get_ACCEPT",d1,ae,10,ae),
	HX_("get_BACK",b0,5d,8c,ab),
	HX_("get_PAUSE",2d,6b,ef,7e),
	HX_("get_RESET",06,de,5f,a8),
	HX_("update",09,86,05,87),
	HX_("checkByName",aa,fe,5f,f0),
	HX_("getDialogueName",39,8d,0f,32),
	HX_("getDialogueNameFromToken",b6,d0,32,d3),
	HX_("getActionFromControl",87,31,3f,3d),
	HX_("forEachBound",34,ae,22,2f),
	HX_("replaceBinding",71,99,ae,a4),
	HX_("copyFrom",bf,0b,61,c8),
	HX_("copyTo",90,1c,33,c9),
	HX_("mergeKeyboardScheme",04,51,83,14),
	HX_("bindKeys",51,26,d1,b4),
	HX_("unbindKeys",aa,0d,95,3a),
	HX_("setKeyboardScheme",6e,4f,d6,5b),
	HX_("removeKeyboard",0b,f9,7f,32),
	HX_("addGamepad",80,0c,10,f1),
	HX_("addGamepadLiteral",cf,54,ef,a8),
	HX_("removeGamepad",bd,3c,40,62),
	HX_("addDefaultGamepad",e1,d7,98,02),
	HX_("bindButtons",04,66,e6,c6),
	HX_("unbindButtons",4b,dc,20,e8),
	HX_("getInputsFor",ea,35,e1,37),
	HX_("removeDevice",fa,77,a5,e0),
	::String(null()) };

::hx::Class Controls_obj::__mClass;

static ::String Controls_obj_sStaticFields[] = {
	HX_("init",10,3b,bb,45),
	HX_("addKeys",b5,24,44,83),
	HX_("removeKeys",58,1c,26,c4),
	HX_("addButtons",20,7e,ff,31),
	HX_("removeButtons",5d,ae,2f,a3),
	HX_("isDevice",20,78,e1,c9),
	HX_("isGamepad",d7,5d,84,8d),
	::String(null())
};

void Controls_obj::__register()
{
	Controls_obj _hx_dummy;
	Controls_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("Controls",96,42,6e,11);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Controls_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Controls_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Controls_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Controls_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Controls_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Controls_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}


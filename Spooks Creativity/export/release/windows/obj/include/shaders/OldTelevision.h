// Generated by Haxe 4.3.2
#ifndef INCLUDED_shaders_OldTelevision
#define INCLUDED_shaders_OldTelevision

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,graphics,tile,FlxGraphicsShader)
HX_DECLARE_CLASS2(openfl,display,GraphicsShader)
HX_DECLARE_CLASS2(openfl,display,Shader)
HX_DECLARE_CLASS1(shaders,OldTelevision)
HX_DECLARE_CLASS1(shaders,OldTelevisionShader)

namespace shaders{


class HXCPP_CLASS_ATTRIBUTES OldTelevision_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef OldTelevision_obj OBJ_;
		OldTelevision_obj();

	public:
		enum { _hx_ClassId = 0x00bd9f0b };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="shaders.OldTelevision")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"shaders.OldTelevision"); }
		static ::hx::ObjectPtr< OldTelevision_obj > __new();
		static ::hx::ObjectPtr< OldTelevision_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~OldTelevision_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("OldTelevision",f9,b4,7b,64); }

		 ::shaders::OldTelevisionShader shader;
		void update(Float elapsed);
		::Dynamic update_dyn();

};

} // end namespace shaders

#endif /* INCLUDED_shaders_OldTelevision */ 

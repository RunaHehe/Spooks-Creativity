// Generated by Haxe 4.3.2
#ifndef INCLUDED_modchart_NoteModifier
#define INCLUDED_modchart_NoteModifier

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_modchart_Modifier
#include <modchart/Modifier.h>
#endif
HX_DECLARE_CLASS1(modchart,ModManager)
HX_DECLARE_CLASS1(modchart,Modifier)
HX_DECLARE_CLASS1(modchart,ModifierType)
HX_DECLARE_CLASS1(modchart,NoteModifier)

namespace modchart{


class HXCPP_CLASS_ATTRIBUTES NoteModifier_obj : public  ::modchart::Modifier_obj
{
	public:
		typedef  ::modchart::Modifier_obj super;
		typedef NoteModifier_obj OBJ_;
		NoteModifier_obj();

	public:
		enum { _hx_ClassId = 0x0ce062e5 };

		void __construct( ::modchart::ModManager modMgr, ::modchart::Modifier parent);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="modchart.NoteModifier")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"modchart.NoteModifier"); }
		static ::hx::ObjectPtr< NoteModifier_obj > __new( ::modchart::ModManager modMgr, ::modchart::Modifier parent);
		static ::hx::ObjectPtr< NoteModifier_obj > __alloc(::hx::Ctx *_hx_ctx, ::modchart::ModManager modMgr, ::modchart::Modifier parent);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~NoteModifier_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("NoteModifier",89,3d,3a,34); }

		 ::modchart::ModifierType getModType();

};

} // end namespace modchart

#endif /* INCLUDED_modchart_NoteModifier */ 

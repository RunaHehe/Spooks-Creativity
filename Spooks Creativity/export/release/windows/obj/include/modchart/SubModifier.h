// Generated by Haxe 4.3.2
#ifndef INCLUDED_modchart_SubModifier
#define INCLUDED_modchart_SubModifier

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_modchart_Modifier
#include <modchart/Modifier.h>
#endif
HX_DECLARE_CLASS1(modchart,ModManager)
HX_DECLARE_CLASS1(modchart,Modifier)
HX_DECLARE_CLASS1(modchart,SubModifier)

namespace modchart{


class HXCPP_CLASS_ATTRIBUTES SubModifier_obj : public  ::modchart::Modifier_obj
{
	public:
		typedef  ::modchart::Modifier_obj super;
		typedef SubModifier_obj OBJ_;
		SubModifier_obj();

	public:
		enum { _hx_ClassId = 0x6f8612fb };

		void __construct(::String name, ::modchart::ModManager modMgr, ::modchart::Modifier parent);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="modchart.SubModifier")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"modchart.SubModifier"); }
		static ::hx::ObjectPtr< SubModifier_obj > __new(::String name, ::modchart::ModManager modMgr, ::modchart::Modifier parent);
		static ::hx::ObjectPtr< SubModifier_obj > __alloc(::hx::Ctx *_hx_ctx,::String name, ::modchart::ModManager modMgr, ::modchart::Modifier parent);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~SubModifier_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SubModifier",d7,58,09,5b); }

		::String name;
		::String getName();

		int getOrder();

		bool doesUpdate();

};

} // end namespace modchart

#endif /* INCLUDED_modchart_SubModifier */ 

// Generated by Haxe 4.3.2
#ifndef INCLUDED_hxvlc_util_macros_Define
#define INCLUDED_hxvlc_util_macros_Define

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(hxvlc,util,macros,Define)

namespace hxvlc{
namespace util{
namespace macros{


class HXCPP_CLASS_ATTRIBUTES Define_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Define_obj OBJ_;
		Define_obj();

	public:
		enum { _hx_ClassId = 0x2ec068e1 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="hxvlc.util.macros.Define")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"hxvlc.util.macros.Define"); }

		inline static ::hx::ObjectPtr< Define_obj > __new() {
			::hx::ObjectPtr< Define_obj > __this = new Define_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Define_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Define_obj *__this = (Define_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Define_obj), false, "hxvlc.util.macros.Define"));
			*(void **)__this = Define_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Define_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Define",5b,f0,78,9b); }

};

} // end namespace hxvlc
} // end namespace util
} // end namespace macros

#endif /* INCLUDED_hxvlc_util_macros_Define */ 
